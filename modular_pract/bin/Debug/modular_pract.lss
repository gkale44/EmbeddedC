
bin\Debug\modular_pract.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000013e4  00001478  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00001480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 000001e0  00000000  00000000  00001483  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000024c  00000000  00000000  00001663  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000021db  00000000  00000000  000018af  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000117e  00000000  00000000  00003a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000142b  00000000  00000000  00004c08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000230  00000000  00000000  00006034  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000399  00000000  00000000  00006264  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  000065fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00006dcb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__vector_1>
       8:	0c 94 da 02 	jmp	0x5b4	; 0x5b4 <__vector_2>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 ee       	ldi	r30, 0xE4	; 228
      7c:	f3 e1       	ldi	r31, 0x13	; 19
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 91 00 	call	0x122	; 0x122 <main>
      8e:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <GPIO>:

 #include "GPIO.h"
 #include <avr/io.h>

 void GPIO()
 {
      96:	df 93       	push	r29
      98:	cf 93       	push	r28
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
     SET_BIT(PORTD,PD1);
      9e:	ab e2       	ldi	r26, 0x2B	; 43
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	eb e2       	ldi	r30, 0x2B	; 43
      a4:	f0 e0       	ldi	r31, 0x00	; 0
      a6:	80 81       	ld	r24, Z
      a8:	82 60       	ori	r24, 0x02	; 2
      aa:	8c 93       	st	X, r24
     SET_BIT(PORTD,PD2);
      ac:	ab e2       	ldi	r26, 0x2B	; 43
      ae:	b0 e0       	ldi	r27, 0x00	; 0
      b0:	eb e2       	ldi	r30, 0x2B	; 43
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	84 60       	ori	r24, 0x04	; 4
      b8:	8c 93       	st	X, r24
     SET_BIT(PORTD,PD3);
      ba:	ab e2       	ldi	r26, 0x2B	; 43
      bc:	b0 e0       	ldi	r27, 0x00	; 0
      be:	eb e2       	ldi	r30, 0x2B	; 43
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	80 81       	ld	r24, Z
      c4:	88 60       	ori	r24, 0x08	; 8
      c6:	8c 93       	st	X, r24

     CLR_BIT(DDRD,PD1);
      c8:	aa e2       	ldi	r26, 0x2A	; 42
      ca:	b0 e0       	ldi	r27, 0x00	; 0
      cc:	ea e2       	ldi	r30, 0x2A	; 42
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	80 81       	ld	r24, Z
      d2:	8d 7f       	andi	r24, 0xFD	; 253
      d4:	8c 93       	st	X, r24
     CLR_BIT(DDRD,PD2);
      d6:	aa e2       	ldi	r26, 0x2A	; 42
      d8:	b0 e0       	ldi	r27, 0x00	; 0
      da:	ea e2       	ldi	r30, 0x2A	; 42
      dc:	f0 e0       	ldi	r31, 0x00	; 0
      de:	80 81       	ld	r24, Z
      e0:	8b 7f       	andi	r24, 0xFB	; 251
      e2:	8c 93       	st	X, r24
     CLR_BIT(DDRD,PD3);
      e4:	aa e2       	ldi	r26, 0x2A	; 42
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	ea e2       	ldi	r30, 0x2A	; 42
      ea:	f0 e0       	ldi	r31, 0x00	; 0
      ec:	80 81       	ld	r24, Z
      ee:	87 7f       	andi	r24, 0xF7	; 247
      f0:	8c 93       	st	X, r24

     SET_BIT(DDRD,PD5);
      f2:	aa e2       	ldi	r26, 0x2A	; 42
      f4:	b0 e0       	ldi	r27, 0x00	; 0
      f6:	ea e2       	ldi	r30, 0x2A	; 42
      f8:	f0 e0       	ldi	r31, 0x00	; 0
      fa:	80 81       	ld	r24, Z
      fc:	80 62       	ori	r24, 0x20	; 32
      fe:	8c 93       	st	X, r24
     SET_BIT(DDRD,PD6);
     100:	aa e2       	ldi	r26, 0x2A	; 42
     102:	b0 e0       	ldi	r27, 0x00	; 0
     104:	ea e2       	ldi	r30, 0x2A	; 42
     106:	f0 e0       	ldi	r31, 0x00	; 0
     108:	80 81       	ld	r24, Z
     10a:	80 64       	ori	r24, 0x40	; 64
     10c:	8c 93       	st	X, r24
     SET_BIT(DDRD,PD7);
     10e:	aa e2       	ldi	r26, 0x2A	; 42
     110:	b0 e0       	ldi	r27, 0x00	; 0
     112:	ea e2       	ldi	r30, 0x2A	; 42
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	80 81       	ld	r24, Z
     118:	80 68       	ori	r24, 0x80	; 128
     11a:	8c 93       	st	X, r24


 }
     11c:	cf 91       	pop	r28
     11e:	df 91       	pop	r29
     120:	08 95       	ret

00000122 <main>:
#include "GPIO.h"
#include "switch1.h"
#include "switch2.h"
#include "switch3.h"
int main(void)
{
     122:	df 93       	push	r29
     124:	cf 93       	push	r28
     126:	0f 92       	push	r0
     128:	cd b7       	in	r28, 0x3d	; 61
     12a:	de b7       	in	r29, 0x3e	; 62
    char i=0;
     12c:	19 82       	std	Y+1, r1	; 0x01
    GPIO();
     12e:	0e 94 4b 00 	call	0x96	; 0x96 <GPIO>
    switch2();
     132:	0e 94 25 04 	call	0x84a	; 0x84a <switch2>
    switch3();
     136:	0e 94 42 04 	call	0x884	; 0x884 <switch3>
while(1)
    {
        if(TCNT0>=255)
     13a:	e6 e4       	ldi	r30, 0x46	; 70
     13c:	f0 e0       	ldi	r31, 0x00	; 0
     13e:	80 81       	ld	r24, Z
     140:	8f 3f       	cpi	r24, 0xFF	; 255
     142:	d9 f7       	brne	.-10     	; 0x13a <main+0x18>
        {
        if(i>61)
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	8e 33       	cpi	r24, 0x3E	; 62
     148:	c4 f3       	brlt	.-16     	; 0x13a <main+0x18>
        {
            PORTD^=(1<<PD5);
     14a:	ab e2       	ldi	r26, 0x2B	; 43
     14c:	b0 e0       	ldi	r27, 0x00	; 0
     14e:	eb e2       	ldi	r30, 0x2B	; 43
     150:	f0 e0       	ldi	r31, 0x00	; 0
     152:	90 81       	ld	r25, Z
     154:	80 e2       	ldi	r24, 0x20	; 32
     156:	89 27       	eor	r24, r25
     158:	8c 93       	st	X, r24
            TCNT0=0;
     15a:	e6 e4       	ldi	r30, 0x46	; 70
     15c:	f0 e0       	ldi	r31, 0x00	; 0
     15e:	10 82       	st	Z, r1
     160:	ec cf       	rjmp	.-40     	; 0x13a <main+0x18>

00000162 <Timer0_init_>:
        }
    }
}

void Timer0_init_(TIMER0_OVF)
{
     162:	df 93       	push	r29
     164:	cf 93       	push	r28
     166:	00 d0       	rcall	.+0      	; 0x168 <Timer0_init_+0x6>
     168:	cd b7       	in	r28, 0x3d	; 61
     16a:	de b7       	in	r29, 0x3e	; 62
     16c:	9a 83       	std	Y+2, r25	; 0x02
     16e:	89 83       	std	Y+1, r24	; 0x01
    TCCR0B=((1<<CS00)|(1<<CS02));
     170:	e5 e4       	ldi	r30, 0x45	; 69
     172:	f0 e0       	ldi	r31, 0x00	; 0
     174:	85 e0       	ldi	r24, 0x05	; 5
     176:	80 83       	st	Z, r24
    TCCR0B&=(1<<CS01);
     178:	a5 e4       	ldi	r26, 0x45	; 69
     17a:	b0 e0       	ldi	r27, 0x00	; 0
     17c:	e5 e4       	ldi	r30, 0x45	; 69
     17e:	f0 e0       	ldi	r31, 0x00	; 0
     180:	80 81       	ld	r24, Z
     182:	82 70       	andi	r24, 0x02	; 2
     184:	8c 93       	st	X, r24
}
     186:	0f 90       	pop	r0
     188:	0f 90       	pop	r0
     18a:	cf 91       	pop	r28
     18c:	df 91       	pop	r29
     18e:	08 95       	ret

00000190 <__vector_1>:
ISR (INT0_vect)
{
     190:	1f 92       	push	r1
     192:	0f 92       	push	r0
     194:	0f b6       	in	r0, 0x3f	; 63
     196:	0f 92       	push	r0
     198:	11 24       	eor	r1, r1
     19a:	2f 93       	push	r18
     19c:	3f 93       	push	r19
     19e:	4f 93       	push	r20
     1a0:	5f 93       	push	r21
     1a2:	6f 93       	push	r22
     1a4:	7f 93       	push	r23
     1a6:	8f 93       	push	r24
     1a8:	9f 93       	push	r25
     1aa:	af 93       	push	r26
     1ac:	bf 93       	push	r27
     1ae:	ef 93       	push	r30
     1b0:	ff 93       	push	r31
     1b2:	df 93       	push	r29
     1b4:	cf 93       	push	r28
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	e8 97       	sbiw	r28, 0x38	; 56
     1bc:	de bf       	out	0x3e, r29	; 62
     1be:	cd bf       	out	0x3d, r28	; 61
    SET_BIT(PORTD,PD6);
     1c0:	ab e2       	ldi	r26, 0x2B	; 43
     1c2:	b0 e0       	ldi	r27, 0x00	; 0
     1c4:	eb e2       	ldi	r30, 0x2B	; 43
     1c6:	f0 e0       	ldi	r31, 0x00	; 0
     1c8:	80 81       	ld	r24, Z
     1ca:	80 64       	ori	r24, 0x40	; 64
     1cc:	8c 93       	st	X, r24
     1ce:	80 e0       	ldi	r24, 0x00	; 0
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	aa e7       	ldi	r26, 0x7A	; 122
     1d4:	b4 e4       	ldi	r27, 0x44	; 68
     1d6:	8d ab       	std	Y+53, r24	; 0x35
     1d8:	9e ab       	std	Y+54, r25	; 0x36
     1da:	af ab       	std	Y+55, r26	; 0x37
     1dc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     1de:	6d a9       	ldd	r22, Y+53	; 0x35
     1e0:	7e a9       	ldd	r23, Y+54	; 0x36
     1e2:	8f a9       	ldd	r24, Y+55	; 0x37
     1e4:	98 ad       	ldd	r25, Y+56	; 0x38
     1e6:	20 e0       	ldi	r18, 0x00	; 0
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	4a e7       	ldi	r20, 0x7A	; 122
     1ec:	55 e4       	ldi	r21, 0x45	; 69
     1ee:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     1f2:	dc 01       	movw	r26, r24
     1f4:	cb 01       	movw	r24, r22
     1f6:	89 ab       	std	Y+49, r24	; 0x31
     1f8:	9a ab       	std	Y+50, r25	; 0x32
     1fa:	ab ab       	std	Y+51, r26	; 0x33
     1fc:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     1fe:	69 a9       	ldd	r22, Y+49	; 0x31
     200:	7a a9       	ldd	r23, Y+50	; 0x32
     202:	8b a9       	ldd	r24, Y+51	; 0x33
     204:	9c a9       	ldd	r25, Y+52	; 0x34
     206:	20 e0       	ldi	r18, 0x00	; 0
     208:	30 e0       	ldi	r19, 0x00	; 0
     20a:	40 e8       	ldi	r20, 0x80	; 128
     20c:	5f e3       	ldi	r21, 0x3F	; 63
     20e:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__ltsf2>
     212:	88 23       	and	r24, r24
     214:	2c f4       	brge	.+10     	; 0x220 <__vector_1+0x90>
		__ticks = 1;
     216:	81 e0       	ldi	r24, 0x01	; 1
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	98 ab       	std	Y+48, r25	; 0x30
     21c:	8f a7       	std	Y+47, r24	; 0x2f
     21e:	3f c0       	rjmp	.+126    	; 0x29e <__vector_1+0x10e>
	else if (__tmp > 65535)
     220:	69 a9       	ldd	r22, Y+49	; 0x31
     222:	7a a9       	ldd	r23, Y+50	; 0x32
     224:	8b a9       	ldd	r24, Y+51	; 0x33
     226:	9c a9       	ldd	r25, Y+52	; 0x34
     228:	20 e0       	ldi	r18, 0x00	; 0
     22a:	3f ef       	ldi	r19, 0xFF	; 255
     22c:	4f e7       	ldi	r20, 0x7F	; 127
     22e:	57 e4       	ldi	r21, 0x47	; 71
     230:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__gtsf2>
     234:	18 16       	cp	r1, r24
     236:	4c f5       	brge	.+82     	; 0x28a <__vector_1+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     238:	6d a9       	ldd	r22, Y+53	; 0x35
     23a:	7e a9       	ldd	r23, Y+54	; 0x36
     23c:	8f a9       	ldd	r24, Y+55	; 0x37
     23e:	98 ad       	ldd	r25, Y+56	; 0x38
     240:	20 e0       	ldi	r18, 0x00	; 0
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e2       	ldi	r20, 0x20	; 32
     246:	51 e4       	ldi	r21, 0x41	; 65
     248:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     24c:	dc 01       	movw	r26, r24
     24e:	cb 01       	movw	r24, r22
     250:	bc 01       	movw	r22, r24
     252:	cd 01       	movw	r24, r26
     254:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     258:	dc 01       	movw	r26, r24
     25a:	cb 01       	movw	r24, r22
     25c:	98 ab       	std	Y+48, r25	; 0x30
     25e:	8f a7       	std	Y+47, r24	; 0x2f
     260:	0f c0       	rjmp	.+30     	; 0x280 <__vector_1+0xf0>
     262:	80 e9       	ldi	r24, 0x90	; 144
     264:	91 e0       	ldi	r25, 0x01	; 1
     266:	9e a7       	std	Y+46, r25	; 0x2e
     268:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     26a:	8d a5       	ldd	r24, Y+45	; 0x2d
     26c:	9e a5       	ldd	r25, Y+46	; 0x2e
     26e:	01 97       	sbiw	r24, 0x01	; 1
     270:	f1 f7       	brne	.-4      	; 0x26e <__vector_1+0xde>
     272:	9e a7       	std	Y+46, r25	; 0x2e
     274:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     276:	8f a5       	ldd	r24, Y+47	; 0x2f
     278:	98 a9       	ldd	r25, Y+48	; 0x30
     27a:	01 97       	sbiw	r24, 0x01	; 1
     27c:	98 ab       	std	Y+48, r25	; 0x30
     27e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     280:	8f a5       	ldd	r24, Y+47	; 0x2f
     282:	98 a9       	ldd	r25, Y+48	; 0x30
     284:	00 97       	sbiw	r24, 0x00	; 0
     286:	69 f7       	brne	.-38     	; 0x262 <__vector_1+0xd2>
     288:	14 c0       	rjmp	.+40     	; 0x2b2 <__vector_1+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     28a:	69 a9       	ldd	r22, Y+49	; 0x31
     28c:	7a a9       	ldd	r23, Y+50	; 0x32
     28e:	8b a9       	ldd	r24, Y+51	; 0x33
     290:	9c a9       	ldd	r25, Y+52	; 0x34
     292:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     296:	dc 01       	movw	r26, r24
     298:	cb 01       	movw	r24, r22
     29a:	98 ab       	std	Y+48, r25	; 0x30
     29c:	8f a7       	std	Y+47, r24	; 0x2f
     29e:	8f a5       	ldd	r24, Y+47	; 0x2f
     2a0:	98 a9       	ldd	r25, Y+48	; 0x30
     2a2:	9c a7       	std	Y+44, r25	; 0x2c
     2a4:	8b a7       	std	Y+43, r24	; 0x2b
     2a6:	8b a5       	ldd	r24, Y+43	; 0x2b
     2a8:	9c a5       	ldd	r25, Y+44	; 0x2c
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <__vector_1+0x11a>
     2ae:	9c a7       	std	Y+44, r25	; 0x2c
     2b0:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(1000);
    CLR_BIT(PORTD,PD6);
     2b2:	ab e2       	ldi	r26, 0x2B	; 43
     2b4:	b0 e0       	ldi	r27, 0x00	; 0
     2b6:	eb e2       	ldi	r30, 0x2B	; 43
     2b8:	f0 e0       	ldi	r31, 0x00	; 0
     2ba:	80 81       	ld	r24, Z
     2bc:	8f 7b       	andi	r24, 0xBF	; 191
     2be:	8c 93       	st	X, r24
     2c0:	80 e0       	ldi	r24, 0x00	; 0
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	aa e7       	ldi	r26, 0x7A	; 122
     2c6:	b4 e4       	ldi	r27, 0x44	; 68
     2c8:	8f a3       	std	Y+39, r24	; 0x27
     2ca:	98 a7       	std	Y+40, r25	; 0x28
     2cc:	a9 a7       	std	Y+41, r26	; 0x29
     2ce:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     2d0:	6f a1       	ldd	r22, Y+39	; 0x27
     2d2:	78 a5       	ldd	r23, Y+40	; 0x28
     2d4:	89 a5       	ldd	r24, Y+41	; 0x29
     2d6:	9a a5       	ldd	r25, Y+42	; 0x2a
     2d8:	20 e0       	ldi	r18, 0x00	; 0
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	4a e7       	ldi	r20, 0x7A	; 122
     2de:	55 e4       	ldi	r21, 0x45	; 69
     2e0:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     2e4:	dc 01       	movw	r26, r24
     2e6:	cb 01       	movw	r24, r22
     2e8:	8b a3       	std	Y+35, r24	; 0x23
     2ea:	9c a3       	std	Y+36, r25	; 0x24
     2ec:	ad a3       	std	Y+37, r26	; 0x25
     2ee:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     2f0:	6b a1       	ldd	r22, Y+35	; 0x23
     2f2:	7c a1       	ldd	r23, Y+36	; 0x24
     2f4:	8d a1       	ldd	r24, Y+37	; 0x25
     2f6:	9e a1       	ldd	r25, Y+38	; 0x26
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	40 e8       	ldi	r20, 0x80	; 128
     2fe:	5f e3       	ldi	r21, 0x3F	; 63
     300:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__ltsf2>
     304:	88 23       	and	r24, r24
     306:	2c f4       	brge	.+10     	; 0x312 <__vector_1+0x182>
		__ticks = 1;
     308:	81 e0       	ldi	r24, 0x01	; 1
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	9a a3       	std	Y+34, r25	; 0x22
     30e:	89 a3       	std	Y+33, r24	; 0x21
     310:	3f c0       	rjmp	.+126    	; 0x390 <__vector_1+0x200>
	else if (__tmp > 65535)
     312:	6b a1       	ldd	r22, Y+35	; 0x23
     314:	7c a1       	ldd	r23, Y+36	; 0x24
     316:	8d a1       	ldd	r24, Y+37	; 0x25
     318:	9e a1       	ldd	r25, Y+38	; 0x26
     31a:	20 e0       	ldi	r18, 0x00	; 0
     31c:	3f ef       	ldi	r19, 0xFF	; 255
     31e:	4f e7       	ldi	r20, 0x7F	; 127
     320:	57 e4       	ldi	r21, 0x47	; 71
     322:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__gtsf2>
     326:	18 16       	cp	r1, r24
     328:	4c f5       	brge	.+82     	; 0x37c <__vector_1+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     32a:	6f a1       	ldd	r22, Y+39	; 0x27
     32c:	78 a5       	ldd	r23, Y+40	; 0x28
     32e:	89 a5       	ldd	r24, Y+41	; 0x29
     330:	9a a5       	ldd	r25, Y+42	; 0x2a
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	40 e2       	ldi	r20, 0x20	; 32
     338:	51 e4       	ldi	r21, 0x41	; 65
     33a:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     33e:	dc 01       	movw	r26, r24
     340:	cb 01       	movw	r24, r22
     342:	bc 01       	movw	r22, r24
     344:	cd 01       	movw	r24, r26
     346:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     34a:	dc 01       	movw	r26, r24
     34c:	cb 01       	movw	r24, r22
     34e:	9a a3       	std	Y+34, r25	; 0x22
     350:	89 a3       	std	Y+33, r24	; 0x21
     352:	0f c0       	rjmp	.+30     	; 0x372 <__vector_1+0x1e2>
     354:	80 e9       	ldi	r24, 0x90	; 144
     356:	91 e0       	ldi	r25, 0x01	; 1
     358:	98 a3       	std	Y+32, r25	; 0x20
     35a:	8f 8f       	std	Y+31, r24	; 0x1f
     35c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     35e:	98 a1       	ldd	r25, Y+32	; 0x20
     360:	01 97       	sbiw	r24, 0x01	; 1
     362:	f1 f7       	brne	.-4      	; 0x360 <__vector_1+0x1d0>
     364:	98 a3       	std	Y+32, r25	; 0x20
     366:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     368:	89 a1       	ldd	r24, Y+33	; 0x21
     36a:	9a a1       	ldd	r25, Y+34	; 0x22
     36c:	01 97       	sbiw	r24, 0x01	; 1
     36e:	9a a3       	std	Y+34, r25	; 0x22
     370:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     372:	89 a1       	ldd	r24, Y+33	; 0x21
     374:	9a a1       	ldd	r25, Y+34	; 0x22
     376:	00 97       	sbiw	r24, 0x00	; 0
     378:	69 f7       	brne	.-38     	; 0x354 <__vector_1+0x1c4>
     37a:	14 c0       	rjmp	.+40     	; 0x3a4 <__vector_1+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     37c:	6b a1       	ldd	r22, Y+35	; 0x23
     37e:	7c a1       	ldd	r23, Y+36	; 0x24
     380:	8d a1       	ldd	r24, Y+37	; 0x25
     382:	9e a1       	ldd	r25, Y+38	; 0x26
     384:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     388:	dc 01       	movw	r26, r24
     38a:	cb 01       	movw	r24, r22
     38c:	9a a3       	std	Y+34, r25	; 0x22
     38e:	89 a3       	std	Y+33, r24	; 0x21
     390:	89 a1       	ldd	r24, Y+33	; 0x21
     392:	9a a1       	ldd	r25, Y+34	; 0x22
     394:	9e 8f       	std	Y+30, r25	; 0x1e
     396:	8d 8f       	std	Y+29, r24	; 0x1d
     398:	8d 8d       	ldd	r24, Y+29	; 0x1d
     39a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	f1 f7       	brne	.-4      	; 0x39c <__vector_1+0x20c>
     3a0:	9e 8f       	std	Y+30, r25	; 0x1e
     3a2:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(1000);
    SET_BIT(PORTD,PD6);
     3a4:	ab e2       	ldi	r26, 0x2B	; 43
     3a6:	b0 e0       	ldi	r27, 0x00	; 0
     3a8:	eb e2       	ldi	r30, 0x2B	; 43
     3aa:	f0 e0       	ldi	r31, 0x00	; 0
     3ac:	80 81       	ld	r24, Z
     3ae:	80 64       	ori	r24, 0x40	; 64
     3b0:	8c 93       	st	X, r24
     3b2:	80 e0       	ldi	r24, 0x00	; 0
     3b4:	90 e0       	ldi	r25, 0x00	; 0
     3b6:	aa e7       	ldi	r26, 0x7A	; 122
     3b8:	b4 e4       	ldi	r27, 0x44	; 68
     3ba:	89 8f       	std	Y+25, r24	; 0x19
     3bc:	9a 8f       	std	Y+26, r25	; 0x1a
     3be:	ab 8f       	std	Y+27, r26	; 0x1b
     3c0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     3c2:	69 8d       	ldd	r22, Y+25	; 0x19
     3c4:	7a 8d       	ldd	r23, Y+26	; 0x1a
     3c6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3c8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	4a e7       	ldi	r20, 0x7A	; 122
     3d0:	55 e4       	ldi	r21, 0x45	; 69
     3d2:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     3d6:	dc 01       	movw	r26, r24
     3d8:	cb 01       	movw	r24, r22
     3da:	8d 8b       	std	Y+21, r24	; 0x15
     3dc:	9e 8b       	std	Y+22, r25	; 0x16
     3de:	af 8b       	std	Y+23, r26	; 0x17
     3e0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     3e2:	6d 89       	ldd	r22, Y+21	; 0x15
     3e4:	7e 89       	ldd	r23, Y+22	; 0x16
     3e6:	8f 89       	ldd	r24, Y+23	; 0x17
     3e8:	98 8d       	ldd	r25, Y+24	; 0x18
     3ea:	20 e0       	ldi	r18, 0x00	; 0
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	40 e8       	ldi	r20, 0x80	; 128
     3f0:	5f e3       	ldi	r21, 0x3F	; 63
     3f2:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__ltsf2>
     3f6:	88 23       	and	r24, r24
     3f8:	2c f4       	brge	.+10     	; 0x404 <__vector_1+0x274>
		__ticks = 1;
     3fa:	81 e0       	ldi	r24, 0x01	; 1
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	9c 8b       	std	Y+20, r25	; 0x14
     400:	8b 8b       	std	Y+19, r24	; 0x13
     402:	3f c0       	rjmp	.+126    	; 0x482 <__vector_1+0x2f2>
	else if (__tmp > 65535)
     404:	6d 89       	ldd	r22, Y+21	; 0x15
     406:	7e 89       	ldd	r23, Y+22	; 0x16
     408:	8f 89       	ldd	r24, Y+23	; 0x17
     40a:	98 8d       	ldd	r25, Y+24	; 0x18
     40c:	20 e0       	ldi	r18, 0x00	; 0
     40e:	3f ef       	ldi	r19, 0xFF	; 255
     410:	4f e7       	ldi	r20, 0x7F	; 127
     412:	57 e4       	ldi	r21, 0x47	; 71
     414:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__gtsf2>
     418:	18 16       	cp	r1, r24
     41a:	4c f5       	brge	.+82     	; 0x46e <__vector_1+0x2de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     41c:	69 8d       	ldd	r22, Y+25	; 0x19
     41e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     420:	8b 8d       	ldd	r24, Y+27	; 0x1b
     422:	9c 8d       	ldd	r25, Y+28	; 0x1c
     424:	20 e0       	ldi	r18, 0x00	; 0
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	40 e2       	ldi	r20, 0x20	; 32
     42a:	51 e4       	ldi	r21, 0x41	; 65
     42c:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     430:	dc 01       	movw	r26, r24
     432:	cb 01       	movw	r24, r22
     434:	bc 01       	movw	r22, r24
     436:	cd 01       	movw	r24, r26
     438:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     43c:	dc 01       	movw	r26, r24
     43e:	cb 01       	movw	r24, r22
     440:	9c 8b       	std	Y+20, r25	; 0x14
     442:	8b 8b       	std	Y+19, r24	; 0x13
     444:	0f c0       	rjmp	.+30     	; 0x464 <__vector_1+0x2d4>
     446:	80 e9       	ldi	r24, 0x90	; 144
     448:	91 e0       	ldi	r25, 0x01	; 1
     44a:	9a 8b       	std	Y+18, r25	; 0x12
     44c:	89 8b       	std	Y+17, r24	; 0x11
     44e:	89 89       	ldd	r24, Y+17	; 0x11
     450:	9a 89       	ldd	r25, Y+18	; 0x12
     452:	01 97       	sbiw	r24, 0x01	; 1
     454:	f1 f7       	brne	.-4      	; 0x452 <__vector_1+0x2c2>
     456:	9a 8b       	std	Y+18, r25	; 0x12
     458:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     45a:	8b 89       	ldd	r24, Y+19	; 0x13
     45c:	9c 89       	ldd	r25, Y+20	; 0x14
     45e:	01 97       	sbiw	r24, 0x01	; 1
     460:	9c 8b       	std	Y+20, r25	; 0x14
     462:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     464:	8b 89       	ldd	r24, Y+19	; 0x13
     466:	9c 89       	ldd	r25, Y+20	; 0x14
     468:	00 97       	sbiw	r24, 0x00	; 0
     46a:	69 f7       	brne	.-38     	; 0x446 <__vector_1+0x2b6>
     46c:	14 c0       	rjmp	.+40     	; 0x496 <__vector_1+0x306>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     46e:	6d 89       	ldd	r22, Y+21	; 0x15
     470:	7e 89       	ldd	r23, Y+22	; 0x16
     472:	8f 89       	ldd	r24, Y+23	; 0x17
     474:	98 8d       	ldd	r25, Y+24	; 0x18
     476:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     47a:	dc 01       	movw	r26, r24
     47c:	cb 01       	movw	r24, r22
     47e:	9c 8b       	std	Y+20, r25	; 0x14
     480:	8b 8b       	std	Y+19, r24	; 0x13
     482:	8b 89       	ldd	r24, Y+19	; 0x13
     484:	9c 89       	ldd	r25, Y+20	; 0x14
     486:	98 8b       	std	Y+16, r25	; 0x10
     488:	8f 87       	std	Y+15, r24	; 0x0f
     48a:	8f 85       	ldd	r24, Y+15	; 0x0f
     48c:	98 89       	ldd	r25, Y+16	; 0x10
     48e:	01 97       	sbiw	r24, 0x01	; 1
     490:	f1 f7       	brne	.-4      	; 0x48e <__vector_1+0x2fe>
     492:	98 8b       	std	Y+16, r25	; 0x10
     494:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(1000);
    CLR_BIT(PORTD,PD6);
     496:	ab e2       	ldi	r26, 0x2B	; 43
     498:	b0 e0       	ldi	r27, 0x00	; 0
     49a:	eb e2       	ldi	r30, 0x2B	; 43
     49c:	f0 e0       	ldi	r31, 0x00	; 0
     49e:	80 81       	ld	r24, Z
     4a0:	8f 7b       	andi	r24, 0xBF	; 191
     4a2:	8c 93       	st	X, r24
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	aa e7       	ldi	r26, 0x7A	; 122
     4aa:	b4 e4       	ldi	r27, 0x44	; 68
     4ac:	8b 87       	std	Y+11, r24	; 0x0b
     4ae:	9c 87       	std	Y+12, r25	; 0x0c
     4b0:	ad 87       	std	Y+13, r26	; 0x0d
     4b2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4b4:	6b 85       	ldd	r22, Y+11	; 0x0b
     4b6:	7c 85       	ldd	r23, Y+12	; 0x0c
     4b8:	8d 85       	ldd	r24, Y+13	; 0x0d
     4ba:	9e 85       	ldd	r25, Y+14	; 0x0e
     4bc:	20 e0       	ldi	r18, 0x00	; 0
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	4a e7       	ldi	r20, 0x7A	; 122
     4c2:	55 e4       	ldi	r21, 0x45	; 69
     4c4:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     4c8:	dc 01       	movw	r26, r24
     4ca:	cb 01       	movw	r24, r22
     4cc:	8f 83       	std	Y+7, r24	; 0x07
     4ce:	98 87       	std	Y+8, r25	; 0x08
     4d0:	a9 87       	std	Y+9, r26	; 0x09
     4d2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     4d4:	6f 81       	ldd	r22, Y+7	; 0x07
     4d6:	78 85       	ldd	r23, Y+8	; 0x08
     4d8:	89 85       	ldd	r24, Y+9	; 0x09
     4da:	9a 85       	ldd	r25, Y+10	; 0x0a
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	30 e0       	ldi	r19, 0x00	; 0
     4e0:	40 e8       	ldi	r20, 0x80	; 128
     4e2:	5f e3       	ldi	r21, 0x3F	; 63
     4e4:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__ltsf2>
     4e8:	88 23       	and	r24, r24
     4ea:	2c f4       	brge	.+10     	; 0x4f6 <__vector_1+0x366>
		__ticks = 1;
     4ec:	81 e0       	ldi	r24, 0x01	; 1
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	9e 83       	std	Y+6, r25	; 0x06
     4f2:	8d 83       	std	Y+5, r24	; 0x05
     4f4:	3f c0       	rjmp	.+126    	; 0x574 <__vector_1+0x3e4>
	else if (__tmp > 65535)
     4f6:	6f 81       	ldd	r22, Y+7	; 0x07
     4f8:	78 85       	ldd	r23, Y+8	; 0x08
     4fa:	89 85       	ldd	r24, Y+9	; 0x09
     4fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	3f ef       	ldi	r19, 0xFF	; 255
     502:	4f e7       	ldi	r20, 0x7F	; 127
     504:	57 e4       	ldi	r21, 0x47	; 71
     506:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__gtsf2>
     50a:	18 16       	cp	r1, r24
     50c:	4c f5       	brge	.+82     	; 0x560 <__vector_1+0x3d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     50e:	6b 85       	ldd	r22, Y+11	; 0x0b
     510:	7c 85       	ldd	r23, Y+12	; 0x0c
     512:	8d 85       	ldd	r24, Y+13	; 0x0d
     514:	9e 85       	ldd	r25, Y+14	; 0x0e
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	40 e2       	ldi	r20, 0x20	; 32
     51c:	51 e4       	ldi	r21, 0x41	; 65
     51e:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     522:	dc 01       	movw	r26, r24
     524:	cb 01       	movw	r24, r22
     526:	bc 01       	movw	r22, r24
     528:	cd 01       	movw	r24, r26
     52a:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     52e:	dc 01       	movw	r26, r24
     530:	cb 01       	movw	r24, r22
     532:	9e 83       	std	Y+6, r25	; 0x06
     534:	8d 83       	std	Y+5, r24	; 0x05
     536:	0f c0       	rjmp	.+30     	; 0x556 <__vector_1+0x3c6>
     538:	80 e9       	ldi	r24, 0x90	; 144
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	9c 83       	std	Y+4, r25	; 0x04
     53e:	8b 83       	std	Y+3, r24	; 0x03
     540:	8b 81       	ldd	r24, Y+3	; 0x03
     542:	9c 81       	ldd	r25, Y+4	; 0x04
     544:	01 97       	sbiw	r24, 0x01	; 1
     546:	f1 f7       	brne	.-4      	; 0x544 <__vector_1+0x3b4>
     548:	9c 83       	std	Y+4, r25	; 0x04
     54a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     54c:	8d 81       	ldd	r24, Y+5	; 0x05
     54e:	9e 81       	ldd	r25, Y+6	; 0x06
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	9e 83       	std	Y+6, r25	; 0x06
     554:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     556:	8d 81       	ldd	r24, Y+5	; 0x05
     558:	9e 81       	ldd	r25, Y+6	; 0x06
     55a:	00 97       	sbiw	r24, 0x00	; 0
     55c:	69 f7       	brne	.-38     	; 0x538 <__vector_1+0x3a8>
     55e:	14 c0       	rjmp	.+40     	; 0x588 <__vector_1+0x3f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     560:	6f 81       	ldd	r22, Y+7	; 0x07
     562:	78 85       	ldd	r23, Y+8	; 0x08
     564:	89 85       	ldd	r24, Y+9	; 0x09
     566:	9a 85       	ldd	r25, Y+10	; 0x0a
     568:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     56c:	dc 01       	movw	r26, r24
     56e:	cb 01       	movw	r24, r22
     570:	9e 83       	std	Y+6, r25	; 0x06
     572:	8d 83       	std	Y+5, r24	; 0x05
     574:	8d 81       	ldd	r24, Y+5	; 0x05
     576:	9e 81       	ldd	r25, Y+6	; 0x06
     578:	9a 83       	std	Y+2, r25	; 0x02
     57a:	89 83       	std	Y+1, r24	; 0x01
     57c:	89 81       	ldd	r24, Y+1	; 0x01
     57e:	9a 81       	ldd	r25, Y+2	; 0x02
     580:	01 97       	sbiw	r24, 0x01	; 1
     582:	f1 f7       	brne	.-4      	; 0x580 <__vector_1+0x3f0>
     584:	9a 83       	std	Y+2, r25	; 0x02
     586:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(1000);
}
     588:	e8 96       	adiw	r28, 0x38	; 56
     58a:	de bf       	out	0x3e, r29	; 62
     58c:	cd bf       	out	0x3d, r28	; 61
     58e:	cf 91       	pop	r28
     590:	df 91       	pop	r29
     592:	ff 91       	pop	r31
     594:	ef 91       	pop	r30
     596:	bf 91       	pop	r27
     598:	af 91       	pop	r26
     59a:	9f 91       	pop	r25
     59c:	8f 91       	pop	r24
     59e:	7f 91       	pop	r23
     5a0:	6f 91       	pop	r22
     5a2:	5f 91       	pop	r21
     5a4:	4f 91       	pop	r20
     5a6:	3f 91       	pop	r19
     5a8:	2f 91       	pop	r18
     5aa:	0f 90       	pop	r0
     5ac:	0f be       	out	0x3f, r0	; 63
     5ae:	0f 90       	pop	r0
     5b0:	1f 90       	pop	r1
     5b2:	18 95       	reti

000005b4 <__vector_2>:

ISR (INT1_vect)
{
     5b4:	1f 92       	push	r1
     5b6:	0f 92       	push	r0
     5b8:	0f b6       	in	r0, 0x3f	; 63
     5ba:	0f 92       	push	r0
     5bc:	11 24       	eor	r1, r1
     5be:	2f 93       	push	r18
     5c0:	3f 93       	push	r19
     5c2:	4f 93       	push	r20
     5c4:	5f 93       	push	r21
     5c6:	6f 93       	push	r22
     5c8:	7f 93       	push	r23
     5ca:	8f 93       	push	r24
     5cc:	9f 93       	push	r25
     5ce:	af 93       	push	r26
     5d0:	bf 93       	push	r27
     5d2:	ef 93       	push	r30
     5d4:	ff 93       	push	r31
     5d6:	df 93       	push	r29
     5d8:	cf 93       	push	r28
     5da:	cd b7       	in	r28, 0x3d	; 61
     5dc:	de b7       	in	r29, 0x3e	; 62
     5de:	6e 97       	sbiw	r28, 0x1e	; 30
     5e0:	de bf       	out	0x3e, r29	; 62
     5e2:	cd bf       	out	0x3d, r28	; 61
    int i;
    for (i=0;i<=5;i++)
     5e4:	1e 8e       	std	Y+30, r1	; 0x1e
     5e6:	1d 8e       	std	Y+29, r1	; 0x1d
     5e8:	f7 c0       	rjmp	.+494    	; 0x7d8 <__vector_2+0x224>
    {
        SET_BIT(PORTD,PD7);
     5ea:	ab e2       	ldi	r26, 0x2B	; 43
     5ec:	b0 e0       	ldi	r27, 0x00	; 0
     5ee:	eb e2       	ldi	r30, 0x2B	; 43
     5f0:	f0 e0       	ldi	r31, 0x00	; 0
     5f2:	80 81       	ld	r24, Z
     5f4:	80 68       	ori	r24, 0x80	; 128
     5f6:	8c 93       	st	X, r24
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	aa e7       	ldi	r26, 0x7A	; 122
     5fe:	b4 e4       	ldi	r27, 0x44	; 68
     600:	89 8f       	std	Y+25, r24	; 0x19
     602:	9a 8f       	std	Y+26, r25	; 0x1a
     604:	ab 8f       	std	Y+27, r26	; 0x1b
     606:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     608:	69 8d       	ldd	r22, Y+25	; 0x19
     60a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     60c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     60e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     610:	20 e0       	ldi	r18, 0x00	; 0
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	4a e7       	ldi	r20, 0x7A	; 122
     616:	55 e4       	ldi	r21, 0x45	; 69
     618:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     61c:	dc 01       	movw	r26, r24
     61e:	cb 01       	movw	r24, r22
     620:	8d 8b       	std	Y+21, r24	; 0x15
     622:	9e 8b       	std	Y+22, r25	; 0x16
     624:	af 8b       	std	Y+23, r26	; 0x17
     626:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     628:	6d 89       	ldd	r22, Y+21	; 0x15
     62a:	7e 89       	ldd	r23, Y+22	; 0x16
     62c:	8f 89       	ldd	r24, Y+23	; 0x17
     62e:	98 8d       	ldd	r25, Y+24	; 0x18
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	40 e8       	ldi	r20, 0x80	; 128
     636:	5f e3       	ldi	r21, 0x3F	; 63
     638:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__ltsf2>
     63c:	88 23       	and	r24, r24
     63e:	2c f4       	brge	.+10     	; 0x64a <__vector_2+0x96>
		__ticks = 1;
     640:	81 e0       	ldi	r24, 0x01	; 1
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	9c 8b       	std	Y+20, r25	; 0x14
     646:	8b 8b       	std	Y+19, r24	; 0x13
     648:	3f c0       	rjmp	.+126    	; 0x6c8 <__vector_2+0x114>
	else if (__tmp > 65535)
     64a:	6d 89       	ldd	r22, Y+21	; 0x15
     64c:	7e 89       	ldd	r23, Y+22	; 0x16
     64e:	8f 89       	ldd	r24, Y+23	; 0x17
     650:	98 8d       	ldd	r25, Y+24	; 0x18
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	3f ef       	ldi	r19, 0xFF	; 255
     656:	4f e7       	ldi	r20, 0x7F	; 127
     658:	57 e4       	ldi	r21, 0x47	; 71
     65a:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__gtsf2>
     65e:	18 16       	cp	r1, r24
     660:	4c f5       	brge	.+82     	; 0x6b4 <__vector_2+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     662:	69 8d       	ldd	r22, Y+25	; 0x19
     664:	7a 8d       	ldd	r23, Y+26	; 0x1a
     666:	8b 8d       	ldd	r24, Y+27	; 0x1b
     668:	9c 8d       	ldd	r25, Y+28	; 0x1c
     66a:	20 e0       	ldi	r18, 0x00	; 0
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	40 e2       	ldi	r20, 0x20	; 32
     670:	51 e4       	ldi	r21, 0x41	; 65
     672:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     676:	dc 01       	movw	r26, r24
     678:	cb 01       	movw	r24, r22
     67a:	bc 01       	movw	r22, r24
     67c:	cd 01       	movw	r24, r26
     67e:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     682:	dc 01       	movw	r26, r24
     684:	cb 01       	movw	r24, r22
     686:	9c 8b       	std	Y+20, r25	; 0x14
     688:	8b 8b       	std	Y+19, r24	; 0x13
     68a:	0f c0       	rjmp	.+30     	; 0x6aa <__vector_2+0xf6>
     68c:	80 e9       	ldi	r24, 0x90	; 144
     68e:	91 e0       	ldi	r25, 0x01	; 1
     690:	9a 8b       	std	Y+18, r25	; 0x12
     692:	89 8b       	std	Y+17, r24	; 0x11
     694:	89 89       	ldd	r24, Y+17	; 0x11
     696:	9a 89       	ldd	r25, Y+18	; 0x12
     698:	01 97       	sbiw	r24, 0x01	; 1
     69a:	f1 f7       	brne	.-4      	; 0x698 <__vector_2+0xe4>
     69c:	9a 8b       	std	Y+18, r25	; 0x12
     69e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6a0:	8b 89       	ldd	r24, Y+19	; 0x13
     6a2:	9c 89       	ldd	r25, Y+20	; 0x14
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	9c 8b       	std	Y+20, r25	; 0x14
     6a8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6aa:	8b 89       	ldd	r24, Y+19	; 0x13
     6ac:	9c 89       	ldd	r25, Y+20	; 0x14
     6ae:	00 97       	sbiw	r24, 0x00	; 0
     6b0:	69 f7       	brne	.-38     	; 0x68c <__vector_2+0xd8>
     6b2:	14 c0       	rjmp	.+40     	; 0x6dc <__vector_2+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6b4:	6d 89       	ldd	r22, Y+21	; 0x15
     6b6:	7e 89       	ldd	r23, Y+22	; 0x16
     6b8:	8f 89       	ldd	r24, Y+23	; 0x17
     6ba:	98 8d       	ldd	r25, Y+24	; 0x18
     6bc:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     6c0:	dc 01       	movw	r26, r24
     6c2:	cb 01       	movw	r24, r22
     6c4:	9c 8b       	std	Y+20, r25	; 0x14
     6c6:	8b 8b       	std	Y+19, r24	; 0x13
     6c8:	8b 89       	ldd	r24, Y+19	; 0x13
     6ca:	9c 89       	ldd	r25, Y+20	; 0x14
     6cc:	98 8b       	std	Y+16, r25	; 0x10
     6ce:	8f 87       	std	Y+15, r24	; 0x0f
     6d0:	8f 85       	ldd	r24, Y+15	; 0x0f
     6d2:	98 89       	ldd	r25, Y+16	; 0x10
     6d4:	01 97       	sbiw	r24, 0x01	; 1
     6d6:	f1 f7       	brne	.-4      	; 0x6d4 <__vector_2+0x120>
     6d8:	98 8b       	std	Y+16, r25	; 0x10
     6da:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(1000);
        CLR_BIT(PORTD,PD7);
     6dc:	ab e2       	ldi	r26, 0x2B	; 43
     6de:	b0 e0       	ldi	r27, 0x00	; 0
     6e0:	eb e2       	ldi	r30, 0x2B	; 43
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	80 81       	ld	r24, Z
     6e6:	8f 77       	andi	r24, 0x7F	; 127
     6e8:	8c 93       	st	X, r24
     6ea:	80 e0       	ldi	r24, 0x00	; 0
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	aa e7       	ldi	r26, 0x7A	; 122
     6f0:	b4 e4       	ldi	r27, 0x44	; 68
     6f2:	8b 87       	std	Y+11, r24	; 0x0b
     6f4:	9c 87       	std	Y+12, r25	; 0x0c
     6f6:	ad 87       	std	Y+13, r26	; 0x0d
     6f8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6fa:	6b 85       	ldd	r22, Y+11	; 0x0b
     6fc:	7c 85       	ldd	r23, Y+12	; 0x0c
     6fe:	8d 85       	ldd	r24, Y+13	; 0x0d
     700:	9e 85       	ldd	r25, Y+14	; 0x0e
     702:	20 e0       	ldi	r18, 0x00	; 0
     704:	30 e0       	ldi	r19, 0x00	; 0
     706:	4a e7       	ldi	r20, 0x7A	; 122
     708:	55 e4       	ldi	r21, 0x45	; 69
     70a:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     70e:	dc 01       	movw	r26, r24
     710:	cb 01       	movw	r24, r22
     712:	8f 83       	std	Y+7, r24	; 0x07
     714:	98 87       	std	Y+8, r25	; 0x08
     716:	a9 87       	std	Y+9, r26	; 0x09
     718:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     71a:	6f 81       	ldd	r22, Y+7	; 0x07
     71c:	78 85       	ldd	r23, Y+8	; 0x08
     71e:	89 85       	ldd	r24, Y+9	; 0x09
     720:	9a 85       	ldd	r25, Y+10	; 0x0a
     722:	20 e0       	ldi	r18, 0x00	; 0
     724:	30 e0       	ldi	r19, 0x00	; 0
     726:	40 e8       	ldi	r20, 0x80	; 128
     728:	5f e3       	ldi	r21, 0x3F	; 63
     72a:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__ltsf2>
     72e:	88 23       	and	r24, r24
     730:	2c f4       	brge	.+10     	; 0x73c <__vector_2+0x188>
		__ticks = 1;
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	9e 83       	std	Y+6, r25	; 0x06
     738:	8d 83       	std	Y+5, r24	; 0x05
     73a:	3f c0       	rjmp	.+126    	; 0x7ba <__vector_2+0x206>
	else if (__tmp > 65535)
     73c:	6f 81       	ldd	r22, Y+7	; 0x07
     73e:	78 85       	ldd	r23, Y+8	; 0x08
     740:	89 85       	ldd	r24, Y+9	; 0x09
     742:	9a 85       	ldd	r25, Y+10	; 0x0a
     744:	20 e0       	ldi	r18, 0x00	; 0
     746:	3f ef       	ldi	r19, 0xFF	; 255
     748:	4f e7       	ldi	r20, 0x7F	; 127
     74a:	57 e4       	ldi	r21, 0x47	; 71
     74c:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__gtsf2>
     750:	18 16       	cp	r1, r24
     752:	4c f5       	brge	.+82     	; 0x7a6 <__vector_2+0x1f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     754:	6b 85       	ldd	r22, Y+11	; 0x0b
     756:	7c 85       	ldd	r23, Y+12	; 0x0c
     758:	8d 85       	ldd	r24, Y+13	; 0x0d
     75a:	9e 85       	ldd	r25, Y+14	; 0x0e
     75c:	20 e0       	ldi	r18, 0x00	; 0
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	40 e2       	ldi	r20, 0x20	; 32
     762:	51 e4       	ldi	r21, 0x41	; 65
     764:	0e 94 35 06 	call	0xc6a	; 0xc6a <__mulsf3>
     768:	dc 01       	movw	r26, r24
     76a:	cb 01       	movw	r24, r22
     76c:	bc 01       	movw	r22, r24
     76e:	cd 01       	movw	r24, r26
     770:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     774:	dc 01       	movw	r26, r24
     776:	cb 01       	movw	r24, r22
     778:	9e 83       	std	Y+6, r25	; 0x06
     77a:	8d 83       	std	Y+5, r24	; 0x05
     77c:	0f c0       	rjmp	.+30     	; 0x79c <__vector_2+0x1e8>
     77e:	80 e9       	ldi	r24, 0x90	; 144
     780:	91 e0       	ldi	r25, 0x01	; 1
     782:	9c 83       	std	Y+4, r25	; 0x04
     784:	8b 83       	std	Y+3, r24	; 0x03
     786:	8b 81       	ldd	r24, Y+3	; 0x03
     788:	9c 81       	ldd	r25, Y+4	; 0x04
     78a:	01 97       	sbiw	r24, 0x01	; 1
     78c:	f1 f7       	brne	.-4      	; 0x78a <__vector_2+0x1d6>
     78e:	9c 83       	std	Y+4, r25	; 0x04
     790:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     792:	8d 81       	ldd	r24, Y+5	; 0x05
     794:	9e 81       	ldd	r25, Y+6	; 0x06
     796:	01 97       	sbiw	r24, 0x01	; 1
     798:	9e 83       	std	Y+6, r25	; 0x06
     79a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     79c:	8d 81       	ldd	r24, Y+5	; 0x05
     79e:	9e 81       	ldd	r25, Y+6	; 0x06
     7a0:	00 97       	sbiw	r24, 0x00	; 0
     7a2:	69 f7       	brne	.-38     	; 0x77e <__vector_2+0x1ca>
     7a4:	14 c0       	rjmp	.+40     	; 0x7ce <__vector_2+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7a6:	6f 81       	ldd	r22, Y+7	; 0x07
     7a8:	78 85       	ldd	r23, Y+8	; 0x08
     7aa:	89 85       	ldd	r24, Y+9	; 0x09
     7ac:	9a 85       	ldd	r25, Y+10	; 0x0a
     7ae:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     7b2:	dc 01       	movw	r26, r24
     7b4:	cb 01       	movw	r24, r22
     7b6:	9e 83       	std	Y+6, r25	; 0x06
     7b8:	8d 83       	std	Y+5, r24	; 0x05
     7ba:	8d 81       	ldd	r24, Y+5	; 0x05
     7bc:	9e 81       	ldd	r25, Y+6	; 0x06
     7be:	9a 83       	std	Y+2, r25	; 0x02
     7c0:	89 83       	std	Y+1, r24	; 0x01
     7c2:	89 81       	ldd	r24, Y+1	; 0x01
     7c4:	9a 81       	ldd	r25, Y+2	; 0x02
     7c6:	01 97       	sbiw	r24, 0x01	; 1
     7c8:	f1 f7       	brne	.-4      	; 0x7c6 <__vector_2+0x212>
     7ca:	9a 83       	std	Y+2, r25	; 0x02
     7cc:	89 83       	std	Y+1, r24	; 0x01
}

ISR (INT1_vect)
{
    int i;
    for (i=0;i<=5;i++)
     7ce:	8d 8d       	ldd	r24, Y+29	; 0x1d
     7d0:	9e 8d       	ldd	r25, Y+30	; 0x1e
     7d2:	01 96       	adiw	r24, 0x01	; 1
     7d4:	9e 8f       	std	Y+30, r25	; 0x1e
     7d6:	8d 8f       	std	Y+29, r24	; 0x1d
     7d8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     7da:	9e 8d       	ldd	r25, Y+30	; 0x1e
     7dc:	86 30       	cpi	r24, 0x06	; 6
     7de:	91 05       	cpc	r25, r1
     7e0:	0c f4       	brge	.+2      	; 0x7e4 <__vector_2+0x230>
     7e2:	03 cf       	rjmp	.-506    	; 0x5ea <__vector_2+0x36>
        SET_BIT(PORTD,PD7);
        _delay_ms(1000);
        CLR_BIT(PORTD,PD7);
        _delay_ms(1000);
    }
}
     7e4:	6e 96       	adiw	r28, 0x1e	; 30
     7e6:	de bf       	out	0x3e, r29	; 62
     7e8:	cd bf       	out	0x3d, r28	; 61
     7ea:	cf 91       	pop	r28
     7ec:	df 91       	pop	r29
     7ee:	ff 91       	pop	r31
     7f0:	ef 91       	pop	r30
     7f2:	bf 91       	pop	r27
     7f4:	af 91       	pop	r26
     7f6:	9f 91       	pop	r25
     7f8:	8f 91       	pop	r24
     7fa:	7f 91       	pop	r23
     7fc:	6f 91       	pop	r22
     7fe:	5f 91       	pop	r21
     800:	4f 91       	pop	r20
     802:	3f 91       	pop	r19
     804:	2f 91       	pop	r18
     806:	0f 90       	pop	r0
     808:	0f be       	out	0x3f, r0	; 63
     80a:	0f 90       	pop	r0
     80c:	1f 90       	pop	r1
     80e:	18 95       	reti

00000810 <switch1>:
#include <avr/interrupt.h>
#include "GPIO.h"
#include "switch1.h"

void switch1()
{
     810:	df 93       	push	r29
     812:	cf 93       	push	r28
     814:	0f 92       	push	r0
     816:	cd b7       	in	r28, 0x3d	; 61
     818:	de b7       	in	r29, 0x3e	; 62
    char i=0;
     81a:	19 82       	std	Y+1, r1	; 0x01
    SET_BIT(PORTD,PD5);
     81c:	ab e2       	ldi	r26, 0x2B	; 43
     81e:	b0 e0       	ldi	r27, 0x00	; 0
     820:	eb e2       	ldi	r30, 0x2B	; 43
     822:	f0 e0       	ldi	r31, 0x00	; 0
     824:	80 81       	ld	r24, Z
     826:	80 62       	ori	r24, 0x20	; 32
     828:	8c 93       	st	X, r24
    TIMSK0|=(1<<TOIE0);
     82a:	ae e6       	ldi	r26, 0x6E	; 110
     82c:	b0 e0       	ldi	r27, 0x00	; 0
     82e:	ee e6       	ldi	r30, 0x6E	; 110
     830:	f0 e0       	ldi	r31, 0x00	; 0
     832:	80 81       	ld	r24, Z
     834:	81 60       	ori	r24, 0x01	; 1
     836:	8c 93       	st	X, r24
    TIFR0=(1<<TOV0);
     838:	e5 e3       	ldi	r30, 0x35	; 53
     83a:	f0 e0       	ldi	r31, 0x00	; 0
     83c:	81 e0       	ldi	r24, 0x01	; 1
     83e:	80 83       	st	Z, r24
    sei();
     840:	78 94       	sei
    void Timer0_init_();

}
     842:	0f 90       	pop	r0
     844:	cf 91       	pop	r28
     846:	df 91       	pop	r29
     848:	08 95       	ret

0000084a <switch2>:
#include <util/delay.h>
#include "GPIO.h"
#include "switch2.h"

void switch2()
{
     84a:	df 93       	push	r29
     84c:	cf 93       	push	r28
     84e:	cd b7       	in	r28, 0x3d	; 61
     850:	de b7       	in	r29, 0x3e	; 62

    EICRA|=(1<<ISC00);
     852:	a9 e6       	ldi	r26, 0x69	; 105
     854:	b0 e0       	ldi	r27, 0x00	; 0
     856:	e9 e6       	ldi	r30, 0x69	; 105
     858:	f0 e0       	ldi	r31, 0x00	; 0
     85a:	80 81       	ld	r24, Z
     85c:	81 60       	ori	r24, 0x01	; 1
     85e:	8c 93       	st	X, r24
    EICRA&=~(1<<ISC01);
     860:	a9 e6       	ldi	r26, 0x69	; 105
     862:	b0 e0       	ldi	r27, 0x00	; 0
     864:	e9 e6       	ldi	r30, 0x69	; 105
     866:	f0 e0       	ldi	r31, 0x00	; 0
     868:	80 81       	ld	r24, Z
     86a:	8d 7f       	andi	r24, 0xFD	; 253
     86c:	8c 93       	st	X, r24
    EIMSK|=(1<<INT0);
     86e:	ad e3       	ldi	r26, 0x3D	; 61
     870:	b0 e0       	ldi	r27, 0x00	; 0
     872:	ed e3       	ldi	r30, 0x3D	; 61
     874:	f0 e0       	ldi	r31, 0x00	; 0
     876:	80 81       	ld	r24, Z
     878:	81 60       	ori	r24, 0x01	; 1
     87a:	8c 93       	st	X, r24
    sei();
     87c:	78 94       	sei

}
     87e:	cf 91       	pop	r28
     880:	df 91       	pop	r29
     882:	08 95       	ret

00000884 <switch3>:
#include <util/delay.h>
#include "GPIO.h"
#include "switch3.h"

void switch3()
{
     884:	df 93       	push	r29
     886:	cf 93       	push	r28
     888:	cd b7       	in	r28, 0x3d	; 61
     88a:	de b7       	in	r29, 0x3e	; 62

    EICRA|=(1<<ISC10);
     88c:	a9 e6       	ldi	r26, 0x69	; 105
     88e:	b0 e0       	ldi	r27, 0x00	; 0
     890:	e9 e6       	ldi	r30, 0x69	; 105
     892:	f0 e0       	ldi	r31, 0x00	; 0
     894:	80 81       	ld	r24, Z
     896:	84 60       	ori	r24, 0x04	; 4
     898:	8c 93       	st	X, r24
    EICRA&=~(1<<ISC11);
     89a:	a9 e6       	ldi	r26, 0x69	; 105
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e9 e6       	ldi	r30, 0x69	; 105
     8a0:	f0 e0       	ldi	r31, 0x00	; 0
     8a2:	80 81       	ld	r24, Z
     8a4:	87 7f       	andi	r24, 0xF7	; 247
     8a6:	8c 93       	st	X, r24
    EIMSK|=(1<<INT1);
     8a8:	ad e3       	ldi	r26, 0x3D	; 61
     8aa:	b0 e0       	ldi	r27, 0x00	; 0
     8ac:	ed e3       	ldi	r30, 0x3D	; 61
     8ae:	f0 e0       	ldi	r31, 0x00	; 0
     8b0:	80 81       	ld	r24, Z
     8b2:	82 60       	ori	r24, 0x02	; 2
     8b4:	8c 93       	st	X, r24
    sei();
     8b6:	78 94       	sei

}
     8b8:	cf 91       	pop	r28
     8ba:	df 91       	pop	r29
     8bc:	08 95       	ret

000008be <__fixunssfsi>:
     8be:	ef 92       	push	r14
     8c0:	ff 92       	push	r15
     8c2:	0f 93       	push	r16
     8c4:	1f 93       	push	r17
     8c6:	7b 01       	movw	r14, r22
     8c8:	8c 01       	movw	r16, r24
     8ca:	20 e0       	ldi	r18, 0x00	; 0
     8cc:	30 e0       	ldi	r19, 0x00	; 0
     8ce:	40 e0       	ldi	r20, 0x00	; 0
     8d0:	5f e4       	ldi	r21, 0x4F	; 79
     8d2:	0e 94 5f 07 	call	0xebe	; 0xebe <__gesf2>
     8d6:	88 23       	and	r24, r24
     8d8:	8c f0       	brlt	.+34     	; 0x8fc <__fixunssfsi+0x3e>
     8da:	c8 01       	movw	r24, r16
     8dc:	b7 01       	movw	r22, r14
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	40 e0       	ldi	r20, 0x00	; 0
     8e4:	5f e4       	ldi	r21, 0x4F	; 79
     8e6:	0e 94 d7 05 	call	0xbae	; 0xbae <__subsf3>
     8ea:	0e 94 bf 07 	call	0xf7e	; 0xf7e <__fixsfsi>
     8ee:	9b 01       	movw	r18, r22
     8f0:	ac 01       	movw	r20, r24
     8f2:	20 50       	subi	r18, 0x00	; 0
     8f4:	30 40       	sbci	r19, 0x00	; 0
     8f6:	40 40       	sbci	r20, 0x00	; 0
     8f8:	50 48       	sbci	r21, 0x80	; 128
     8fa:	06 c0       	rjmp	.+12     	; 0x908 <__stack+0x9>
     8fc:	c8 01       	movw	r24, r16
     8fe:	b7 01       	movw	r22, r14
     900:	0e 94 bf 07 	call	0xf7e	; 0xf7e <__fixsfsi>
     904:	9b 01       	movw	r18, r22
     906:	ac 01       	movw	r20, r24
     908:	b9 01       	movw	r22, r18
     90a:	ca 01       	movw	r24, r20
     90c:	1f 91       	pop	r17
     90e:	0f 91       	pop	r16
     910:	ff 90       	pop	r15
     912:	ef 90       	pop	r14
     914:	08 95       	ret

00000916 <_fpadd_parts>:
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	e1 e9       	ldi	r30, 0x91	; 145
     91c:	f4 e0       	ldi	r31, 0x04	; 4
     91e:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__prologue_saves__>
     922:	dc 01       	movw	r26, r24
     924:	2b 01       	movw	r4, r22
     926:	fa 01       	movw	r30, r20
     928:	9c 91       	ld	r25, X
     92a:	92 30       	cpi	r25, 0x02	; 2
     92c:	08 f4       	brcc	.+2      	; 0x930 <_fpadd_parts+0x1a>
     92e:	39 c1       	rjmp	.+626    	; 0xba2 <_fpadd_parts+0x28c>
     930:	eb 01       	movw	r28, r22
     932:	88 81       	ld	r24, Y
     934:	82 30       	cpi	r24, 0x02	; 2
     936:	08 f4       	brcc	.+2      	; 0x93a <_fpadd_parts+0x24>
     938:	33 c1       	rjmp	.+614    	; 0xba0 <_fpadd_parts+0x28a>
     93a:	94 30       	cpi	r25, 0x04	; 4
     93c:	69 f4       	brne	.+26     	; 0x958 <_fpadd_parts+0x42>
     93e:	84 30       	cpi	r24, 0x04	; 4
     940:	09 f0       	breq	.+2      	; 0x944 <_fpadd_parts+0x2e>
     942:	2f c1       	rjmp	.+606    	; 0xba2 <_fpadd_parts+0x28c>
     944:	11 96       	adiw	r26, 0x01	; 1
     946:	9c 91       	ld	r25, X
     948:	11 97       	sbiw	r26, 0x01	; 1
     94a:	89 81       	ldd	r24, Y+1	; 0x01
     94c:	98 17       	cp	r25, r24
     94e:	09 f4       	brne	.+2      	; 0x952 <_fpadd_parts+0x3c>
     950:	28 c1       	rjmp	.+592    	; 0xba2 <_fpadd_parts+0x28c>
     952:	a0 e0       	ldi	r26, 0x00	; 0
     954:	b1 e0       	ldi	r27, 0x01	; 1
     956:	25 c1       	rjmp	.+586    	; 0xba2 <_fpadd_parts+0x28c>
     958:	84 30       	cpi	r24, 0x04	; 4
     95a:	09 f4       	brne	.+2      	; 0x95e <_fpadd_parts+0x48>
     95c:	21 c1       	rjmp	.+578    	; 0xba0 <_fpadd_parts+0x28a>
     95e:	82 30       	cpi	r24, 0x02	; 2
     960:	a9 f4       	brne	.+42     	; 0x98c <_fpadd_parts+0x76>
     962:	92 30       	cpi	r25, 0x02	; 2
     964:	09 f0       	breq	.+2      	; 0x968 <_fpadd_parts+0x52>
     966:	1d c1       	rjmp	.+570    	; 0xba2 <_fpadd_parts+0x28c>
     968:	9a 01       	movw	r18, r20
     96a:	ad 01       	movw	r20, r26
     96c:	88 e0       	ldi	r24, 0x08	; 8
     96e:	ea 01       	movw	r28, r20
     970:	09 90       	ld	r0, Y+
     972:	ae 01       	movw	r20, r28
     974:	e9 01       	movw	r28, r18
     976:	09 92       	st	Y+, r0
     978:	9e 01       	movw	r18, r28
     97a:	81 50       	subi	r24, 0x01	; 1
     97c:	c1 f7       	brne	.-16     	; 0x96e <_fpadd_parts+0x58>
     97e:	e2 01       	movw	r28, r4
     980:	89 81       	ldd	r24, Y+1	; 0x01
     982:	11 96       	adiw	r26, 0x01	; 1
     984:	9c 91       	ld	r25, X
     986:	89 23       	and	r24, r25
     988:	81 83       	std	Z+1, r24	; 0x01
     98a:	08 c1       	rjmp	.+528    	; 0xb9c <_fpadd_parts+0x286>
     98c:	92 30       	cpi	r25, 0x02	; 2
     98e:	09 f4       	brne	.+2      	; 0x992 <_fpadd_parts+0x7c>
     990:	07 c1       	rjmp	.+526    	; 0xba0 <_fpadd_parts+0x28a>
     992:	12 96       	adiw	r26, 0x02	; 2
     994:	2d 90       	ld	r2, X+
     996:	3c 90       	ld	r3, X
     998:	13 97       	sbiw	r26, 0x03	; 3
     99a:	eb 01       	movw	r28, r22
     99c:	8a 81       	ldd	r24, Y+2	; 0x02
     99e:	9b 81       	ldd	r25, Y+3	; 0x03
     9a0:	14 96       	adiw	r26, 0x04	; 4
     9a2:	ad 90       	ld	r10, X+
     9a4:	bd 90       	ld	r11, X+
     9a6:	cd 90       	ld	r12, X+
     9a8:	dc 90       	ld	r13, X
     9aa:	17 97       	sbiw	r26, 0x07	; 7
     9ac:	ec 80       	ldd	r14, Y+4	; 0x04
     9ae:	fd 80       	ldd	r15, Y+5	; 0x05
     9b0:	0e 81       	ldd	r16, Y+6	; 0x06
     9b2:	1f 81       	ldd	r17, Y+7	; 0x07
     9b4:	91 01       	movw	r18, r2
     9b6:	28 1b       	sub	r18, r24
     9b8:	39 0b       	sbc	r19, r25
     9ba:	b9 01       	movw	r22, r18
     9bc:	37 ff       	sbrs	r19, 7
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <_fpadd_parts+0xb2>
     9c0:	66 27       	eor	r22, r22
     9c2:	77 27       	eor	r23, r23
     9c4:	62 1b       	sub	r22, r18
     9c6:	73 0b       	sbc	r23, r19
     9c8:	60 32       	cpi	r22, 0x20	; 32
     9ca:	71 05       	cpc	r23, r1
     9cc:	0c f0       	brlt	.+2      	; 0x9d0 <_fpadd_parts+0xba>
     9ce:	61 c0       	rjmp	.+194    	; 0xa92 <_fpadd_parts+0x17c>
     9d0:	12 16       	cp	r1, r18
     9d2:	13 06       	cpc	r1, r19
     9d4:	6c f5       	brge	.+90     	; 0xa30 <_fpadd_parts+0x11a>
     9d6:	37 01       	movw	r6, r14
     9d8:	48 01       	movw	r8, r16
     9da:	06 2e       	mov	r0, r22
     9dc:	04 c0       	rjmp	.+8      	; 0x9e6 <_fpadd_parts+0xd0>
     9de:	96 94       	lsr	r9
     9e0:	87 94       	ror	r8
     9e2:	77 94       	ror	r7
     9e4:	67 94       	ror	r6
     9e6:	0a 94       	dec	r0
     9e8:	d2 f7       	brpl	.-12     	; 0x9de <_fpadd_parts+0xc8>
     9ea:	21 e0       	ldi	r18, 0x01	; 1
     9ec:	30 e0       	ldi	r19, 0x00	; 0
     9ee:	40 e0       	ldi	r20, 0x00	; 0
     9f0:	50 e0       	ldi	r21, 0x00	; 0
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <_fpadd_parts+0xe6>
     9f4:	22 0f       	add	r18, r18
     9f6:	33 1f       	adc	r19, r19
     9f8:	44 1f       	adc	r20, r20
     9fa:	55 1f       	adc	r21, r21
     9fc:	6a 95       	dec	r22
     9fe:	d2 f7       	brpl	.-12     	; 0x9f4 <_fpadd_parts+0xde>
     a00:	21 50       	subi	r18, 0x01	; 1
     a02:	30 40       	sbci	r19, 0x00	; 0
     a04:	40 40       	sbci	r20, 0x00	; 0
     a06:	50 40       	sbci	r21, 0x00	; 0
     a08:	2e 21       	and	r18, r14
     a0a:	3f 21       	and	r19, r15
     a0c:	40 23       	and	r20, r16
     a0e:	51 23       	and	r21, r17
     a10:	21 15       	cp	r18, r1
     a12:	31 05       	cpc	r19, r1
     a14:	41 05       	cpc	r20, r1
     a16:	51 05       	cpc	r21, r1
     a18:	21 f0       	breq	.+8      	; 0xa22 <_fpadd_parts+0x10c>
     a1a:	21 e0       	ldi	r18, 0x01	; 1
     a1c:	30 e0       	ldi	r19, 0x00	; 0
     a1e:	40 e0       	ldi	r20, 0x00	; 0
     a20:	50 e0       	ldi	r21, 0x00	; 0
     a22:	79 01       	movw	r14, r18
     a24:	8a 01       	movw	r16, r20
     a26:	e6 28       	or	r14, r6
     a28:	f7 28       	or	r15, r7
     a2a:	08 29       	or	r16, r8
     a2c:	19 29       	or	r17, r9
     a2e:	3c c0       	rjmp	.+120    	; 0xaa8 <_fpadd_parts+0x192>
     a30:	23 2b       	or	r18, r19
     a32:	d1 f1       	breq	.+116    	; 0xaa8 <_fpadd_parts+0x192>
     a34:	26 0e       	add	r2, r22
     a36:	37 1e       	adc	r3, r23
     a38:	35 01       	movw	r6, r10
     a3a:	46 01       	movw	r8, r12
     a3c:	06 2e       	mov	r0, r22
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <_fpadd_parts+0x132>
     a40:	96 94       	lsr	r9
     a42:	87 94       	ror	r8
     a44:	77 94       	ror	r7
     a46:	67 94       	ror	r6
     a48:	0a 94       	dec	r0
     a4a:	d2 f7       	brpl	.-12     	; 0xa40 <_fpadd_parts+0x12a>
     a4c:	21 e0       	ldi	r18, 0x01	; 1
     a4e:	30 e0       	ldi	r19, 0x00	; 0
     a50:	40 e0       	ldi	r20, 0x00	; 0
     a52:	50 e0       	ldi	r21, 0x00	; 0
     a54:	04 c0       	rjmp	.+8      	; 0xa5e <_fpadd_parts+0x148>
     a56:	22 0f       	add	r18, r18
     a58:	33 1f       	adc	r19, r19
     a5a:	44 1f       	adc	r20, r20
     a5c:	55 1f       	adc	r21, r21
     a5e:	6a 95       	dec	r22
     a60:	d2 f7       	brpl	.-12     	; 0xa56 <_fpadd_parts+0x140>
     a62:	21 50       	subi	r18, 0x01	; 1
     a64:	30 40       	sbci	r19, 0x00	; 0
     a66:	40 40       	sbci	r20, 0x00	; 0
     a68:	50 40       	sbci	r21, 0x00	; 0
     a6a:	2a 21       	and	r18, r10
     a6c:	3b 21       	and	r19, r11
     a6e:	4c 21       	and	r20, r12
     a70:	5d 21       	and	r21, r13
     a72:	21 15       	cp	r18, r1
     a74:	31 05       	cpc	r19, r1
     a76:	41 05       	cpc	r20, r1
     a78:	51 05       	cpc	r21, r1
     a7a:	21 f0       	breq	.+8      	; 0xa84 <_fpadd_parts+0x16e>
     a7c:	21 e0       	ldi	r18, 0x01	; 1
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	40 e0       	ldi	r20, 0x00	; 0
     a82:	50 e0       	ldi	r21, 0x00	; 0
     a84:	59 01       	movw	r10, r18
     a86:	6a 01       	movw	r12, r20
     a88:	a6 28       	or	r10, r6
     a8a:	b7 28       	or	r11, r7
     a8c:	c8 28       	or	r12, r8
     a8e:	d9 28       	or	r13, r9
     a90:	0b c0       	rjmp	.+22     	; 0xaa8 <_fpadd_parts+0x192>
     a92:	82 15       	cp	r24, r2
     a94:	93 05       	cpc	r25, r3
     a96:	2c f0       	brlt	.+10     	; 0xaa2 <_fpadd_parts+0x18c>
     a98:	1c 01       	movw	r2, r24
     a9a:	aa 24       	eor	r10, r10
     a9c:	bb 24       	eor	r11, r11
     a9e:	65 01       	movw	r12, r10
     aa0:	03 c0       	rjmp	.+6      	; 0xaa8 <_fpadd_parts+0x192>
     aa2:	ee 24       	eor	r14, r14
     aa4:	ff 24       	eor	r15, r15
     aa6:	87 01       	movw	r16, r14
     aa8:	11 96       	adiw	r26, 0x01	; 1
     aaa:	9c 91       	ld	r25, X
     aac:	d2 01       	movw	r26, r4
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	8c 91       	ld	r24, X
     ab2:	98 17       	cp	r25, r24
     ab4:	09 f4       	brne	.+2      	; 0xab8 <_fpadd_parts+0x1a2>
     ab6:	45 c0       	rjmp	.+138    	; 0xb42 <_fpadd_parts+0x22c>
     ab8:	99 23       	and	r25, r25
     aba:	39 f0       	breq	.+14     	; 0xaca <_fpadd_parts+0x1b4>
     abc:	a8 01       	movw	r20, r16
     abe:	97 01       	movw	r18, r14
     ac0:	2a 19       	sub	r18, r10
     ac2:	3b 09       	sbc	r19, r11
     ac4:	4c 09       	sbc	r20, r12
     ac6:	5d 09       	sbc	r21, r13
     ac8:	06 c0       	rjmp	.+12     	; 0xad6 <_fpadd_parts+0x1c0>
     aca:	a6 01       	movw	r20, r12
     acc:	95 01       	movw	r18, r10
     ace:	2e 19       	sub	r18, r14
     ad0:	3f 09       	sbc	r19, r15
     ad2:	40 0b       	sbc	r20, r16
     ad4:	51 0b       	sbc	r21, r17
     ad6:	57 fd       	sbrc	r21, 7
     ad8:	08 c0       	rjmp	.+16     	; 0xaea <_fpadd_parts+0x1d4>
     ada:	11 82       	std	Z+1, r1	; 0x01
     adc:	33 82       	std	Z+3, r3	; 0x03
     ade:	22 82       	std	Z+2, r2	; 0x02
     ae0:	24 83       	std	Z+4, r18	; 0x04
     ae2:	35 83       	std	Z+5, r19	; 0x05
     ae4:	46 83       	std	Z+6, r20	; 0x06
     ae6:	57 83       	std	Z+7, r21	; 0x07
     ae8:	1d c0       	rjmp	.+58     	; 0xb24 <_fpadd_parts+0x20e>
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	81 83       	std	Z+1, r24	; 0x01
     aee:	33 82       	std	Z+3, r3	; 0x03
     af0:	22 82       	std	Z+2, r2	; 0x02
     af2:	88 27       	eor	r24, r24
     af4:	99 27       	eor	r25, r25
     af6:	dc 01       	movw	r26, r24
     af8:	82 1b       	sub	r24, r18
     afa:	93 0b       	sbc	r25, r19
     afc:	a4 0b       	sbc	r26, r20
     afe:	b5 0b       	sbc	r27, r21
     b00:	84 83       	std	Z+4, r24	; 0x04
     b02:	95 83       	std	Z+5, r25	; 0x05
     b04:	a6 83       	std	Z+6, r26	; 0x06
     b06:	b7 83       	std	Z+7, r27	; 0x07
     b08:	0d c0       	rjmp	.+26     	; 0xb24 <_fpadd_parts+0x20e>
     b0a:	22 0f       	add	r18, r18
     b0c:	33 1f       	adc	r19, r19
     b0e:	44 1f       	adc	r20, r20
     b10:	55 1f       	adc	r21, r21
     b12:	24 83       	std	Z+4, r18	; 0x04
     b14:	35 83       	std	Z+5, r19	; 0x05
     b16:	46 83       	std	Z+6, r20	; 0x06
     b18:	57 83       	std	Z+7, r21	; 0x07
     b1a:	82 81       	ldd	r24, Z+2	; 0x02
     b1c:	93 81       	ldd	r25, Z+3	; 0x03
     b1e:	01 97       	sbiw	r24, 0x01	; 1
     b20:	93 83       	std	Z+3, r25	; 0x03
     b22:	82 83       	std	Z+2, r24	; 0x02
     b24:	24 81       	ldd	r18, Z+4	; 0x04
     b26:	35 81       	ldd	r19, Z+5	; 0x05
     b28:	46 81       	ldd	r20, Z+6	; 0x06
     b2a:	57 81       	ldd	r21, Z+7	; 0x07
     b2c:	da 01       	movw	r26, r20
     b2e:	c9 01       	movw	r24, r18
     b30:	01 97       	sbiw	r24, 0x01	; 1
     b32:	a1 09       	sbc	r26, r1
     b34:	b1 09       	sbc	r27, r1
     b36:	8f 5f       	subi	r24, 0xFF	; 255
     b38:	9f 4f       	sbci	r25, 0xFF	; 255
     b3a:	af 4f       	sbci	r26, 0xFF	; 255
     b3c:	bf 43       	sbci	r27, 0x3F	; 63
     b3e:	28 f3       	brcs	.-54     	; 0xb0a <_fpadd_parts+0x1f4>
     b40:	0b c0       	rjmp	.+22     	; 0xb58 <_fpadd_parts+0x242>
     b42:	91 83       	std	Z+1, r25	; 0x01
     b44:	33 82       	std	Z+3, r3	; 0x03
     b46:	22 82       	std	Z+2, r2	; 0x02
     b48:	ea 0c       	add	r14, r10
     b4a:	fb 1c       	adc	r15, r11
     b4c:	0c 1d       	adc	r16, r12
     b4e:	1d 1d       	adc	r17, r13
     b50:	e4 82       	std	Z+4, r14	; 0x04
     b52:	f5 82       	std	Z+5, r15	; 0x05
     b54:	06 83       	std	Z+6, r16	; 0x06
     b56:	17 83       	std	Z+7, r17	; 0x07
     b58:	83 e0       	ldi	r24, 0x03	; 3
     b5a:	80 83       	st	Z, r24
     b5c:	24 81       	ldd	r18, Z+4	; 0x04
     b5e:	35 81       	ldd	r19, Z+5	; 0x05
     b60:	46 81       	ldd	r20, Z+6	; 0x06
     b62:	57 81       	ldd	r21, Z+7	; 0x07
     b64:	57 ff       	sbrs	r21, 7
     b66:	1a c0       	rjmp	.+52     	; 0xb9c <_fpadd_parts+0x286>
     b68:	c9 01       	movw	r24, r18
     b6a:	aa 27       	eor	r26, r26
     b6c:	97 fd       	sbrc	r25, 7
     b6e:	a0 95       	com	r26
     b70:	ba 2f       	mov	r27, r26
     b72:	81 70       	andi	r24, 0x01	; 1
     b74:	90 70       	andi	r25, 0x00	; 0
     b76:	a0 70       	andi	r26, 0x00	; 0
     b78:	b0 70       	andi	r27, 0x00	; 0
     b7a:	56 95       	lsr	r21
     b7c:	47 95       	ror	r20
     b7e:	37 95       	ror	r19
     b80:	27 95       	ror	r18
     b82:	82 2b       	or	r24, r18
     b84:	93 2b       	or	r25, r19
     b86:	a4 2b       	or	r26, r20
     b88:	b5 2b       	or	r27, r21
     b8a:	84 83       	std	Z+4, r24	; 0x04
     b8c:	95 83       	std	Z+5, r25	; 0x05
     b8e:	a6 83       	std	Z+6, r26	; 0x06
     b90:	b7 83       	std	Z+7, r27	; 0x07
     b92:	82 81       	ldd	r24, Z+2	; 0x02
     b94:	93 81       	ldd	r25, Z+3	; 0x03
     b96:	01 96       	adiw	r24, 0x01	; 1
     b98:	93 83       	std	Z+3, r25	; 0x03
     b9a:	82 83       	std	Z+2, r24	; 0x02
     b9c:	df 01       	movw	r26, r30
     b9e:	01 c0       	rjmp	.+2      	; 0xba2 <_fpadd_parts+0x28c>
     ba0:	d2 01       	movw	r26, r4
     ba2:	cd 01       	movw	r24, r26
     ba4:	cd b7       	in	r28, 0x3d	; 61
     ba6:	de b7       	in	r29, 0x3e	; 62
     ba8:	e2 e1       	ldi	r30, 0x12	; 18
     baa:	0c 94 d5 09 	jmp	0x13aa	; 0x13aa <__epilogue_restores__>

00000bae <__subsf3>:
     bae:	a0 e2       	ldi	r26, 0x20	; 32
     bb0:	b0 e0       	ldi	r27, 0x00	; 0
     bb2:	ed ed       	ldi	r30, 0xDD	; 221
     bb4:	f5 e0       	ldi	r31, 0x05	; 5
     bb6:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__prologue_saves__+0x18>
     bba:	69 83       	std	Y+1, r22	; 0x01
     bbc:	7a 83       	std	Y+2, r23	; 0x02
     bbe:	8b 83       	std	Y+3, r24	; 0x03
     bc0:	9c 83       	std	Y+4, r25	; 0x04
     bc2:	2d 83       	std	Y+5, r18	; 0x05
     bc4:	3e 83       	std	Y+6, r19	; 0x06
     bc6:	4f 83       	std	Y+7, r20	; 0x07
     bc8:	58 87       	std	Y+8, r21	; 0x08
     bca:	e9 e0       	ldi	r30, 0x09	; 9
     bcc:	ee 2e       	mov	r14, r30
     bce:	f1 2c       	mov	r15, r1
     bd0:	ec 0e       	add	r14, r28
     bd2:	fd 1e       	adc	r15, r29
     bd4:	ce 01       	movw	r24, r28
     bd6:	01 96       	adiw	r24, 0x01	; 1
     bd8:	b7 01       	movw	r22, r14
     bda:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     bde:	8e 01       	movw	r16, r28
     be0:	0f 5e       	subi	r16, 0xEF	; 239
     be2:	1f 4f       	sbci	r17, 0xFF	; 255
     be4:	ce 01       	movw	r24, r28
     be6:	05 96       	adiw	r24, 0x05	; 5
     be8:	b8 01       	movw	r22, r16
     bea:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     bee:	8a 89       	ldd	r24, Y+18	; 0x12
     bf0:	91 e0       	ldi	r25, 0x01	; 1
     bf2:	89 27       	eor	r24, r25
     bf4:	8a 8b       	std	Y+18, r24	; 0x12
     bf6:	c7 01       	movw	r24, r14
     bf8:	b8 01       	movw	r22, r16
     bfa:	ae 01       	movw	r20, r28
     bfc:	47 5e       	subi	r20, 0xE7	; 231
     bfe:	5f 4f       	sbci	r21, 0xFF	; 255
     c00:	0e 94 8b 04 	call	0x916	; 0x916 <_fpadd_parts>
     c04:	0e 94 13 08 	call	0x1026	; 0x1026 <__pack_f>
     c08:	a0 96       	adiw	r28, 0x20	; 32
     c0a:	e6 e0       	ldi	r30, 0x06	; 6
     c0c:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__epilogue_restores__+0x18>

00000c10 <__addsf3>:
     c10:	a0 e2       	ldi	r26, 0x20	; 32
     c12:	b0 e0       	ldi	r27, 0x00	; 0
     c14:	ee e0       	ldi	r30, 0x0E	; 14
     c16:	f6 e0       	ldi	r31, 0x06	; 6
     c18:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__prologue_saves__+0x18>
     c1c:	69 83       	std	Y+1, r22	; 0x01
     c1e:	7a 83       	std	Y+2, r23	; 0x02
     c20:	8b 83       	std	Y+3, r24	; 0x03
     c22:	9c 83       	std	Y+4, r25	; 0x04
     c24:	2d 83       	std	Y+5, r18	; 0x05
     c26:	3e 83       	std	Y+6, r19	; 0x06
     c28:	4f 83       	std	Y+7, r20	; 0x07
     c2a:	58 87       	std	Y+8, r21	; 0x08
     c2c:	f9 e0       	ldi	r31, 0x09	; 9
     c2e:	ef 2e       	mov	r14, r31
     c30:	f1 2c       	mov	r15, r1
     c32:	ec 0e       	add	r14, r28
     c34:	fd 1e       	adc	r15, r29
     c36:	ce 01       	movw	r24, r28
     c38:	01 96       	adiw	r24, 0x01	; 1
     c3a:	b7 01       	movw	r22, r14
     c3c:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     c40:	8e 01       	movw	r16, r28
     c42:	0f 5e       	subi	r16, 0xEF	; 239
     c44:	1f 4f       	sbci	r17, 0xFF	; 255
     c46:	ce 01       	movw	r24, r28
     c48:	05 96       	adiw	r24, 0x05	; 5
     c4a:	b8 01       	movw	r22, r16
     c4c:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     c50:	c7 01       	movw	r24, r14
     c52:	b8 01       	movw	r22, r16
     c54:	ae 01       	movw	r20, r28
     c56:	47 5e       	subi	r20, 0xE7	; 231
     c58:	5f 4f       	sbci	r21, 0xFF	; 255
     c5a:	0e 94 8b 04 	call	0x916	; 0x916 <_fpadd_parts>
     c5e:	0e 94 13 08 	call	0x1026	; 0x1026 <__pack_f>
     c62:	a0 96       	adiw	r28, 0x20	; 32
     c64:	e6 e0       	ldi	r30, 0x06	; 6
     c66:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__epilogue_restores__+0x18>

00000c6a <__mulsf3>:
     c6a:	a0 e2       	ldi	r26, 0x20	; 32
     c6c:	b0 e0       	ldi	r27, 0x00	; 0
     c6e:	eb e3       	ldi	r30, 0x3B	; 59
     c70:	f6 e0       	ldi	r31, 0x06	; 6
     c72:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__prologue_saves__>
     c76:	69 83       	std	Y+1, r22	; 0x01
     c78:	7a 83       	std	Y+2, r23	; 0x02
     c7a:	8b 83       	std	Y+3, r24	; 0x03
     c7c:	9c 83       	std	Y+4, r25	; 0x04
     c7e:	2d 83       	std	Y+5, r18	; 0x05
     c80:	3e 83       	std	Y+6, r19	; 0x06
     c82:	4f 83       	std	Y+7, r20	; 0x07
     c84:	58 87       	std	Y+8, r21	; 0x08
     c86:	ce 01       	movw	r24, r28
     c88:	01 96       	adiw	r24, 0x01	; 1
     c8a:	be 01       	movw	r22, r28
     c8c:	67 5f       	subi	r22, 0xF7	; 247
     c8e:	7f 4f       	sbci	r23, 0xFF	; 255
     c90:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     c94:	ce 01       	movw	r24, r28
     c96:	05 96       	adiw	r24, 0x05	; 5
     c98:	be 01       	movw	r22, r28
     c9a:	6f 5e       	subi	r22, 0xEF	; 239
     c9c:	7f 4f       	sbci	r23, 0xFF	; 255
     c9e:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     ca2:	99 85       	ldd	r25, Y+9	; 0x09
     ca4:	92 30       	cpi	r25, 0x02	; 2
     ca6:	88 f0       	brcs	.+34     	; 0xcca <__mulsf3+0x60>
     ca8:	89 89       	ldd	r24, Y+17	; 0x11
     caa:	82 30       	cpi	r24, 0x02	; 2
     cac:	c8 f0       	brcs	.+50     	; 0xce0 <__mulsf3+0x76>
     cae:	94 30       	cpi	r25, 0x04	; 4
     cb0:	19 f4       	brne	.+6      	; 0xcb8 <__mulsf3+0x4e>
     cb2:	82 30       	cpi	r24, 0x02	; 2
     cb4:	51 f4       	brne	.+20     	; 0xcca <__mulsf3+0x60>
     cb6:	04 c0       	rjmp	.+8      	; 0xcc0 <__mulsf3+0x56>
     cb8:	84 30       	cpi	r24, 0x04	; 4
     cba:	29 f4       	brne	.+10     	; 0xcc6 <__mulsf3+0x5c>
     cbc:	92 30       	cpi	r25, 0x02	; 2
     cbe:	81 f4       	brne	.+32     	; 0xce0 <__mulsf3+0x76>
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	91 e0       	ldi	r25, 0x01	; 1
     cc4:	c6 c0       	rjmp	.+396    	; 0xe52 <__mulsf3+0x1e8>
     cc6:	92 30       	cpi	r25, 0x02	; 2
     cc8:	49 f4       	brne	.+18     	; 0xcdc <__mulsf3+0x72>
     cca:	20 e0       	ldi	r18, 0x00	; 0
     ccc:	9a 85       	ldd	r25, Y+10	; 0x0a
     cce:	8a 89       	ldd	r24, Y+18	; 0x12
     cd0:	98 13       	cpse	r25, r24
     cd2:	21 e0       	ldi	r18, 0x01	; 1
     cd4:	2a 87       	std	Y+10, r18	; 0x0a
     cd6:	ce 01       	movw	r24, r28
     cd8:	09 96       	adiw	r24, 0x09	; 9
     cda:	bb c0       	rjmp	.+374    	; 0xe52 <__mulsf3+0x1e8>
     cdc:	82 30       	cpi	r24, 0x02	; 2
     cde:	49 f4       	brne	.+18     	; 0xcf2 <__mulsf3+0x88>
     ce0:	20 e0       	ldi	r18, 0x00	; 0
     ce2:	9a 85       	ldd	r25, Y+10	; 0x0a
     ce4:	8a 89       	ldd	r24, Y+18	; 0x12
     ce6:	98 13       	cpse	r25, r24
     ce8:	21 e0       	ldi	r18, 0x01	; 1
     cea:	2a 8b       	std	Y+18, r18	; 0x12
     cec:	ce 01       	movw	r24, r28
     cee:	41 96       	adiw	r24, 0x11	; 17
     cf0:	b0 c0       	rjmp	.+352    	; 0xe52 <__mulsf3+0x1e8>
     cf2:	2d 84       	ldd	r2, Y+13	; 0x0d
     cf4:	3e 84       	ldd	r3, Y+14	; 0x0e
     cf6:	4f 84       	ldd	r4, Y+15	; 0x0f
     cf8:	58 88       	ldd	r5, Y+16	; 0x10
     cfa:	6d 88       	ldd	r6, Y+21	; 0x15
     cfc:	7e 88       	ldd	r7, Y+22	; 0x16
     cfe:	8f 88       	ldd	r8, Y+23	; 0x17
     d00:	98 8c       	ldd	r9, Y+24	; 0x18
     d02:	ee 24       	eor	r14, r14
     d04:	ff 24       	eor	r15, r15
     d06:	87 01       	movw	r16, r14
     d08:	aa 24       	eor	r10, r10
     d0a:	bb 24       	eor	r11, r11
     d0c:	65 01       	movw	r12, r10
     d0e:	40 e0       	ldi	r20, 0x00	; 0
     d10:	50 e0       	ldi	r21, 0x00	; 0
     d12:	60 e0       	ldi	r22, 0x00	; 0
     d14:	70 e0       	ldi	r23, 0x00	; 0
     d16:	e0 e0       	ldi	r30, 0x00	; 0
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	c1 01       	movw	r24, r2
     d1c:	81 70       	andi	r24, 0x01	; 1
     d1e:	90 70       	andi	r25, 0x00	; 0
     d20:	89 2b       	or	r24, r25
     d22:	e9 f0       	breq	.+58     	; 0xd5e <__mulsf3+0xf4>
     d24:	e6 0c       	add	r14, r6
     d26:	f7 1c       	adc	r15, r7
     d28:	08 1d       	adc	r16, r8
     d2a:	19 1d       	adc	r17, r9
     d2c:	9a 01       	movw	r18, r20
     d2e:	ab 01       	movw	r20, r22
     d30:	2a 0d       	add	r18, r10
     d32:	3b 1d       	adc	r19, r11
     d34:	4c 1d       	adc	r20, r12
     d36:	5d 1d       	adc	r21, r13
     d38:	80 e0       	ldi	r24, 0x00	; 0
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	a0 e0       	ldi	r26, 0x00	; 0
     d3e:	b0 e0       	ldi	r27, 0x00	; 0
     d40:	e6 14       	cp	r14, r6
     d42:	f7 04       	cpc	r15, r7
     d44:	08 05       	cpc	r16, r8
     d46:	19 05       	cpc	r17, r9
     d48:	20 f4       	brcc	.+8      	; 0xd52 <__mulsf3+0xe8>
     d4a:	81 e0       	ldi	r24, 0x01	; 1
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	a0 e0       	ldi	r26, 0x00	; 0
     d50:	b0 e0       	ldi	r27, 0x00	; 0
     d52:	ba 01       	movw	r22, r20
     d54:	a9 01       	movw	r20, r18
     d56:	48 0f       	add	r20, r24
     d58:	59 1f       	adc	r21, r25
     d5a:	6a 1f       	adc	r22, r26
     d5c:	7b 1f       	adc	r23, r27
     d5e:	aa 0c       	add	r10, r10
     d60:	bb 1c       	adc	r11, r11
     d62:	cc 1c       	adc	r12, r12
     d64:	dd 1c       	adc	r13, r13
     d66:	97 fe       	sbrs	r9, 7
     d68:	08 c0       	rjmp	.+16     	; 0xd7a <__mulsf3+0x110>
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	a0 e0       	ldi	r26, 0x00	; 0
     d70:	b0 e0       	ldi	r27, 0x00	; 0
     d72:	a8 2a       	or	r10, r24
     d74:	b9 2a       	or	r11, r25
     d76:	ca 2a       	or	r12, r26
     d78:	db 2a       	or	r13, r27
     d7a:	31 96       	adiw	r30, 0x01	; 1
     d7c:	e0 32       	cpi	r30, 0x20	; 32
     d7e:	f1 05       	cpc	r31, r1
     d80:	49 f0       	breq	.+18     	; 0xd94 <__mulsf3+0x12a>
     d82:	66 0c       	add	r6, r6
     d84:	77 1c       	adc	r7, r7
     d86:	88 1c       	adc	r8, r8
     d88:	99 1c       	adc	r9, r9
     d8a:	56 94       	lsr	r5
     d8c:	47 94       	ror	r4
     d8e:	37 94       	ror	r3
     d90:	27 94       	ror	r2
     d92:	c3 cf       	rjmp	.-122    	; 0xd1a <__mulsf3+0xb0>
     d94:	fa 85       	ldd	r31, Y+10	; 0x0a
     d96:	ea 89       	ldd	r30, Y+18	; 0x12
     d98:	2b 89       	ldd	r18, Y+19	; 0x13
     d9a:	3c 89       	ldd	r19, Y+20	; 0x14
     d9c:	8b 85       	ldd	r24, Y+11	; 0x0b
     d9e:	9c 85       	ldd	r25, Y+12	; 0x0c
     da0:	28 0f       	add	r18, r24
     da2:	39 1f       	adc	r19, r25
     da4:	2e 5f       	subi	r18, 0xFE	; 254
     da6:	3f 4f       	sbci	r19, 0xFF	; 255
     da8:	17 c0       	rjmp	.+46     	; 0xdd8 <__mulsf3+0x16e>
     daa:	ca 01       	movw	r24, r20
     dac:	81 70       	andi	r24, 0x01	; 1
     dae:	90 70       	andi	r25, 0x00	; 0
     db0:	89 2b       	or	r24, r25
     db2:	61 f0       	breq	.+24     	; 0xdcc <__mulsf3+0x162>
     db4:	16 95       	lsr	r17
     db6:	07 95       	ror	r16
     db8:	f7 94       	ror	r15
     dba:	e7 94       	ror	r14
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	a0 e0       	ldi	r26, 0x00	; 0
     dc2:	b0 e8       	ldi	r27, 0x80	; 128
     dc4:	e8 2a       	or	r14, r24
     dc6:	f9 2a       	or	r15, r25
     dc8:	0a 2b       	or	r16, r26
     dca:	1b 2b       	or	r17, r27
     dcc:	76 95       	lsr	r23
     dce:	67 95       	ror	r22
     dd0:	57 95       	ror	r21
     dd2:	47 95       	ror	r20
     dd4:	2f 5f       	subi	r18, 0xFF	; 255
     dd6:	3f 4f       	sbci	r19, 0xFF	; 255
     dd8:	77 fd       	sbrc	r23, 7
     dda:	e7 cf       	rjmp	.-50     	; 0xdaa <__mulsf3+0x140>
     ddc:	0c c0       	rjmp	.+24     	; 0xdf6 <__mulsf3+0x18c>
     dde:	44 0f       	add	r20, r20
     de0:	55 1f       	adc	r21, r21
     de2:	66 1f       	adc	r22, r22
     de4:	77 1f       	adc	r23, r23
     de6:	17 fd       	sbrc	r17, 7
     de8:	41 60       	ori	r20, 0x01	; 1
     dea:	ee 0c       	add	r14, r14
     dec:	ff 1c       	adc	r15, r15
     dee:	00 1f       	adc	r16, r16
     df0:	11 1f       	adc	r17, r17
     df2:	21 50       	subi	r18, 0x01	; 1
     df4:	30 40       	sbci	r19, 0x00	; 0
     df6:	40 30       	cpi	r20, 0x00	; 0
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	59 07       	cpc	r21, r25
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	69 07       	cpc	r22, r25
     e00:	90 e4       	ldi	r25, 0x40	; 64
     e02:	79 07       	cpc	r23, r25
     e04:	60 f3       	brcs	.-40     	; 0xdde <__mulsf3+0x174>
     e06:	2b 8f       	std	Y+27, r18	; 0x1b
     e08:	3c 8f       	std	Y+28, r19	; 0x1c
     e0a:	db 01       	movw	r26, r22
     e0c:	ca 01       	movw	r24, r20
     e0e:	8f 77       	andi	r24, 0x7F	; 127
     e10:	90 70       	andi	r25, 0x00	; 0
     e12:	a0 70       	andi	r26, 0x00	; 0
     e14:	b0 70       	andi	r27, 0x00	; 0
     e16:	80 34       	cpi	r24, 0x40	; 64
     e18:	91 05       	cpc	r25, r1
     e1a:	a1 05       	cpc	r26, r1
     e1c:	b1 05       	cpc	r27, r1
     e1e:	61 f4       	brne	.+24     	; 0xe38 <__mulsf3+0x1ce>
     e20:	47 fd       	sbrc	r20, 7
     e22:	0a c0       	rjmp	.+20     	; 0xe38 <__mulsf3+0x1ce>
     e24:	e1 14       	cp	r14, r1
     e26:	f1 04       	cpc	r15, r1
     e28:	01 05       	cpc	r16, r1
     e2a:	11 05       	cpc	r17, r1
     e2c:	29 f0       	breq	.+10     	; 0xe38 <__mulsf3+0x1ce>
     e2e:	40 5c       	subi	r20, 0xC0	; 192
     e30:	5f 4f       	sbci	r21, 0xFF	; 255
     e32:	6f 4f       	sbci	r22, 0xFF	; 255
     e34:	7f 4f       	sbci	r23, 0xFF	; 255
     e36:	40 78       	andi	r20, 0x80	; 128
     e38:	1a 8e       	std	Y+26, r1	; 0x1a
     e3a:	fe 17       	cp	r31, r30
     e3c:	11 f0       	breq	.+4      	; 0xe42 <__mulsf3+0x1d8>
     e3e:	81 e0       	ldi	r24, 0x01	; 1
     e40:	8a 8f       	std	Y+26, r24	; 0x1a
     e42:	4d 8f       	std	Y+29, r20	; 0x1d
     e44:	5e 8f       	std	Y+30, r21	; 0x1e
     e46:	6f 8f       	std	Y+31, r22	; 0x1f
     e48:	78 a3       	std	Y+32, r23	; 0x20
     e4a:	83 e0       	ldi	r24, 0x03	; 3
     e4c:	89 8f       	std	Y+25, r24	; 0x19
     e4e:	ce 01       	movw	r24, r28
     e50:	49 96       	adiw	r24, 0x19	; 25
     e52:	0e 94 13 08 	call	0x1026	; 0x1026 <__pack_f>
     e56:	a0 96       	adiw	r28, 0x20	; 32
     e58:	e2 e1       	ldi	r30, 0x12	; 18
     e5a:	0c 94 d5 09 	jmp	0x13aa	; 0x13aa <__epilogue_restores__>

00000e5e <__gtsf2>:
     e5e:	a8 e1       	ldi	r26, 0x18	; 24
     e60:	b0 e0       	ldi	r27, 0x00	; 0
     e62:	e5 e3       	ldi	r30, 0x35	; 53
     e64:	f7 e0       	ldi	r31, 0x07	; 7
     e66:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__prologue_saves__+0x18>
     e6a:	69 83       	std	Y+1, r22	; 0x01
     e6c:	7a 83       	std	Y+2, r23	; 0x02
     e6e:	8b 83       	std	Y+3, r24	; 0x03
     e70:	9c 83       	std	Y+4, r25	; 0x04
     e72:	2d 83       	std	Y+5, r18	; 0x05
     e74:	3e 83       	std	Y+6, r19	; 0x06
     e76:	4f 83       	std	Y+7, r20	; 0x07
     e78:	58 87       	std	Y+8, r21	; 0x08
     e7a:	89 e0       	ldi	r24, 0x09	; 9
     e7c:	e8 2e       	mov	r14, r24
     e7e:	f1 2c       	mov	r15, r1
     e80:	ec 0e       	add	r14, r28
     e82:	fd 1e       	adc	r15, r29
     e84:	ce 01       	movw	r24, r28
     e86:	01 96       	adiw	r24, 0x01	; 1
     e88:	b7 01       	movw	r22, r14
     e8a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     e8e:	8e 01       	movw	r16, r28
     e90:	0f 5e       	subi	r16, 0xEF	; 239
     e92:	1f 4f       	sbci	r17, 0xFF	; 255
     e94:	ce 01       	movw	r24, r28
     e96:	05 96       	adiw	r24, 0x05	; 5
     e98:	b8 01       	movw	r22, r16
     e9a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     e9e:	89 85       	ldd	r24, Y+9	; 0x09
     ea0:	82 30       	cpi	r24, 0x02	; 2
     ea2:	40 f0       	brcs	.+16     	; 0xeb4 <__gtsf2+0x56>
     ea4:	89 89       	ldd	r24, Y+17	; 0x11
     ea6:	82 30       	cpi	r24, 0x02	; 2
     ea8:	28 f0       	brcs	.+10     	; 0xeb4 <__gtsf2+0x56>
     eaa:	c7 01       	movw	r24, r14
     eac:	b8 01       	movw	r22, r16
     eae:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__fpcmp_parts_f>
     eb2:	01 c0       	rjmp	.+2      	; 0xeb6 <__gtsf2+0x58>
     eb4:	8f ef       	ldi	r24, 0xFF	; 255
     eb6:	68 96       	adiw	r28, 0x18	; 24
     eb8:	e6 e0       	ldi	r30, 0x06	; 6
     eba:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__epilogue_restores__+0x18>

00000ebe <__gesf2>:
     ebe:	a8 e1       	ldi	r26, 0x18	; 24
     ec0:	b0 e0       	ldi	r27, 0x00	; 0
     ec2:	e5 e6       	ldi	r30, 0x65	; 101
     ec4:	f7 e0       	ldi	r31, 0x07	; 7
     ec6:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__prologue_saves__+0x18>
     eca:	69 83       	std	Y+1, r22	; 0x01
     ecc:	7a 83       	std	Y+2, r23	; 0x02
     ece:	8b 83       	std	Y+3, r24	; 0x03
     ed0:	9c 83       	std	Y+4, r25	; 0x04
     ed2:	2d 83       	std	Y+5, r18	; 0x05
     ed4:	3e 83       	std	Y+6, r19	; 0x06
     ed6:	4f 83       	std	Y+7, r20	; 0x07
     ed8:	58 87       	std	Y+8, r21	; 0x08
     eda:	89 e0       	ldi	r24, 0x09	; 9
     edc:	e8 2e       	mov	r14, r24
     ede:	f1 2c       	mov	r15, r1
     ee0:	ec 0e       	add	r14, r28
     ee2:	fd 1e       	adc	r15, r29
     ee4:	ce 01       	movw	r24, r28
     ee6:	01 96       	adiw	r24, 0x01	; 1
     ee8:	b7 01       	movw	r22, r14
     eea:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     eee:	8e 01       	movw	r16, r28
     ef0:	0f 5e       	subi	r16, 0xEF	; 239
     ef2:	1f 4f       	sbci	r17, 0xFF	; 255
     ef4:	ce 01       	movw	r24, r28
     ef6:	05 96       	adiw	r24, 0x05	; 5
     ef8:	b8 01       	movw	r22, r16
     efa:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     efe:	89 85       	ldd	r24, Y+9	; 0x09
     f00:	82 30       	cpi	r24, 0x02	; 2
     f02:	40 f0       	brcs	.+16     	; 0xf14 <__gesf2+0x56>
     f04:	89 89       	ldd	r24, Y+17	; 0x11
     f06:	82 30       	cpi	r24, 0x02	; 2
     f08:	28 f0       	brcs	.+10     	; 0xf14 <__gesf2+0x56>
     f0a:	c7 01       	movw	r24, r14
     f0c:	b8 01       	movw	r22, r16
     f0e:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__fpcmp_parts_f>
     f12:	01 c0       	rjmp	.+2      	; 0xf16 <__gesf2+0x58>
     f14:	8f ef       	ldi	r24, 0xFF	; 255
     f16:	68 96       	adiw	r28, 0x18	; 24
     f18:	e6 e0       	ldi	r30, 0x06	; 6
     f1a:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__epilogue_restores__+0x18>

00000f1e <__ltsf2>:
     f1e:	a8 e1       	ldi	r26, 0x18	; 24
     f20:	b0 e0       	ldi	r27, 0x00	; 0
     f22:	e5 e9       	ldi	r30, 0x95	; 149
     f24:	f7 e0       	ldi	r31, 0x07	; 7
     f26:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__prologue_saves__+0x18>
     f2a:	69 83       	std	Y+1, r22	; 0x01
     f2c:	7a 83       	std	Y+2, r23	; 0x02
     f2e:	8b 83       	std	Y+3, r24	; 0x03
     f30:	9c 83       	std	Y+4, r25	; 0x04
     f32:	2d 83       	std	Y+5, r18	; 0x05
     f34:	3e 83       	std	Y+6, r19	; 0x06
     f36:	4f 83       	std	Y+7, r20	; 0x07
     f38:	58 87       	std	Y+8, r21	; 0x08
     f3a:	89 e0       	ldi	r24, 0x09	; 9
     f3c:	e8 2e       	mov	r14, r24
     f3e:	f1 2c       	mov	r15, r1
     f40:	ec 0e       	add	r14, r28
     f42:	fd 1e       	adc	r15, r29
     f44:	ce 01       	movw	r24, r28
     f46:	01 96       	adiw	r24, 0x01	; 1
     f48:	b7 01       	movw	r22, r14
     f4a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     f4e:	8e 01       	movw	r16, r28
     f50:	0f 5e       	subi	r16, 0xEF	; 239
     f52:	1f 4f       	sbci	r17, 0xFF	; 255
     f54:	ce 01       	movw	r24, r28
     f56:	05 96       	adiw	r24, 0x05	; 5
     f58:	b8 01       	movw	r22, r16
     f5a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     f5e:	89 85       	ldd	r24, Y+9	; 0x09
     f60:	82 30       	cpi	r24, 0x02	; 2
     f62:	40 f0       	brcs	.+16     	; 0xf74 <__ltsf2+0x56>
     f64:	89 89       	ldd	r24, Y+17	; 0x11
     f66:	82 30       	cpi	r24, 0x02	; 2
     f68:	28 f0       	brcs	.+10     	; 0xf74 <__ltsf2+0x56>
     f6a:	c7 01       	movw	r24, r14
     f6c:	b8 01       	movw	r22, r16
     f6e:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__fpcmp_parts_f>
     f72:	01 c0       	rjmp	.+2      	; 0xf76 <__ltsf2+0x58>
     f74:	81 e0       	ldi	r24, 0x01	; 1
     f76:	68 96       	adiw	r28, 0x18	; 24
     f78:	e6 e0       	ldi	r30, 0x06	; 6
     f7a:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__epilogue_restores__+0x18>

00000f7e <__fixsfsi>:
     f7e:	ac e0       	ldi	r26, 0x0C	; 12
     f80:	b0 e0       	ldi	r27, 0x00	; 0
     f82:	e5 ec       	ldi	r30, 0xC5	; 197
     f84:	f7 e0       	ldi	r31, 0x07	; 7
     f86:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__prologue_saves__+0x20>
     f8a:	69 83       	std	Y+1, r22	; 0x01
     f8c:	7a 83       	std	Y+2, r23	; 0x02
     f8e:	8b 83       	std	Y+3, r24	; 0x03
     f90:	9c 83       	std	Y+4, r25	; 0x04
     f92:	ce 01       	movw	r24, r28
     f94:	01 96       	adiw	r24, 0x01	; 1
     f96:	be 01       	movw	r22, r28
     f98:	6b 5f       	subi	r22, 0xFB	; 251
     f9a:	7f 4f       	sbci	r23, 0xFF	; 255
     f9c:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__unpack_f>
     fa0:	8d 81       	ldd	r24, Y+5	; 0x05
     fa2:	82 30       	cpi	r24, 0x02	; 2
     fa4:	61 f1       	breq	.+88     	; 0xffe <__fixsfsi+0x80>
     fa6:	82 30       	cpi	r24, 0x02	; 2
     fa8:	50 f1       	brcs	.+84     	; 0xffe <__fixsfsi+0x80>
     faa:	84 30       	cpi	r24, 0x04	; 4
     fac:	21 f4       	brne	.+8      	; 0xfb6 <__fixsfsi+0x38>
     fae:	8e 81       	ldd	r24, Y+6	; 0x06
     fb0:	88 23       	and	r24, r24
     fb2:	51 f1       	breq	.+84     	; 0x1008 <__fixsfsi+0x8a>
     fb4:	2e c0       	rjmp	.+92     	; 0x1012 <__fixsfsi+0x94>
     fb6:	2f 81       	ldd	r18, Y+7	; 0x07
     fb8:	38 85       	ldd	r19, Y+8	; 0x08
     fba:	37 fd       	sbrc	r19, 7
     fbc:	20 c0       	rjmp	.+64     	; 0xffe <__fixsfsi+0x80>
     fbe:	6e 81       	ldd	r22, Y+6	; 0x06
     fc0:	2f 31       	cpi	r18, 0x1F	; 31
     fc2:	31 05       	cpc	r19, r1
     fc4:	1c f0       	brlt	.+6      	; 0xfcc <__fixsfsi+0x4e>
     fc6:	66 23       	and	r22, r22
     fc8:	f9 f0       	breq	.+62     	; 0x1008 <__fixsfsi+0x8a>
     fca:	23 c0       	rjmp	.+70     	; 0x1012 <__fixsfsi+0x94>
     fcc:	8e e1       	ldi	r24, 0x1E	; 30
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	82 1b       	sub	r24, r18
     fd2:	93 0b       	sbc	r25, r19
     fd4:	29 85       	ldd	r18, Y+9	; 0x09
     fd6:	3a 85       	ldd	r19, Y+10	; 0x0a
     fd8:	4b 85       	ldd	r20, Y+11	; 0x0b
     fda:	5c 85       	ldd	r21, Y+12	; 0x0c
     fdc:	04 c0       	rjmp	.+8      	; 0xfe6 <__fixsfsi+0x68>
     fde:	56 95       	lsr	r21
     fe0:	47 95       	ror	r20
     fe2:	37 95       	ror	r19
     fe4:	27 95       	ror	r18
     fe6:	8a 95       	dec	r24
     fe8:	d2 f7       	brpl	.-12     	; 0xfde <__fixsfsi+0x60>
     fea:	66 23       	and	r22, r22
     fec:	b1 f0       	breq	.+44     	; 0x101a <__fixsfsi+0x9c>
     fee:	50 95       	com	r21
     ff0:	40 95       	com	r20
     ff2:	30 95       	com	r19
     ff4:	21 95       	neg	r18
     ff6:	3f 4f       	sbci	r19, 0xFF	; 255
     ff8:	4f 4f       	sbci	r20, 0xFF	; 255
     ffa:	5f 4f       	sbci	r21, 0xFF	; 255
     ffc:	0e c0       	rjmp	.+28     	; 0x101a <__fixsfsi+0x9c>
     ffe:	20 e0       	ldi	r18, 0x00	; 0
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	40 e0       	ldi	r20, 0x00	; 0
    1004:	50 e0       	ldi	r21, 0x00	; 0
    1006:	09 c0       	rjmp	.+18     	; 0x101a <__fixsfsi+0x9c>
    1008:	2f ef       	ldi	r18, 0xFF	; 255
    100a:	3f ef       	ldi	r19, 0xFF	; 255
    100c:	4f ef       	ldi	r20, 0xFF	; 255
    100e:	5f e7       	ldi	r21, 0x7F	; 127
    1010:	04 c0       	rjmp	.+8      	; 0x101a <__fixsfsi+0x9c>
    1012:	20 e0       	ldi	r18, 0x00	; 0
    1014:	30 e0       	ldi	r19, 0x00	; 0
    1016:	40 e0       	ldi	r20, 0x00	; 0
    1018:	50 e8       	ldi	r21, 0x80	; 128
    101a:	b9 01       	movw	r22, r18
    101c:	ca 01       	movw	r24, r20
    101e:	2c 96       	adiw	r28, 0x0c	; 12
    1020:	e2 e0       	ldi	r30, 0x02	; 2
    1022:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <__epilogue_restores__+0x20>

00001026 <__pack_f>:
    1026:	df 92       	push	r13
    1028:	ef 92       	push	r14
    102a:	ff 92       	push	r15
    102c:	0f 93       	push	r16
    102e:	1f 93       	push	r17
    1030:	fc 01       	movw	r30, r24
    1032:	e4 80       	ldd	r14, Z+4	; 0x04
    1034:	f5 80       	ldd	r15, Z+5	; 0x05
    1036:	06 81       	ldd	r16, Z+6	; 0x06
    1038:	17 81       	ldd	r17, Z+7	; 0x07
    103a:	d1 80       	ldd	r13, Z+1	; 0x01
    103c:	80 81       	ld	r24, Z
    103e:	82 30       	cpi	r24, 0x02	; 2
    1040:	48 f4       	brcc	.+18     	; 0x1054 <__pack_f+0x2e>
    1042:	80 e0       	ldi	r24, 0x00	; 0
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	a0 e1       	ldi	r26, 0x10	; 16
    1048:	b0 e0       	ldi	r27, 0x00	; 0
    104a:	e8 2a       	or	r14, r24
    104c:	f9 2a       	or	r15, r25
    104e:	0a 2b       	or	r16, r26
    1050:	1b 2b       	or	r17, r27
    1052:	a5 c0       	rjmp	.+330    	; 0x119e <__pack_f+0x178>
    1054:	84 30       	cpi	r24, 0x04	; 4
    1056:	09 f4       	brne	.+2      	; 0x105a <__pack_f+0x34>
    1058:	9f c0       	rjmp	.+318    	; 0x1198 <__pack_f+0x172>
    105a:	82 30       	cpi	r24, 0x02	; 2
    105c:	21 f4       	brne	.+8      	; 0x1066 <__pack_f+0x40>
    105e:	ee 24       	eor	r14, r14
    1060:	ff 24       	eor	r15, r15
    1062:	87 01       	movw	r16, r14
    1064:	05 c0       	rjmp	.+10     	; 0x1070 <__pack_f+0x4a>
    1066:	e1 14       	cp	r14, r1
    1068:	f1 04       	cpc	r15, r1
    106a:	01 05       	cpc	r16, r1
    106c:	11 05       	cpc	r17, r1
    106e:	19 f4       	brne	.+6      	; 0x1076 <__pack_f+0x50>
    1070:	e0 e0       	ldi	r30, 0x00	; 0
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	96 c0       	rjmp	.+300    	; 0x11a2 <__pack_f+0x17c>
    1076:	62 81       	ldd	r22, Z+2	; 0x02
    1078:	73 81       	ldd	r23, Z+3	; 0x03
    107a:	9f ef       	ldi	r25, 0xFF	; 255
    107c:	62 38       	cpi	r22, 0x82	; 130
    107e:	79 07       	cpc	r23, r25
    1080:	0c f0       	brlt	.+2      	; 0x1084 <__pack_f+0x5e>
    1082:	5b c0       	rjmp	.+182    	; 0x113a <__pack_f+0x114>
    1084:	22 e8       	ldi	r18, 0x82	; 130
    1086:	3f ef       	ldi	r19, 0xFF	; 255
    1088:	26 1b       	sub	r18, r22
    108a:	37 0b       	sbc	r19, r23
    108c:	2a 31       	cpi	r18, 0x1A	; 26
    108e:	31 05       	cpc	r19, r1
    1090:	2c f0       	brlt	.+10     	; 0x109c <__pack_f+0x76>
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	40 e0       	ldi	r20, 0x00	; 0
    1098:	50 e0       	ldi	r21, 0x00	; 0
    109a:	2a c0       	rjmp	.+84     	; 0x10f0 <__pack_f+0xca>
    109c:	b8 01       	movw	r22, r16
    109e:	a7 01       	movw	r20, r14
    10a0:	02 2e       	mov	r0, r18
    10a2:	04 c0       	rjmp	.+8      	; 0x10ac <__pack_f+0x86>
    10a4:	76 95       	lsr	r23
    10a6:	67 95       	ror	r22
    10a8:	57 95       	ror	r21
    10aa:	47 95       	ror	r20
    10ac:	0a 94       	dec	r0
    10ae:	d2 f7       	brpl	.-12     	; 0x10a4 <__pack_f+0x7e>
    10b0:	81 e0       	ldi	r24, 0x01	; 1
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	a0 e0       	ldi	r26, 0x00	; 0
    10b6:	b0 e0       	ldi	r27, 0x00	; 0
    10b8:	04 c0       	rjmp	.+8      	; 0x10c2 <__pack_f+0x9c>
    10ba:	88 0f       	add	r24, r24
    10bc:	99 1f       	adc	r25, r25
    10be:	aa 1f       	adc	r26, r26
    10c0:	bb 1f       	adc	r27, r27
    10c2:	2a 95       	dec	r18
    10c4:	d2 f7       	brpl	.-12     	; 0x10ba <__pack_f+0x94>
    10c6:	01 97       	sbiw	r24, 0x01	; 1
    10c8:	a1 09       	sbc	r26, r1
    10ca:	b1 09       	sbc	r27, r1
    10cc:	8e 21       	and	r24, r14
    10ce:	9f 21       	and	r25, r15
    10d0:	a0 23       	and	r26, r16
    10d2:	b1 23       	and	r27, r17
    10d4:	00 97       	sbiw	r24, 0x00	; 0
    10d6:	a1 05       	cpc	r26, r1
    10d8:	b1 05       	cpc	r27, r1
    10da:	21 f0       	breq	.+8      	; 0x10e4 <__pack_f+0xbe>
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	a0 e0       	ldi	r26, 0x00	; 0
    10e2:	b0 e0       	ldi	r27, 0x00	; 0
    10e4:	9a 01       	movw	r18, r20
    10e6:	ab 01       	movw	r20, r22
    10e8:	28 2b       	or	r18, r24
    10ea:	39 2b       	or	r19, r25
    10ec:	4a 2b       	or	r20, r26
    10ee:	5b 2b       	or	r21, r27
    10f0:	da 01       	movw	r26, r20
    10f2:	c9 01       	movw	r24, r18
    10f4:	8f 77       	andi	r24, 0x7F	; 127
    10f6:	90 70       	andi	r25, 0x00	; 0
    10f8:	a0 70       	andi	r26, 0x00	; 0
    10fa:	b0 70       	andi	r27, 0x00	; 0
    10fc:	80 34       	cpi	r24, 0x40	; 64
    10fe:	91 05       	cpc	r25, r1
    1100:	a1 05       	cpc	r26, r1
    1102:	b1 05       	cpc	r27, r1
    1104:	39 f4       	brne	.+14     	; 0x1114 <__pack_f+0xee>
    1106:	27 ff       	sbrs	r18, 7
    1108:	09 c0       	rjmp	.+18     	; 0x111c <__pack_f+0xf6>
    110a:	20 5c       	subi	r18, 0xC0	; 192
    110c:	3f 4f       	sbci	r19, 0xFF	; 255
    110e:	4f 4f       	sbci	r20, 0xFF	; 255
    1110:	5f 4f       	sbci	r21, 0xFF	; 255
    1112:	04 c0       	rjmp	.+8      	; 0x111c <__pack_f+0xf6>
    1114:	21 5c       	subi	r18, 0xC1	; 193
    1116:	3f 4f       	sbci	r19, 0xFF	; 255
    1118:	4f 4f       	sbci	r20, 0xFF	; 255
    111a:	5f 4f       	sbci	r21, 0xFF	; 255
    111c:	e0 e0       	ldi	r30, 0x00	; 0
    111e:	f0 e0       	ldi	r31, 0x00	; 0
    1120:	20 30       	cpi	r18, 0x00	; 0
    1122:	a0 e0       	ldi	r26, 0x00	; 0
    1124:	3a 07       	cpc	r19, r26
    1126:	a0 e0       	ldi	r26, 0x00	; 0
    1128:	4a 07       	cpc	r20, r26
    112a:	a0 e4       	ldi	r26, 0x40	; 64
    112c:	5a 07       	cpc	r21, r26
    112e:	10 f0       	brcs	.+4      	; 0x1134 <__pack_f+0x10e>
    1130:	e1 e0       	ldi	r30, 0x01	; 1
    1132:	f0 e0       	ldi	r31, 0x00	; 0
    1134:	79 01       	movw	r14, r18
    1136:	8a 01       	movw	r16, r20
    1138:	27 c0       	rjmp	.+78     	; 0x1188 <__pack_f+0x162>
    113a:	60 38       	cpi	r22, 0x80	; 128
    113c:	71 05       	cpc	r23, r1
    113e:	64 f5       	brge	.+88     	; 0x1198 <__pack_f+0x172>
    1140:	fb 01       	movw	r30, r22
    1142:	e1 58       	subi	r30, 0x81	; 129
    1144:	ff 4f       	sbci	r31, 0xFF	; 255
    1146:	d8 01       	movw	r26, r16
    1148:	c7 01       	movw	r24, r14
    114a:	8f 77       	andi	r24, 0x7F	; 127
    114c:	90 70       	andi	r25, 0x00	; 0
    114e:	a0 70       	andi	r26, 0x00	; 0
    1150:	b0 70       	andi	r27, 0x00	; 0
    1152:	80 34       	cpi	r24, 0x40	; 64
    1154:	91 05       	cpc	r25, r1
    1156:	a1 05       	cpc	r26, r1
    1158:	b1 05       	cpc	r27, r1
    115a:	39 f4       	brne	.+14     	; 0x116a <__pack_f+0x144>
    115c:	e7 fe       	sbrs	r14, 7
    115e:	0d c0       	rjmp	.+26     	; 0x117a <__pack_f+0x154>
    1160:	80 e4       	ldi	r24, 0x40	; 64
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	a0 e0       	ldi	r26, 0x00	; 0
    1166:	b0 e0       	ldi	r27, 0x00	; 0
    1168:	04 c0       	rjmp	.+8      	; 0x1172 <__pack_f+0x14c>
    116a:	8f e3       	ldi	r24, 0x3F	; 63
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	a0 e0       	ldi	r26, 0x00	; 0
    1170:	b0 e0       	ldi	r27, 0x00	; 0
    1172:	e8 0e       	add	r14, r24
    1174:	f9 1e       	adc	r15, r25
    1176:	0a 1f       	adc	r16, r26
    1178:	1b 1f       	adc	r17, r27
    117a:	17 ff       	sbrs	r17, 7
    117c:	05 c0       	rjmp	.+10     	; 0x1188 <__pack_f+0x162>
    117e:	16 95       	lsr	r17
    1180:	07 95       	ror	r16
    1182:	f7 94       	ror	r15
    1184:	e7 94       	ror	r14
    1186:	31 96       	adiw	r30, 0x01	; 1
    1188:	87 e0       	ldi	r24, 0x07	; 7
    118a:	16 95       	lsr	r17
    118c:	07 95       	ror	r16
    118e:	f7 94       	ror	r15
    1190:	e7 94       	ror	r14
    1192:	8a 95       	dec	r24
    1194:	d1 f7       	brne	.-12     	; 0x118a <__pack_f+0x164>
    1196:	05 c0       	rjmp	.+10     	; 0x11a2 <__pack_f+0x17c>
    1198:	ee 24       	eor	r14, r14
    119a:	ff 24       	eor	r15, r15
    119c:	87 01       	movw	r16, r14
    119e:	ef ef       	ldi	r30, 0xFF	; 255
    11a0:	f0 e0       	ldi	r31, 0x00	; 0
    11a2:	6e 2f       	mov	r22, r30
    11a4:	67 95       	ror	r22
    11a6:	66 27       	eor	r22, r22
    11a8:	67 95       	ror	r22
    11aa:	90 2f       	mov	r25, r16
    11ac:	9f 77       	andi	r25, 0x7F	; 127
    11ae:	d7 94       	ror	r13
    11b0:	dd 24       	eor	r13, r13
    11b2:	d7 94       	ror	r13
    11b4:	8e 2f       	mov	r24, r30
    11b6:	86 95       	lsr	r24
    11b8:	49 2f       	mov	r20, r25
    11ba:	46 2b       	or	r20, r22
    11bc:	58 2f       	mov	r21, r24
    11be:	5d 29       	or	r21, r13
    11c0:	b7 01       	movw	r22, r14
    11c2:	ca 01       	movw	r24, r20
    11c4:	1f 91       	pop	r17
    11c6:	0f 91       	pop	r16
    11c8:	ff 90       	pop	r15
    11ca:	ef 90       	pop	r14
    11cc:	df 90       	pop	r13
    11ce:	08 95       	ret

000011d0 <__unpack_f>:
    11d0:	fc 01       	movw	r30, r24
    11d2:	db 01       	movw	r26, r22
    11d4:	40 81       	ld	r20, Z
    11d6:	51 81       	ldd	r21, Z+1	; 0x01
    11d8:	22 81       	ldd	r18, Z+2	; 0x02
    11da:	62 2f       	mov	r22, r18
    11dc:	6f 77       	andi	r22, 0x7F	; 127
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	22 1f       	adc	r18, r18
    11e2:	22 27       	eor	r18, r18
    11e4:	22 1f       	adc	r18, r18
    11e6:	93 81       	ldd	r25, Z+3	; 0x03
    11e8:	89 2f       	mov	r24, r25
    11ea:	88 0f       	add	r24, r24
    11ec:	82 2b       	or	r24, r18
    11ee:	28 2f       	mov	r18, r24
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	99 1f       	adc	r25, r25
    11f4:	99 27       	eor	r25, r25
    11f6:	99 1f       	adc	r25, r25
    11f8:	11 96       	adiw	r26, 0x01	; 1
    11fa:	9c 93       	st	X, r25
    11fc:	11 97       	sbiw	r26, 0x01	; 1
    11fe:	21 15       	cp	r18, r1
    1200:	31 05       	cpc	r19, r1
    1202:	a9 f5       	brne	.+106    	; 0x126e <__unpack_f+0x9e>
    1204:	41 15       	cp	r20, r1
    1206:	51 05       	cpc	r21, r1
    1208:	61 05       	cpc	r22, r1
    120a:	71 05       	cpc	r23, r1
    120c:	11 f4       	brne	.+4      	; 0x1212 <__unpack_f+0x42>
    120e:	82 e0       	ldi	r24, 0x02	; 2
    1210:	37 c0       	rjmp	.+110    	; 0x1280 <__unpack_f+0xb0>
    1212:	82 e8       	ldi	r24, 0x82	; 130
    1214:	9f ef       	ldi	r25, 0xFF	; 255
    1216:	13 96       	adiw	r26, 0x03	; 3
    1218:	9c 93       	st	X, r25
    121a:	8e 93       	st	-X, r24
    121c:	12 97       	sbiw	r26, 0x02	; 2
    121e:	9a 01       	movw	r18, r20
    1220:	ab 01       	movw	r20, r22
    1222:	67 e0       	ldi	r22, 0x07	; 7
    1224:	22 0f       	add	r18, r18
    1226:	33 1f       	adc	r19, r19
    1228:	44 1f       	adc	r20, r20
    122a:	55 1f       	adc	r21, r21
    122c:	6a 95       	dec	r22
    122e:	d1 f7       	brne	.-12     	; 0x1224 <__unpack_f+0x54>
    1230:	83 e0       	ldi	r24, 0x03	; 3
    1232:	8c 93       	st	X, r24
    1234:	0d c0       	rjmp	.+26     	; 0x1250 <__unpack_f+0x80>
    1236:	22 0f       	add	r18, r18
    1238:	33 1f       	adc	r19, r19
    123a:	44 1f       	adc	r20, r20
    123c:	55 1f       	adc	r21, r21
    123e:	12 96       	adiw	r26, 0x02	; 2
    1240:	8d 91       	ld	r24, X+
    1242:	9c 91       	ld	r25, X
    1244:	13 97       	sbiw	r26, 0x03	; 3
    1246:	01 97       	sbiw	r24, 0x01	; 1
    1248:	13 96       	adiw	r26, 0x03	; 3
    124a:	9c 93       	st	X, r25
    124c:	8e 93       	st	-X, r24
    124e:	12 97       	sbiw	r26, 0x02	; 2
    1250:	20 30       	cpi	r18, 0x00	; 0
    1252:	80 e0       	ldi	r24, 0x00	; 0
    1254:	38 07       	cpc	r19, r24
    1256:	80 e0       	ldi	r24, 0x00	; 0
    1258:	48 07       	cpc	r20, r24
    125a:	80 e4       	ldi	r24, 0x40	; 64
    125c:	58 07       	cpc	r21, r24
    125e:	58 f3       	brcs	.-42     	; 0x1236 <__unpack_f+0x66>
    1260:	14 96       	adiw	r26, 0x04	; 4
    1262:	2d 93       	st	X+, r18
    1264:	3d 93       	st	X+, r19
    1266:	4d 93       	st	X+, r20
    1268:	5c 93       	st	X, r21
    126a:	17 97       	sbiw	r26, 0x07	; 7
    126c:	08 95       	ret
    126e:	2f 3f       	cpi	r18, 0xFF	; 255
    1270:	31 05       	cpc	r19, r1
    1272:	79 f4       	brne	.+30     	; 0x1292 <__unpack_f+0xc2>
    1274:	41 15       	cp	r20, r1
    1276:	51 05       	cpc	r21, r1
    1278:	61 05       	cpc	r22, r1
    127a:	71 05       	cpc	r23, r1
    127c:	19 f4       	brne	.+6      	; 0x1284 <__unpack_f+0xb4>
    127e:	84 e0       	ldi	r24, 0x04	; 4
    1280:	8c 93       	st	X, r24
    1282:	08 95       	ret
    1284:	64 ff       	sbrs	r22, 4
    1286:	03 c0       	rjmp	.+6      	; 0x128e <__unpack_f+0xbe>
    1288:	81 e0       	ldi	r24, 0x01	; 1
    128a:	8c 93       	st	X, r24
    128c:	12 c0       	rjmp	.+36     	; 0x12b2 <__unpack_f+0xe2>
    128e:	1c 92       	st	X, r1
    1290:	10 c0       	rjmp	.+32     	; 0x12b2 <__unpack_f+0xe2>
    1292:	2f 57       	subi	r18, 0x7F	; 127
    1294:	30 40       	sbci	r19, 0x00	; 0
    1296:	13 96       	adiw	r26, 0x03	; 3
    1298:	3c 93       	st	X, r19
    129a:	2e 93       	st	-X, r18
    129c:	12 97       	sbiw	r26, 0x02	; 2
    129e:	83 e0       	ldi	r24, 0x03	; 3
    12a0:	8c 93       	st	X, r24
    12a2:	87 e0       	ldi	r24, 0x07	; 7
    12a4:	44 0f       	add	r20, r20
    12a6:	55 1f       	adc	r21, r21
    12a8:	66 1f       	adc	r22, r22
    12aa:	77 1f       	adc	r23, r23
    12ac:	8a 95       	dec	r24
    12ae:	d1 f7       	brne	.-12     	; 0x12a4 <__unpack_f+0xd4>
    12b0:	70 64       	ori	r23, 0x40	; 64
    12b2:	14 96       	adiw	r26, 0x04	; 4
    12b4:	4d 93       	st	X+, r20
    12b6:	5d 93       	st	X+, r21
    12b8:	6d 93       	st	X+, r22
    12ba:	7c 93       	st	X, r23
    12bc:	17 97       	sbiw	r26, 0x07	; 7
    12be:	08 95       	ret

000012c0 <__fpcmp_parts_f>:
    12c0:	1f 93       	push	r17
    12c2:	dc 01       	movw	r26, r24
    12c4:	fb 01       	movw	r30, r22
    12c6:	9c 91       	ld	r25, X
    12c8:	92 30       	cpi	r25, 0x02	; 2
    12ca:	08 f4       	brcc	.+2      	; 0x12ce <__fpcmp_parts_f+0xe>
    12cc:	47 c0       	rjmp	.+142    	; 0x135c <__fpcmp_parts_f+0x9c>
    12ce:	80 81       	ld	r24, Z
    12d0:	82 30       	cpi	r24, 0x02	; 2
    12d2:	08 f4       	brcc	.+2      	; 0x12d6 <__fpcmp_parts_f+0x16>
    12d4:	43 c0       	rjmp	.+134    	; 0x135c <__fpcmp_parts_f+0x9c>
    12d6:	94 30       	cpi	r25, 0x04	; 4
    12d8:	51 f4       	brne	.+20     	; 0x12ee <__fpcmp_parts_f+0x2e>
    12da:	11 96       	adiw	r26, 0x01	; 1
    12dc:	1c 91       	ld	r17, X
    12de:	84 30       	cpi	r24, 0x04	; 4
    12e0:	99 f5       	brne	.+102    	; 0x1348 <__fpcmp_parts_f+0x88>
    12e2:	81 81       	ldd	r24, Z+1	; 0x01
    12e4:	68 2f       	mov	r22, r24
    12e6:	70 e0       	ldi	r23, 0x00	; 0
    12e8:	61 1b       	sub	r22, r17
    12ea:	71 09       	sbc	r23, r1
    12ec:	3f c0       	rjmp	.+126    	; 0x136c <__fpcmp_parts_f+0xac>
    12ee:	84 30       	cpi	r24, 0x04	; 4
    12f0:	21 f0       	breq	.+8      	; 0x12fa <__fpcmp_parts_f+0x3a>
    12f2:	92 30       	cpi	r25, 0x02	; 2
    12f4:	31 f4       	brne	.+12     	; 0x1302 <__fpcmp_parts_f+0x42>
    12f6:	82 30       	cpi	r24, 0x02	; 2
    12f8:	b9 f1       	breq	.+110    	; 0x1368 <__fpcmp_parts_f+0xa8>
    12fa:	81 81       	ldd	r24, Z+1	; 0x01
    12fc:	88 23       	and	r24, r24
    12fe:	89 f1       	breq	.+98     	; 0x1362 <__fpcmp_parts_f+0xa2>
    1300:	2d c0       	rjmp	.+90     	; 0x135c <__fpcmp_parts_f+0x9c>
    1302:	11 96       	adiw	r26, 0x01	; 1
    1304:	1c 91       	ld	r17, X
    1306:	11 97       	sbiw	r26, 0x01	; 1
    1308:	82 30       	cpi	r24, 0x02	; 2
    130a:	f1 f0       	breq	.+60     	; 0x1348 <__fpcmp_parts_f+0x88>
    130c:	81 81       	ldd	r24, Z+1	; 0x01
    130e:	18 17       	cp	r17, r24
    1310:	d9 f4       	brne	.+54     	; 0x1348 <__fpcmp_parts_f+0x88>
    1312:	12 96       	adiw	r26, 0x02	; 2
    1314:	2d 91       	ld	r18, X+
    1316:	3c 91       	ld	r19, X
    1318:	13 97       	sbiw	r26, 0x03	; 3
    131a:	82 81       	ldd	r24, Z+2	; 0x02
    131c:	93 81       	ldd	r25, Z+3	; 0x03
    131e:	82 17       	cp	r24, r18
    1320:	93 07       	cpc	r25, r19
    1322:	94 f0       	brlt	.+36     	; 0x1348 <__fpcmp_parts_f+0x88>
    1324:	28 17       	cp	r18, r24
    1326:	39 07       	cpc	r19, r25
    1328:	bc f0       	brlt	.+46     	; 0x1358 <__fpcmp_parts_f+0x98>
    132a:	14 96       	adiw	r26, 0x04	; 4
    132c:	8d 91       	ld	r24, X+
    132e:	9d 91       	ld	r25, X+
    1330:	0d 90       	ld	r0, X+
    1332:	bc 91       	ld	r27, X
    1334:	a0 2d       	mov	r26, r0
    1336:	24 81       	ldd	r18, Z+4	; 0x04
    1338:	35 81       	ldd	r19, Z+5	; 0x05
    133a:	46 81       	ldd	r20, Z+6	; 0x06
    133c:	57 81       	ldd	r21, Z+7	; 0x07
    133e:	28 17       	cp	r18, r24
    1340:	39 07       	cpc	r19, r25
    1342:	4a 07       	cpc	r20, r26
    1344:	5b 07       	cpc	r21, r27
    1346:	18 f4       	brcc	.+6      	; 0x134e <__fpcmp_parts_f+0x8e>
    1348:	11 23       	and	r17, r17
    134a:	41 f0       	breq	.+16     	; 0x135c <__fpcmp_parts_f+0x9c>
    134c:	0a c0       	rjmp	.+20     	; 0x1362 <__fpcmp_parts_f+0xa2>
    134e:	82 17       	cp	r24, r18
    1350:	93 07       	cpc	r25, r19
    1352:	a4 07       	cpc	r26, r20
    1354:	b5 07       	cpc	r27, r21
    1356:	40 f4       	brcc	.+16     	; 0x1368 <__fpcmp_parts_f+0xa8>
    1358:	11 23       	and	r17, r17
    135a:	19 f0       	breq	.+6      	; 0x1362 <__fpcmp_parts_f+0xa2>
    135c:	61 e0       	ldi	r22, 0x01	; 1
    135e:	70 e0       	ldi	r23, 0x00	; 0
    1360:	05 c0       	rjmp	.+10     	; 0x136c <__fpcmp_parts_f+0xac>
    1362:	6f ef       	ldi	r22, 0xFF	; 255
    1364:	7f ef       	ldi	r23, 0xFF	; 255
    1366:	02 c0       	rjmp	.+4      	; 0x136c <__fpcmp_parts_f+0xac>
    1368:	60 e0       	ldi	r22, 0x00	; 0
    136a:	70 e0       	ldi	r23, 0x00	; 0
    136c:	cb 01       	movw	r24, r22
    136e:	1f 91       	pop	r17
    1370:	08 95       	ret

00001372 <__prologue_saves__>:
    1372:	2f 92       	push	r2
    1374:	3f 92       	push	r3
    1376:	4f 92       	push	r4
    1378:	5f 92       	push	r5
    137a:	6f 92       	push	r6
    137c:	7f 92       	push	r7
    137e:	8f 92       	push	r8
    1380:	9f 92       	push	r9
    1382:	af 92       	push	r10
    1384:	bf 92       	push	r11
    1386:	cf 92       	push	r12
    1388:	df 92       	push	r13
    138a:	ef 92       	push	r14
    138c:	ff 92       	push	r15
    138e:	0f 93       	push	r16
    1390:	1f 93       	push	r17
    1392:	cf 93       	push	r28
    1394:	df 93       	push	r29
    1396:	cd b7       	in	r28, 0x3d	; 61
    1398:	de b7       	in	r29, 0x3e	; 62
    139a:	ca 1b       	sub	r28, r26
    139c:	db 0b       	sbc	r29, r27
    139e:	0f b6       	in	r0, 0x3f	; 63
    13a0:	f8 94       	cli
    13a2:	de bf       	out	0x3e, r29	; 62
    13a4:	0f be       	out	0x3f, r0	; 63
    13a6:	cd bf       	out	0x3d, r28	; 61
    13a8:	09 94       	ijmp

000013aa <__epilogue_restores__>:
    13aa:	2a 88       	ldd	r2, Y+18	; 0x12
    13ac:	39 88       	ldd	r3, Y+17	; 0x11
    13ae:	48 88       	ldd	r4, Y+16	; 0x10
    13b0:	5f 84       	ldd	r5, Y+15	; 0x0f
    13b2:	6e 84       	ldd	r6, Y+14	; 0x0e
    13b4:	7d 84       	ldd	r7, Y+13	; 0x0d
    13b6:	8c 84       	ldd	r8, Y+12	; 0x0c
    13b8:	9b 84       	ldd	r9, Y+11	; 0x0b
    13ba:	aa 84       	ldd	r10, Y+10	; 0x0a
    13bc:	b9 84       	ldd	r11, Y+9	; 0x09
    13be:	c8 84       	ldd	r12, Y+8	; 0x08
    13c0:	df 80       	ldd	r13, Y+7	; 0x07
    13c2:	ee 80       	ldd	r14, Y+6	; 0x06
    13c4:	fd 80       	ldd	r15, Y+5	; 0x05
    13c6:	0c 81       	ldd	r16, Y+4	; 0x04
    13c8:	1b 81       	ldd	r17, Y+3	; 0x03
    13ca:	aa 81       	ldd	r26, Y+2	; 0x02
    13cc:	b9 81       	ldd	r27, Y+1	; 0x01
    13ce:	ce 0f       	add	r28, r30
    13d0:	d1 1d       	adc	r29, r1
    13d2:	0f b6       	in	r0, 0x3f	; 63
    13d4:	f8 94       	cli
    13d6:	de bf       	out	0x3e, r29	; 62
    13d8:	0f be       	out	0x3f, r0	; 63
    13da:	cd bf       	out	0x3d, r28	; 61
    13dc:	ed 01       	movw	r28, r26
    13de:	08 95       	ret

000013e0 <_exit>:
    13e0:	f8 94       	cli

000013e2 <__stop_program>:
    13e2:	ff cf       	rjmp	.-2      	; 0x13e2 <__stop_program>
