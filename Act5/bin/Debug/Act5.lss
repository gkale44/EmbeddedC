
bin\Debug\Act5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00001058  000010cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001058  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 000001e0  00000000  00000000  000010d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000215  00000000  00000000  000012b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001fbc  00000000  00000000  000014c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000010fe  00000000  00000000  00003485  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00001280  00000000  00000000  00004583  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000210  00000000  00000000  00005804  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000036d  00000000  00000000  00005a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000007ce  00000000  00000000  00005d81  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000050  00000000  00000000  0000654f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e5       	ldi	r30, 0x58	; 88
      7c:	f0 e1       	ldi	r31, 0x10	; 16
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 bd 01 	call	0x37a	; 0x37a <main>
      8e:	0c 94 2a 08 	jmp	0x1054	; 0x1054 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <adc>:

#include"adc.h"

void adc()
{
      96:	df 93       	push	r29
      98:	cf 93       	push	r28
      9a:	00 d0       	rcall	.+0      	; 0x9c <adc+0x6>
      9c:	0f 92       	push	r0
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
    uint16_t ADC_value;
    TCCR0A |= ((1 << WGM01) | (1 << WGM00));
      a2:	a4 e4       	ldi	r26, 0x44	; 68
      a4:	b0 e0       	ldi	r27, 0x00	; 0
      a6:	e4 e4       	ldi	r30, 0x44	; 68
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	83 60       	ori	r24, 0x03	; 3
      ae:	8c 93       	st	X, r24
    TCCR0A |= (1 << COM0A1);
      b0:	a4 e4       	ldi	r26, 0x44	; 68
      b2:	b0 e0       	ldi	r27, 0x00	; 0
      b4:	e4 e4       	ldi	r30, 0x44	; 68
      b6:	f0 e0       	ldi	r31, 0x00	; 0
      b8:	80 81       	ld	r24, Z
      ba:	80 68       	ori	r24, 0x80	; 128
      bc:	8c 93       	st	X, r24
    TCCR0A |= (1 << COM0A0);
      be:	a4 e4       	ldi	r26, 0x44	; 68
      c0:	b0 e0       	ldi	r27, 0x00	; 0
      c2:	e4 e4       	ldi	r30, 0x44	; 68
      c4:	f0 e0       	ldi	r31, 0x00	; 0
      c6:	80 81       	ld	r24, Z
      c8:	80 64       	ori	r24, 0x40	; 64
      ca:	8c 93       	st	X, r24
    TCNT0 = 0x00;
      cc:	e6 e4       	ldi	r30, 0x46	; 70
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	10 82       	st	Z, r1
    OCR0A = 64;
      d2:	e7 e4       	ldi	r30, 0x47	; 71
      d4:	f0 e0       	ldi	r31, 0x00	; 0
      d6:	80 e4       	ldi	r24, 0x40	; 64
      d8:	80 83       	st	Z, r24
    TCCR0B |= ((1 << CS00) | (1 << CS02));
      da:	a5 e4       	ldi	r26, 0x45	; 69
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e5 e4       	ldi	r30, 0x45	; 69
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	80 81       	ld	r24, Z
      e4:	85 60       	ori	r24, 0x05	; 5
      e6:	8c 93       	st	X, r24
    TCCR0B &= ~(1 << CS01);
      e8:	a5 e4       	ldi	r26, 0x45	; 69
      ea:	b0 e0       	ldi	r27, 0x00	; 0
      ec:	e5 e4       	ldi	r30, 0x45	; 69
      ee:	f0 e0       	ldi	r31, 0x00	; 0
      f0:	80 81       	ld	r24, Z
      f2:	8d 7f       	andi	r24, 0xFD	; 253
      f4:	8c 93       	st	X, r24
    sei();
      f6:	78 94       	sei
    ADMUX &=0x00;
      f8:	ec e7       	ldi	r30, 0x7C	; 124
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	20 81       	ld	r18, Z
      fe:	ec e7       	ldi	r30, 0x7C	; 124
     100:	f0 e0       	ldi	r31, 0x00	; 0
     102:	10 82       	st	Z, r1
    ADMUX |= (1 << REFS0);
     104:	ac e7       	ldi	r26, 0x7C	; 124
     106:	b0 e0       	ldi	r27, 0x00	; 0
     108:	ec e7       	ldi	r30, 0x7C	; 124
     10a:	f0 e0       	ldi	r31, 0x00	; 0
     10c:	80 81       	ld	r24, Z
     10e:	80 64       	ori	r24, 0x40	; 64
     110:	8c 93       	st	X, r24
    ADCSRA |= (1<< ADEN);
     112:	aa e7       	ldi	r26, 0x7A	; 122
     114:	b0 e0       	ldi	r27, 0x00	; 0
     116:	ea e7       	ldi	r30, 0x7A	; 122
     118:	f0 e0       	ldi	r31, 0x00	; 0
     11a:	80 81       	ld	r24, Z
     11c:	80 68       	ori	r24, 0x80	; 128
     11e:	8c 93       	st	X, r24
    while(1)
    {
        ADCSRA |= (1 << ADSC);
     120:	aa e7       	ldi	r26, 0x7A	; 122
     122:	b0 e0       	ldi	r27, 0x00	; 0
     124:	ea e7       	ldi	r30, 0x7A	; 122
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	80 81       	ld	r24, Z
     12a:	80 64       	ori	r24, 0x40	; 64
     12c:	8c 93       	st	X, r24
        while (ADCSRA & (1 << ADSC));
     12e:	ea e7       	ldi	r30, 0x7A	; 122
     130:	f0 e0       	ldi	r31, 0x00	; 0
     132:	80 81       	ld	r24, Z
     134:	88 2f       	mov	r24, r24
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	80 74       	andi	r24, 0x40	; 64
     13a:	90 70       	andi	r25, 0x00	; 0
     13c:	00 97       	sbiw	r24, 0x00	; 0
     13e:	b9 f7       	brne	.-18     	; 0x12e <adc+0x98>
        ADC_value = ADC;
     140:	e8 e7       	ldi	r30, 0x78	; 120
     142:	f0 e0       	ldi	r31, 0x00	; 0
     144:	80 81       	ld	r24, Z
     146:	91 81       	ldd	r25, Z+1	; 0x01
     148:	9a 83       	std	Y+2, r25	; 0x02
     14a:	89 83       	std	Y+1, r24	; 0x01

        if((ADC_value>=0) && (ADC_value<=204))
     14c:	89 81       	ldd	r24, Y+1	; 0x01
     14e:	9a 81       	ldd	r25, Y+2	; 0x02
     150:	8d 3c       	cpi	r24, 0xCD	; 205
     152:	91 05       	cpc	r25, r1
     154:	28 f4       	brcc	.+10     	; 0x160 <adc+0xca>
        {
            OCR0A = 64;
     156:	e7 e4       	ldi	r30, 0x47	; 71
     158:	f0 e0       	ldi	r31, 0x00	; 0
     15a:	80 e4       	ldi	r24, 0x40	; 64
     15c:	80 83       	st	Z, r24
     15e:	e0 cf       	rjmp	.-64     	; 0x120 <adc+0x8a>
        }
        else if((ADC_value>=205) && (ADC_value<=408))
     160:	89 81       	ldd	r24, Y+1	; 0x01
     162:	9a 81       	ldd	r25, Y+2	; 0x02
     164:	8d 3c       	cpi	r24, 0xCD	; 205
     166:	91 05       	cpc	r25, r1
     168:	58 f0       	brcs	.+22     	; 0x180 <adc+0xea>
     16a:	89 81       	ldd	r24, Y+1	; 0x01
     16c:	9a 81       	ldd	r25, Y+2	; 0x02
     16e:	21 e0       	ldi	r18, 0x01	; 1
     170:	89 39       	cpi	r24, 0x99	; 153
     172:	92 07       	cpc	r25, r18
     174:	28 f4       	brcc	.+10     	; 0x180 <adc+0xea>
        {
            OCR0A = 128;
     176:	e7 e4       	ldi	r30, 0x47	; 71
     178:	f0 e0       	ldi	r31, 0x00	; 0
     17a:	80 e8       	ldi	r24, 0x80	; 128
     17c:	80 83       	st	Z, r24
     17e:	d0 cf       	rjmp	.-96     	; 0x120 <adc+0x8a>
        }
        else if((ADC_value>=409) && (ADC_value<=612))
     180:	89 81       	ldd	r24, Y+1	; 0x01
     182:	9a 81       	ldd	r25, Y+2	; 0x02
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	89 39       	cpi	r24, 0x99	; 153
     188:	92 07       	cpc	r25, r18
     18a:	58 f0       	brcs	.+22     	; 0x1a2 <adc+0x10c>
     18c:	89 81       	ldd	r24, Y+1	; 0x01
     18e:	9a 81       	ldd	r25, Y+2	; 0x02
     190:	22 e0       	ldi	r18, 0x02	; 2
     192:	85 36       	cpi	r24, 0x65	; 101
     194:	92 07       	cpc	r25, r18
     196:	28 f4       	brcc	.+10     	; 0x1a2 <adc+0x10c>
        {
            OCR0A = 192;
     198:	e7 e4       	ldi	r30, 0x47	; 71
     19a:	f0 e0       	ldi	r31, 0x00	; 0
     19c:	80 ec       	ldi	r24, 0xC0	; 192
     19e:	80 83       	st	Z, r24
     1a0:	bf cf       	rjmp	.-130    	; 0x120 <adc+0x8a>
        }
        else if(ADC_value>=612)
     1a2:	89 81       	ldd	r24, Y+1	; 0x01
     1a4:	9a 81       	ldd	r25, Y+2	; 0x02
     1a6:	22 e0       	ldi	r18, 0x02	; 2
     1a8:	84 36       	cpi	r24, 0x64	; 100
     1aa:	92 07       	cpc	r25, r18
     1ac:	08 f4       	brcc	.+2      	; 0x1b0 <adc+0x11a>
     1ae:	b8 cf       	rjmp	.-144    	; 0x120 <adc+0x8a>
        {
            OCR0A = 255;
     1b0:	e7 e4       	ldi	r30, 0x47	; 71
     1b2:	f0 e0       	ldi	r31, 0x00	; 0
     1b4:	8f ef       	ldi	r24, 0xFF	; 255
     1b6:	80 83       	st	Z, r24
     1b8:	b3 cf       	rjmp	.-154    	; 0x120 <adc+0x8a>

000001ba <AppMode>:
#include "AppMode.h"
#include "adc.h"
void AppMode()
{
     1ba:	df 93       	push	r29
     1bc:	cf 93       	push	r28
     1be:	cd b7       	in	r28, 0x3d	; 61
     1c0:	de b7       	in	r29, 0x3e	; 62
    adc();
     1c2:	0e 94 4b 00 	call	0x96	; 0x96 <adc>
}
     1c6:	cf 91       	pop	r28
     1c8:	df 91       	pop	r29
     1ca:	08 95       	ret

000001cc <GPIOConfig>:
#include "GPIO.h"

int GPIOConfig(pin,mode)
{
     1cc:	df 93       	push	r29
     1ce:	cf 93       	push	r28
     1d0:	00 d0       	rcall	.+0      	; 0x1d2 <GPIOConfig+0x6>
     1d2:	00 d0       	rcall	.+0      	; 0x1d4 <GPIOConfig+0x8>
     1d4:	00 d0       	rcall	.+0      	; 0x1d6 <GPIOConfig+0xa>
     1d6:	cd b7       	in	r28, 0x3d	; 61
     1d8:	de b7       	in	r29, 0x3e	; 62
     1da:	9a 83       	std	Y+2, r25	; 0x02
     1dc:	89 83       	std	Y+1, r24	; 0x01
     1de:	7c 83       	std	Y+4, r23	; 0x04
     1e0:	6b 83       	std	Y+3, r22	; 0x03
    if (mode == 0)
     1e2:	8b 81       	ldd	r24, Y+3	; 0x03
     1e4:	9c 81       	ldd	r25, Y+4	; 0x04
     1e6:	00 97       	sbiw	r24, 0x00	; 0
     1e8:	09 f0       	breq	.+2      	; 0x1ec <GPIOConfig+0x20>
     1ea:	43 c0       	rjmp	.+134    	; 0x272 <GPIOConfig+0xa6>
    {
        CLR_BIT(DDRD, pin);
     1ec:	aa e2       	ldi	r26, 0x2A	; 42
     1ee:	b0 e0       	ldi	r27, 0x00	; 0
     1f0:	ea e2       	ldi	r30, 0x2A	; 42
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	80 81       	ld	r24, Z
     1f6:	28 2f       	mov	r18, r24
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	09 80       	ldd	r0, Y+1	; 0x01
     1fe:	02 c0       	rjmp	.+4      	; 0x204 <GPIOConfig+0x38>
     200:	88 0f       	add	r24, r24
     202:	99 1f       	adc	r25, r25
     204:	0a 94       	dec	r0
     206:	e2 f7       	brpl	.-8      	; 0x200 <GPIOConfig+0x34>
     208:	80 95       	com	r24
     20a:	82 23       	and	r24, r18
     20c:	8c 93       	st	X, r24
        SET_BIT(PORTD, pin);
     20e:	ab e2       	ldi	r26, 0x2B	; 43
     210:	b0 e0       	ldi	r27, 0x00	; 0
     212:	eb e2       	ldi	r30, 0x2B	; 43
     214:	f0 e0       	ldi	r31, 0x00	; 0
     216:	80 81       	ld	r24, Z
     218:	28 2f       	mov	r18, r24
     21a:	81 e0       	ldi	r24, 0x01	; 1
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	09 80       	ldd	r0, Y+1	; 0x01
     220:	02 c0       	rjmp	.+4      	; 0x226 <GPIOConfig+0x5a>
     222:	88 0f       	add	r24, r24
     224:	99 1f       	adc	r25, r25
     226:	0a 94       	dec	r0
     228:	e2 f7       	brpl	.-8      	; 0x222 <GPIOConfig+0x56>
     22a:	82 2b       	or	r24, r18
     22c:	8c 93       	st	X, r24
        CLR_BIT(DDRC, pin);
     22e:	a7 e2       	ldi	r26, 0x27	; 39
     230:	b0 e0       	ldi	r27, 0x00	; 0
     232:	e7 e2       	ldi	r30, 0x27	; 39
     234:	f0 e0       	ldi	r31, 0x00	; 0
     236:	80 81       	ld	r24, Z
     238:	28 2f       	mov	r18, r24
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	09 80       	ldd	r0, Y+1	; 0x01
     240:	02 c0       	rjmp	.+4      	; 0x246 <GPIOConfig+0x7a>
     242:	88 0f       	add	r24, r24
     244:	99 1f       	adc	r25, r25
     246:	0a 94       	dec	r0
     248:	e2 f7       	brpl	.-8      	; 0x242 <GPIOConfig+0x76>
     24a:	80 95       	com	r24
     24c:	82 23       	and	r24, r18
     24e:	8c 93       	st	X, r24
        SET_BIT(PORTC, pin);
     250:	a8 e2       	ldi	r26, 0x28	; 40
     252:	b0 e0       	ldi	r27, 0x00	; 0
     254:	e8 e2       	ldi	r30, 0x28	; 40
     256:	f0 e0       	ldi	r31, 0x00	; 0
     258:	80 81       	ld	r24, Z
     25a:	28 2f       	mov	r18, r24
     25c:	81 e0       	ldi	r24, 0x01	; 1
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	09 80       	ldd	r0, Y+1	; 0x01
     262:	02 c0       	rjmp	.+4      	; 0x268 <GPIOConfig+0x9c>
     264:	88 0f       	add	r24, r24
     266:	99 1f       	adc	r25, r25
     268:	0a 94       	dec	r0
     26a:	e2 f7       	brpl	.-8      	; 0x264 <GPIOConfig+0x98>
     26c:	82 2b       	or	r24, r18
     26e:	8c 93       	st	X, r24
     270:	26 c0       	rjmp	.+76     	; 0x2be <GPIOConfig+0xf2>
    }
    else if(mode == 1)
     272:	8b 81       	ldd	r24, Y+3	; 0x03
     274:	9c 81       	ldd	r25, Y+4	; 0x04
     276:	81 30       	cpi	r24, 0x01	; 1
     278:	91 05       	cpc	r25, r1
     27a:	09 f5       	brne	.+66     	; 0x2be <GPIOConfig+0xf2>
    {
        SET_BIT(DDRD, pin);
     27c:	aa e2       	ldi	r26, 0x2A	; 42
     27e:	b0 e0       	ldi	r27, 0x00	; 0
     280:	ea e2       	ldi	r30, 0x2A	; 42
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	28 2f       	mov	r18, r24
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	09 80       	ldd	r0, Y+1	; 0x01
     28e:	02 c0       	rjmp	.+4      	; 0x294 <GPIOConfig+0xc8>
     290:	88 0f       	add	r24, r24
     292:	99 1f       	adc	r25, r25
     294:	0a 94       	dec	r0
     296:	e2 f7       	brpl	.-8      	; 0x290 <GPIOConfig+0xc4>
     298:	82 2b       	or	r24, r18
     29a:	8c 93       	st	X, r24
        CLR_BIT(PORTD, pin);
     29c:	ab e2       	ldi	r26, 0x2B	; 43
     29e:	b0 e0       	ldi	r27, 0x00	; 0
     2a0:	eb e2       	ldi	r30, 0x2B	; 43
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	80 81       	ld	r24, Z
     2a6:	28 2f       	mov	r18, r24
     2a8:	81 e0       	ldi	r24, 0x01	; 1
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	09 80       	ldd	r0, Y+1	; 0x01
     2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <GPIOConfig+0xe8>
     2b0:	88 0f       	add	r24, r24
     2b2:	99 1f       	adc	r25, r25
     2b4:	0a 94       	dec	r0
     2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <GPIOConfig+0xe4>
     2b8:	80 95       	com	r24
     2ba:	82 23       	and	r24, r18
     2bc:	8c 93       	st	X, r24
    }
}
     2be:	26 96       	adiw	r28, 0x06	; 6
     2c0:	0f b6       	in	r0, 0x3f	; 63
     2c2:	f8 94       	cli
     2c4:	de bf       	out	0x3e, r29	; 62
     2c6:	0f be       	out	0x3f, r0	; 63
     2c8:	cd bf       	out	0x3d, r28	; 61
     2ca:	cf 91       	pop	r28
     2cc:	df 91       	pop	r29
     2ce:	08 95       	ret

000002d0 <GPIOPinWrite>:
int GPIOPinWrite(pin,state)
{
     2d0:	df 93       	push	r29
     2d2:	cf 93       	push	r28
     2d4:	00 d0       	rcall	.+0      	; 0x2d6 <GPIOPinWrite+0x6>
     2d6:	00 d0       	rcall	.+0      	; 0x2d8 <GPIOPinWrite+0x8>
     2d8:	00 d0       	rcall	.+0      	; 0x2da <GPIOPinWrite+0xa>
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	9a 83       	std	Y+2, r25	; 0x02
     2e0:	89 83       	std	Y+1, r24	; 0x01
     2e2:	7c 83       	std	Y+4, r23	; 0x04
     2e4:	6b 83       	std	Y+3, r22	; 0x03
    if(state == 1)
     2e6:	8b 81       	ldd	r24, Y+3	; 0x03
     2e8:	9c 81       	ldd	r25, Y+4	; 0x04
     2ea:	81 30       	cpi	r24, 0x01	; 1
     2ec:	91 05       	cpc	r25, r1
     2ee:	89 f4       	brne	.+34     	; 0x312 <GPIOPinWrite+0x42>
    {
        SET_BIT(PORTD, pin);
     2f0:	ab e2       	ldi	r26, 0x2B	; 43
     2f2:	b0 e0       	ldi	r27, 0x00	; 0
     2f4:	eb e2       	ldi	r30, 0x2B	; 43
     2f6:	f0 e0       	ldi	r31, 0x00	; 0
     2f8:	80 81       	ld	r24, Z
     2fa:	28 2f       	mov	r18, r24
     2fc:	81 e0       	ldi	r24, 0x01	; 1
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	09 80       	ldd	r0, Y+1	; 0x01
     302:	02 c0       	rjmp	.+4      	; 0x308 <GPIOPinWrite+0x38>
     304:	88 0f       	add	r24, r24
     306:	99 1f       	adc	r25, r25
     308:	0a 94       	dec	r0
     30a:	e2 f7       	brpl	.-8      	; 0x304 <GPIOPinWrite+0x34>
     30c:	82 2b       	or	r24, r18
     30e:	8c 93       	st	X, r24
     310:	2b c0       	rjmp	.+86     	; 0x368 <GPIOPinWrite+0x98>
    }
    else if(state == 0)
     312:	8b 81       	ldd	r24, Y+3	; 0x03
     314:	9c 81       	ldd	r25, Y+4	; 0x04
     316:	00 97       	sbiw	r24, 0x00	; 0
     318:	91 f4       	brne	.+36     	; 0x33e <GPIOPinWrite+0x6e>
    {
        CLR_BIT(PORTD, pin);
     31a:	ab e2       	ldi	r26, 0x2B	; 43
     31c:	b0 e0       	ldi	r27, 0x00	; 0
     31e:	eb e2       	ldi	r30, 0x2B	; 43
     320:	f0 e0       	ldi	r31, 0x00	; 0
     322:	80 81       	ld	r24, Z
     324:	28 2f       	mov	r18, r24
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	09 80       	ldd	r0, Y+1	; 0x01
     32c:	02 c0       	rjmp	.+4      	; 0x332 <GPIOPinWrite+0x62>
     32e:	88 0f       	add	r24, r24
     330:	99 1f       	adc	r25, r25
     332:	0a 94       	dec	r0
     334:	e2 f7       	brpl	.-8      	; 0x32e <GPIOPinWrite+0x5e>
     336:	80 95       	com	r24
     338:	82 23       	and	r24, r18
     33a:	8c 93       	st	X, r24
     33c:	15 c0       	rjmp	.+42     	; 0x368 <GPIOPinWrite+0x98>
    }
    else if(state == 2)
     33e:	8b 81       	ldd	r24, Y+3	; 0x03
     340:	9c 81       	ldd	r25, Y+4	; 0x04
     342:	82 30       	cpi	r24, 0x02	; 2
     344:	91 05       	cpc	r25, r1
     346:	81 f4       	brne	.+32     	; 0x368 <GPIOPinWrite+0x98>
    {
        PORTD ^= (1 << pin);
     348:	ab e2       	ldi	r26, 0x2B	; 43
     34a:	b0 e0       	ldi	r27, 0x00	; 0
     34c:	eb e2       	ldi	r30, 0x2B	; 43
     34e:	f0 e0       	ldi	r31, 0x00	; 0
     350:	80 81       	ld	r24, Z
     352:	28 2f       	mov	r18, r24
     354:	81 e0       	ldi	r24, 0x01	; 1
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	09 80       	ldd	r0, Y+1	; 0x01
     35a:	02 c0       	rjmp	.+4      	; 0x360 <GPIOPinWrite+0x90>
     35c:	88 0f       	add	r24, r24
     35e:	99 1f       	adc	r25, r25
     360:	0a 94       	dec	r0
     362:	e2 f7       	brpl	.-8      	; 0x35c <GPIOPinWrite+0x8c>
     364:	82 27       	eor	r24, r18
     366:	8c 93       	st	X, r24
    }
}
     368:	26 96       	adiw	r28, 0x06	; 6
     36a:	0f b6       	in	r0, 0x3f	; 63
     36c:	f8 94       	cli
     36e:	de bf       	out	0x3e, r29	; 62
     370:	0f be       	out	0x3f, r0	; 63
     372:	cd bf       	out	0x3d, r28	; 61
     374:	cf 91       	pop	r28
     376:	df 91       	pop	r29
     378:	08 95       	ret

0000037a <main>:
#define LOW 0
#define HIGH 1
#define TRIGGER 2

int main()
{
     37a:	df 93       	push	r29
     37c:	cf 93       	push	r28
     37e:	0f 92       	push	r0
     380:	cd b7       	in	r28, 0x3d	; 61
     382:	de b7       	in	r29, 0x3e	; 62
   GPIOConfig(PD1,input);
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	60 e0       	ldi	r22, 0x00	; 0
     38a:	70 e0       	ldi	r23, 0x00	; 0
     38c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <GPIOConfig>
   GPIOConfig(PC0,input);
     390:	80 e0       	ldi	r24, 0x00	; 0
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	60 e0       	ldi	r22, 0x00	; 0
     396:	70 e0       	ldi	r23, 0x00	; 0
     398:	0e 94 e6 00 	call	0x1cc	; 0x1cc <GPIOConfig>
   GPIOConfig(PD6,output);
     39c:	86 e0       	ldi	r24, 0x06	; 6
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	61 e0       	ldi	r22, 0x01	; 1
     3a2:	70 e0       	ldi	r23, 0x00	; 0
     3a4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <GPIOConfig>

    while(1)
    {
        uint8_t PIN_READ=0x00;
     3a8:	19 82       	std	Y+1, r1	; 0x01
        PIN_READ=PIND;
     3aa:	e9 e2       	ldi	r30, 0x29	; 41
     3ac:	f0 e0       	ldi	r31, 0x00	; 0
     3ae:	80 81       	ld	r24, Z
     3b0:	89 83       	std	Y+1, r24	; 0x01
         if((PIN_READ & (1<<PD1)))
     3b2:	89 81       	ldd	r24, Y+1	; 0x01
     3b4:	88 2f       	mov	r24, r24
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	82 70       	andi	r24, 0x02	; 2
     3ba:	90 70       	andi	r25, 0x00	; 0
     3bc:	00 97       	sbiw	r24, 0x00	; 0
     3be:	19 f0       	breq	.+6      	; 0x3c6 <main+0x4c>
        {
            ModeState();
     3c0:	0e 94 e6 01 	call	0x3cc	; 0x3cc <ModeState>
     3c4:	f1 cf       	rjmp	.-30     	; 0x3a8 <main+0x2e>
        }
        else if(~(PIN_READ & (1<<PD1)))
        {
            AppMode();
     3c6:	0e 94 dd 00 	call	0x1ba	; 0x1ba <AppMode>
     3ca:	ee cf       	rjmp	.-36     	; 0x3a8 <main+0x2e>

000003cc <ModeState>:

#include "ModeState.h"
void ModeState()
{
     3cc:	df 93       	push	r29
     3ce:	cf 93       	push	r28
     3d0:	cd b7       	in	r28, 0x3d	; 61
     3d2:	de b7       	in	r29, 0x3e	; 62
     3d4:	2e 97       	sbiw	r28, 0x0e	; 14
     3d6:	0f b6       	in	r0, 0x3f	; 63
     3d8:	f8 94       	cli
     3da:	de bf       	out	0x3e, r29	; 62
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	cd bf       	out	0x3d, r28	; 61

    TCCR0A |= ((1 << WGM01) | (1 << WGM00));
     3e0:	a4 e4       	ldi	r26, 0x44	; 68
     3e2:	b0 e0       	ldi	r27, 0x00	; 0
     3e4:	e4 e4       	ldi	r30, 0x44	; 68
     3e6:	f0 e0       	ldi	r31, 0x00	; 0
     3e8:	80 81       	ld	r24, Z
     3ea:	83 60       	ori	r24, 0x03	; 3
     3ec:	8c 93       	st	X, r24
    TCCR0A |= (1 << COM0A1);
     3ee:	a4 e4       	ldi	r26, 0x44	; 68
     3f0:	b0 e0       	ldi	r27, 0x00	; 0
     3f2:	e4 e4       	ldi	r30, 0x44	; 68
     3f4:	f0 e0       	ldi	r31, 0x00	; 0
     3f6:	80 81       	ld	r24, Z
     3f8:	80 68       	ori	r24, 0x80	; 128
     3fa:	8c 93       	st	X, r24
    TCCR0A |= (1 << COM0A0);
     3fc:	a4 e4       	ldi	r26, 0x44	; 68
     3fe:	b0 e0       	ldi	r27, 0x00	; 0
     400:	e4 e4       	ldi	r30, 0x44	; 68
     402:	f0 e0       	ldi	r31, 0x00	; 0
     404:	80 81       	ld	r24, Z
     406:	80 64       	ori	r24, 0x40	; 64
     408:	8c 93       	st	X, r24
    TCNT0 = 0x00;
     40a:	e6 e4       	ldi	r30, 0x46	; 70
     40c:	f0 e0       	ldi	r31, 0x00	; 0
     40e:	10 82       	st	Z, r1
    OCR0A = 64;
     410:	e7 e4       	ldi	r30, 0x47	; 71
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	80 e4       	ldi	r24, 0x40	; 64
     416:	80 83       	st	Z, r24
    TCCR0B |= ((1 << CS00) | (1 << CS02));
     418:	a5 e4       	ldi	r26, 0x45	; 69
     41a:	b0 e0       	ldi	r27, 0x00	; 0
     41c:	e5 e4       	ldi	r30, 0x45	; 69
     41e:	f0 e0       	ldi	r31, 0x00	; 0
     420:	80 81       	ld	r24, Z
     422:	85 60       	ori	r24, 0x05	; 5
     424:	8c 93       	st	X, r24
    TCCR0B &= ~(1 << CS01);
     426:	a5 e4       	ldi	r26, 0x45	; 69
     428:	b0 e0       	ldi	r27, 0x00	; 0
     42a:	e5 e4       	ldi	r30, 0x45	; 69
     42c:	f0 e0       	ldi	r31, 0x00	; 0
     42e:	80 81       	ld	r24, Z
     430:	8d 7f       	andi	r24, 0xFD	; 253
     432:	8c 93       	st	X, r24
    sei();
     434:	78 94       	sei
     436:	80 e0       	ldi	r24, 0x00	; 0
     438:	90 e4       	ldi	r25, 0x40	; 64
     43a:	ac e1       	ldi	r26, 0x1C	; 28
     43c:	b6 e4       	ldi	r27, 0x46	; 70
     43e:	8b 87       	std	Y+11, r24	; 0x0b
     440:	9c 87       	std	Y+12, r25	; 0x0c
     442:	ad 87       	std	Y+13, r26	; 0x0d
     444:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     446:	6b 85       	ldd	r22, Y+11	; 0x0b
     448:	7c 85       	ldd	r23, Y+12	; 0x0c
     44a:	8d 85       	ldd	r24, Y+13	; 0x0d
     44c:	9e 85       	ldd	r25, Y+14	; 0x0e
     44e:	20 e0       	ldi	r18, 0x00	; 0
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	4a e7       	ldi	r20, 0x7A	; 122
     454:	55 e4       	ldi	r21, 0x45	; 69
     456:	0e 94 6f 04 	call	0x8de	; 0x8de <__mulsf3>
     45a:	dc 01       	movw	r26, r24
     45c:	cb 01       	movw	r24, r22
     45e:	8f 83       	std	Y+7, r24	; 0x07
     460:	98 87       	std	Y+8, r25	; 0x08
     462:	a9 87       	std	Y+9, r26	; 0x09
     464:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     466:	6f 81       	ldd	r22, Y+7	; 0x07
     468:	78 85       	ldd	r23, Y+8	; 0x08
     46a:	89 85       	ldd	r24, Y+9	; 0x09
     46c:	9a 85       	ldd	r25, Y+10	; 0x0a
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	30 e0       	ldi	r19, 0x00	; 0
     472:	40 e8       	ldi	r20, 0x80	; 128
     474:	5f e3       	ldi	r21, 0x3F	; 63
     476:	0e 94 c9 05 	call	0xb92	; 0xb92 <__ltsf2>
     47a:	88 23       	and	r24, r24
     47c:	2c f4       	brge	.+10     	; 0x488 <ModeState+0xbc>
		__ticks = 1;
     47e:	81 e0       	ldi	r24, 0x01	; 1
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	9e 83       	std	Y+6, r25	; 0x06
     484:	8d 83       	std	Y+5, r24	; 0x05
     486:	3f c0       	rjmp	.+126    	; 0x506 <ModeState+0x13a>
	else if (__tmp > 65535)
     488:	6f 81       	ldd	r22, Y+7	; 0x07
     48a:	78 85       	ldd	r23, Y+8	; 0x08
     48c:	89 85       	ldd	r24, Y+9	; 0x09
     48e:	9a 85       	ldd	r25, Y+10	; 0x0a
     490:	20 e0       	ldi	r18, 0x00	; 0
     492:	3f ef       	ldi	r19, 0xFF	; 255
     494:	4f e7       	ldi	r20, 0x7F	; 127
     496:	57 e4       	ldi	r21, 0x47	; 71
     498:	0e 94 69 05 	call	0xad2	; 0xad2 <__gtsf2>
     49c:	18 16       	cp	r1, r24
     49e:	4c f5       	brge	.+82     	; 0x4f2 <ModeState+0x126>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4a0:	6b 85       	ldd	r22, Y+11	; 0x0b
     4a2:	7c 85       	ldd	r23, Y+12	; 0x0c
     4a4:	8d 85       	ldd	r24, Y+13	; 0x0d
     4a6:	9e 85       	ldd	r25, Y+14	; 0x0e
     4a8:	20 e0       	ldi	r18, 0x00	; 0
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	40 e2       	ldi	r20, 0x20	; 32
     4ae:	51 e4       	ldi	r21, 0x41	; 65
     4b0:	0e 94 6f 04 	call	0x8de	; 0x8de <__mulsf3>
     4b4:	dc 01       	movw	r26, r24
     4b6:	cb 01       	movw	r24, r22
     4b8:	bc 01       	movw	r22, r24
     4ba:	cd 01       	movw	r24, r26
     4bc:	0e 94 99 02 	call	0x532	; 0x532 <__fixunssfsi>
     4c0:	dc 01       	movw	r26, r24
     4c2:	cb 01       	movw	r24, r22
     4c4:	9e 83       	std	Y+6, r25	; 0x06
     4c6:	8d 83       	std	Y+5, r24	; 0x05
     4c8:	0f c0       	rjmp	.+30     	; 0x4e8 <ModeState+0x11c>
     4ca:	80 e9       	ldi	r24, 0x90	; 144
     4cc:	91 e0       	ldi	r25, 0x01	; 1
     4ce:	9c 83       	std	Y+4, r25	; 0x04
     4d0:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     4d2:	8b 81       	ldd	r24, Y+3	; 0x03
     4d4:	9c 81       	ldd	r25, Y+4	; 0x04
     4d6:	01 97       	sbiw	r24, 0x01	; 1
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <ModeState+0x10a>
     4da:	9c 83       	std	Y+4, r25	; 0x04
     4dc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4de:	8d 81       	ldd	r24, Y+5	; 0x05
     4e0:	9e 81       	ldd	r25, Y+6	; 0x06
     4e2:	01 97       	sbiw	r24, 0x01	; 1
     4e4:	9e 83       	std	Y+6, r25	; 0x06
     4e6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4e8:	8d 81       	ldd	r24, Y+5	; 0x05
     4ea:	9e 81       	ldd	r25, Y+6	; 0x06
     4ec:	00 97       	sbiw	r24, 0x00	; 0
     4ee:	69 f7       	brne	.-38     	; 0x4ca <ModeState+0xfe>
     4f0:	14 c0       	rjmp	.+40     	; 0x51a <ModeState+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4f2:	6f 81       	ldd	r22, Y+7	; 0x07
     4f4:	78 85       	ldd	r23, Y+8	; 0x08
     4f6:	89 85       	ldd	r24, Y+9	; 0x09
     4f8:	9a 85       	ldd	r25, Y+10	; 0x0a
     4fa:	0e 94 99 02 	call	0x532	; 0x532 <__fixunssfsi>
     4fe:	dc 01       	movw	r26, r24
     500:	cb 01       	movw	r24, r22
     502:	9e 83       	std	Y+6, r25	; 0x06
     504:	8d 83       	std	Y+5, r24	; 0x05
     506:	8d 81       	ldd	r24, Y+5	; 0x05
     508:	9e 81       	ldd	r25, Y+6	; 0x06
     50a:	9a 83       	std	Y+2, r25	; 0x02
     50c:	89 83       	std	Y+1, r24	; 0x01
     50e:	89 81       	ldd	r24, Y+1	; 0x01
     510:	9a 81       	ldd	r25, Y+2	; 0x02
     512:	01 97       	sbiw	r24, 0x01	; 1
     514:	f1 f7       	brne	.-4      	; 0x512 <ModeState+0x146>
     516:	9a 83       	std	Y+2, r25	; 0x02
     518:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(10000);
    TCCR0B=0x00;
     51a:	e5 e4       	ldi	r30, 0x45	; 69
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	10 82       	st	Z, r1
}
     520:	2e 96       	adiw	r28, 0x0e	; 14
     522:	0f b6       	in	r0, 0x3f	; 63
     524:	f8 94       	cli
     526:	de bf       	out	0x3e, r29	; 62
     528:	0f be       	out	0x3f, r0	; 63
     52a:	cd bf       	out	0x3d, r28	; 61
     52c:	cf 91       	pop	r28
     52e:	df 91       	pop	r29
     530:	08 95       	ret

00000532 <__fixunssfsi>:
     532:	ef 92       	push	r14
     534:	ff 92       	push	r15
     536:	0f 93       	push	r16
     538:	1f 93       	push	r17
     53a:	7b 01       	movw	r14, r22
     53c:	8c 01       	movw	r16, r24
     53e:	20 e0       	ldi	r18, 0x00	; 0
     540:	30 e0       	ldi	r19, 0x00	; 0
     542:	40 e0       	ldi	r20, 0x00	; 0
     544:	5f e4       	ldi	r21, 0x4F	; 79
     546:	0e 94 99 05 	call	0xb32	; 0xb32 <__gesf2>
     54a:	88 23       	and	r24, r24
     54c:	8c f0       	brlt	.+34     	; 0x570 <__fixunssfsi+0x3e>
     54e:	c8 01       	movw	r24, r16
     550:	b7 01       	movw	r22, r14
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	40 e0       	ldi	r20, 0x00	; 0
     558:	5f e4       	ldi	r21, 0x4F	; 79
     55a:	0e 94 11 04 	call	0x822	; 0x822 <__subsf3>
     55e:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__fixsfsi>
     562:	9b 01       	movw	r18, r22
     564:	ac 01       	movw	r20, r24
     566:	20 50       	subi	r18, 0x00	; 0
     568:	30 40       	sbci	r19, 0x00	; 0
     56a:	40 40       	sbci	r20, 0x00	; 0
     56c:	50 48       	sbci	r21, 0x80	; 128
     56e:	06 c0       	rjmp	.+12     	; 0x57c <__fixunssfsi+0x4a>
     570:	c8 01       	movw	r24, r16
     572:	b7 01       	movw	r22, r14
     574:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__fixsfsi>
     578:	9b 01       	movw	r18, r22
     57a:	ac 01       	movw	r20, r24
     57c:	b9 01       	movw	r22, r18
     57e:	ca 01       	movw	r24, r20
     580:	1f 91       	pop	r17
     582:	0f 91       	pop	r16
     584:	ff 90       	pop	r15
     586:	ef 90       	pop	r14
     588:	08 95       	ret

0000058a <_fpadd_parts>:
     58a:	a0 e0       	ldi	r26, 0x00	; 0
     58c:	b0 e0       	ldi	r27, 0x00	; 0
     58e:	eb ec       	ldi	r30, 0xCB	; 203
     590:	f2 e0       	ldi	r31, 0x02	; 2
     592:	0c 94 f3 07 	jmp	0xfe6	; 0xfe6 <__prologue_saves__>
     596:	dc 01       	movw	r26, r24
     598:	2b 01       	movw	r4, r22
     59a:	fa 01       	movw	r30, r20
     59c:	9c 91       	ld	r25, X
     59e:	92 30       	cpi	r25, 0x02	; 2
     5a0:	08 f4       	brcc	.+2      	; 0x5a4 <_fpadd_parts+0x1a>
     5a2:	39 c1       	rjmp	.+626    	; 0x816 <_fpadd_parts+0x28c>
     5a4:	eb 01       	movw	r28, r22
     5a6:	88 81       	ld	r24, Y
     5a8:	82 30       	cpi	r24, 0x02	; 2
     5aa:	08 f4       	brcc	.+2      	; 0x5ae <_fpadd_parts+0x24>
     5ac:	33 c1       	rjmp	.+614    	; 0x814 <_fpadd_parts+0x28a>
     5ae:	94 30       	cpi	r25, 0x04	; 4
     5b0:	69 f4       	brne	.+26     	; 0x5cc <_fpadd_parts+0x42>
     5b2:	84 30       	cpi	r24, 0x04	; 4
     5b4:	09 f0       	breq	.+2      	; 0x5b8 <_fpadd_parts+0x2e>
     5b6:	2f c1       	rjmp	.+606    	; 0x816 <_fpadd_parts+0x28c>
     5b8:	11 96       	adiw	r26, 0x01	; 1
     5ba:	9c 91       	ld	r25, X
     5bc:	11 97       	sbiw	r26, 0x01	; 1
     5be:	89 81       	ldd	r24, Y+1	; 0x01
     5c0:	98 17       	cp	r25, r24
     5c2:	09 f4       	brne	.+2      	; 0x5c6 <_fpadd_parts+0x3c>
     5c4:	28 c1       	rjmp	.+592    	; 0x816 <_fpadd_parts+0x28c>
     5c6:	a0 e0       	ldi	r26, 0x00	; 0
     5c8:	b1 e0       	ldi	r27, 0x01	; 1
     5ca:	25 c1       	rjmp	.+586    	; 0x816 <_fpadd_parts+0x28c>
     5cc:	84 30       	cpi	r24, 0x04	; 4
     5ce:	09 f4       	brne	.+2      	; 0x5d2 <_fpadd_parts+0x48>
     5d0:	21 c1       	rjmp	.+578    	; 0x814 <_fpadd_parts+0x28a>
     5d2:	82 30       	cpi	r24, 0x02	; 2
     5d4:	a9 f4       	brne	.+42     	; 0x600 <_fpadd_parts+0x76>
     5d6:	92 30       	cpi	r25, 0x02	; 2
     5d8:	09 f0       	breq	.+2      	; 0x5dc <_fpadd_parts+0x52>
     5da:	1d c1       	rjmp	.+570    	; 0x816 <_fpadd_parts+0x28c>
     5dc:	9a 01       	movw	r18, r20
     5de:	ad 01       	movw	r20, r26
     5e0:	88 e0       	ldi	r24, 0x08	; 8
     5e2:	ea 01       	movw	r28, r20
     5e4:	09 90       	ld	r0, Y+
     5e6:	ae 01       	movw	r20, r28
     5e8:	e9 01       	movw	r28, r18
     5ea:	09 92       	st	Y+, r0
     5ec:	9e 01       	movw	r18, r28
     5ee:	81 50       	subi	r24, 0x01	; 1
     5f0:	c1 f7       	brne	.-16     	; 0x5e2 <_fpadd_parts+0x58>
     5f2:	e2 01       	movw	r28, r4
     5f4:	89 81       	ldd	r24, Y+1	; 0x01
     5f6:	11 96       	adiw	r26, 0x01	; 1
     5f8:	9c 91       	ld	r25, X
     5fa:	89 23       	and	r24, r25
     5fc:	81 83       	std	Z+1, r24	; 0x01
     5fe:	08 c1       	rjmp	.+528    	; 0x810 <_fpadd_parts+0x286>
     600:	92 30       	cpi	r25, 0x02	; 2
     602:	09 f4       	brne	.+2      	; 0x606 <_fpadd_parts+0x7c>
     604:	07 c1       	rjmp	.+526    	; 0x814 <_fpadd_parts+0x28a>
     606:	12 96       	adiw	r26, 0x02	; 2
     608:	2d 90       	ld	r2, X+
     60a:	3c 90       	ld	r3, X
     60c:	13 97       	sbiw	r26, 0x03	; 3
     60e:	eb 01       	movw	r28, r22
     610:	8a 81       	ldd	r24, Y+2	; 0x02
     612:	9b 81       	ldd	r25, Y+3	; 0x03
     614:	14 96       	adiw	r26, 0x04	; 4
     616:	ad 90       	ld	r10, X+
     618:	bd 90       	ld	r11, X+
     61a:	cd 90       	ld	r12, X+
     61c:	dc 90       	ld	r13, X
     61e:	17 97       	sbiw	r26, 0x07	; 7
     620:	ec 80       	ldd	r14, Y+4	; 0x04
     622:	fd 80       	ldd	r15, Y+5	; 0x05
     624:	0e 81       	ldd	r16, Y+6	; 0x06
     626:	1f 81       	ldd	r17, Y+7	; 0x07
     628:	91 01       	movw	r18, r2
     62a:	28 1b       	sub	r18, r24
     62c:	39 0b       	sbc	r19, r25
     62e:	b9 01       	movw	r22, r18
     630:	37 ff       	sbrs	r19, 7
     632:	04 c0       	rjmp	.+8      	; 0x63c <_fpadd_parts+0xb2>
     634:	66 27       	eor	r22, r22
     636:	77 27       	eor	r23, r23
     638:	62 1b       	sub	r22, r18
     63a:	73 0b       	sbc	r23, r19
     63c:	60 32       	cpi	r22, 0x20	; 32
     63e:	71 05       	cpc	r23, r1
     640:	0c f0       	brlt	.+2      	; 0x644 <_fpadd_parts+0xba>
     642:	61 c0       	rjmp	.+194    	; 0x706 <_fpadd_parts+0x17c>
     644:	12 16       	cp	r1, r18
     646:	13 06       	cpc	r1, r19
     648:	6c f5       	brge	.+90     	; 0x6a4 <_fpadd_parts+0x11a>
     64a:	37 01       	movw	r6, r14
     64c:	48 01       	movw	r8, r16
     64e:	06 2e       	mov	r0, r22
     650:	04 c0       	rjmp	.+8      	; 0x65a <_fpadd_parts+0xd0>
     652:	96 94       	lsr	r9
     654:	87 94       	ror	r8
     656:	77 94       	ror	r7
     658:	67 94       	ror	r6
     65a:	0a 94       	dec	r0
     65c:	d2 f7       	brpl	.-12     	; 0x652 <_fpadd_parts+0xc8>
     65e:	21 e0       	ldi	r18, 0x01	; 1
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	40 e0       	ldi	r20, 0x00	; 0
     664:	50 e0       	ldi	r21, 0x00	; 0
     666:	04 c0       	rjmp	.+8      	; 0x670 <_fpadd_parts+0xe6>
     668:	22 0f       	add	r18, r18
     66a:	33 1f       	adc	r19, r19
     66c:	44 1f       	adc	r20, r20
     66e:	55 1f       	adc	r21, r21
     670:	6a 95       	dec	r22
     672:	d2 f7       	brpl	.-12     	; 0x668 <_fpadd_parts+0xde>
     674:	21 50       	subi	r18, 0x01	; 1
     676:	30 40       	sbci	r19, 0x00	; 0
     678:	40 40       	sbci	r20, 0x00	; 0
     67a:	50 40       	sbci	r21, 0x00	; 0
     67c:	2e 21       	and	r18, r14
     67e:	3f 21       	and	r19, r15
     680:	40 23       	and	r20, r16
     682:	51 23       	and	r21, r17
     684:	21 15       	cp	r18, r1
     686:	31 05       	cpc	r19, r1
     688:	41 05       	cpc	r20, r1
     68a:	51 05       	cpc	r21, r1
     68c:	21 f0       	breq	.+8      	; 0x696 <_fpadd_parts+0x10c>
     68e:	21 e0       	ldi	r18, 0x01	; 1
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	40 e0       	ldi	r20, 0x00	; 0
     694:	50 e0       	ldi	r21, 0x00	; 0
     696:	79 01       	movw	r14, r18
     698:	8a 01       	movw	r16, r20
     69a:	e6 28       	or	r14, r6
     69c:	f7 28       	or	r15, r7
     69e:	08 29       	or	r16, r8
     6a0:	19 29       	or	r17, r9
     6a2:	3c c0       	rjmp	.+120    	; 0x71c <_fpadd_parts+0x192>
     6a4:	23 2b       	or	r18, r19
     6a6:	d1 f1       	breq	.+116    	; 0x71c <_fpadd_parts+0x192>
     6a8:	26 0e       	add	r2, r22
     6aa:	37 1e       	adc	r3, r23
     6ac:	35 01       	movw	r6, r10
     6ae:	46 01       	movw	r8, r12
     6b0:	06 2e       	mov	r0, r22
     6b2:	04 c0       	rjmp	.+8      	; 0x6bc <_fpadd_parts+0x132>
     6b4:	96 94       	lsr	r9
     6b6:	87 94       	ror	r8
     6b8:	77 94       	ror	r7
     6ba:	67 94       	ror	r6
     6bc:	0a 94       	dec	r0
     6be:	d2 f7       	brpl	.-12     	; 0x6b4 <_fpadd_parts+0x12a>
     6c0:	21 e0       	ldi	r18, 0x01	; 1
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	40 e0       	ldi	r20, 0x00	; 0
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	04 c0       	rjmp	.+8      	; 0x6d2 <_fpadd_parts+0x148>
     6ca:	22 0f       	add	r18, r18
     6cc:	33 1f       	adc	r19, r19
     6ce:	44 1f       	adc	r20, r20
     6d0:	55 1f       	adc	r21, r21
     6d2:	6a 95       	dec	r22
     6d4:	d2 f7       	brpl	.-12     	; 0x6ca <_fpadd_parts+0x140>
     6d6:	21 50       	subi	r18, 0x01	; 1
     6d8:	30 40       	sbci	r19, 0x00	; 0
     6da:	40 40       	sbci	r20, 0x00	; 0
     6dc:	50 40       	sbci	r21, 0x00	; 0
     6de:	2a 21       	and	r18, r10
     6e0:	3b 21       	and	r19, r11
     6e2:	4c 21       	and	r20, r12
     6e4:	5d 21       	and	r21, r13
     6e6:	21 15       	cp	r18, r1
     6e8:	31 05       	cpc	r19, r1
     6ea:	41 05       	cpc	r20, r1
     6ec:	51 05       	cpc	r21, r1
     6ee:	21 f0       	breq	.+8      	; 0x6f8 <_fpadd_parts+0x16e>
     6f0:	21 e0       	ldi	r18, 0x01	; 1
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	40 e0       	ldi	r20, 0x00	; 0
     6f6:	50 e0       	ldi	r21, 0x00	; 0
     6f8:	59 01       	movw	r10, r18
     6fa:	6a 01       	movw	r12, r20
     6fc:	a6 28       	or	r10, r6
     6fe:	b7 28       	or	r11, r7
     700:	c8 28       	or	r12, r8
     702:	d9 28       	or	r13, r9
     704:	0b c0       	rjmp	.+22     	; 0x71c <_fpadd_parts+0x192>
     706:	82 15       	cp	r24, r2
     708:	93 05       	cpc	r25, r3
     70a:	2c f0       	brlt	.+10     	; 0x716 <_fpadd_parts+0x18c>
     70c:	1c 01       	movw	r2, r24
     70e:	aa 24       	eor	r10, r10
     710:	bb 24       	eor	r11, r11
     712:	65 01       	movw	r12, r10
     714:	03 c0       	rjmp	.+6      	; 0x71c <_fpadd_parts+0x192>
     716:	ee 24       	eor	r14, r14
     718:	ff 24       	eor	r15, r15
     71a:	87 01       	movw	r16, r14
     71c:	11 96       	adiw	r26, 0x01	; 1
     71e:	9c 91       	ld	r25, X
     720:	d2 01       	movw	r26, r4
     722:	11 96       	adiw	r26, 0x01	; 1
     724:	8c 91       	ld	r24, X
     726:	98 17       	cp	r25, r24
     728:	09 f4       	brne	.+2      	; 0x72c <_fpadd_parts+0x1a2>
     72a:	45 c0       	rjmp	.+138    	; 0x7b6 <_fpadd_parts+0x22c>
     72c:	99 23       	and	r25, r25
     72e:	39 f0       	breq	.+14     	; 0x73e <_fpadd_parts+0x1b4>
     730:	a8 01       	movw	r20, r16
     732:	97 01       	movw	r18, r14
     734:	2a 19       	sub	r18, r10
     736:	3b 09       	sbc	r19, r11
     738:	4c 09       	sbc	r20, r12
     73a:	5d 09       	sbc	r21, r13
     73c:	06 c0       	rjmp	.+12     	; 0x74a <_fpadd_parts+0x1c0>
     73e:	a6 01       	movw	r20, r12
     740:	95 01       	movw	r18, r10
     742:	2e 19       	sub	r18, r14
     744:	3f 09       	sbc	r19, r15
     746:	40 0b       	sbc	r20, r16
     748:	51 0b       	sbc	r21, r17
     74a:	57 fd       	sbrc	r21, 7
     74c:	08 c0       	rjmp	.+16     	; 0x75e <_fpadd_parts+0x1d4>
     74e:	11 82       	std	Z+1, r1	; 0x01
     750:	33 82       	std	Z+3, r3	; 0x03
     752:	22 82       	std	Z+2, r2	; 0x02
     754:	24 83       	std	Z+4, r18	; 0x04
     756:	35 83       	std	Z+5, r19	; 0x05
     758:	46 83       	std	Z+6, r20	; 0x06
     75a:	57 83       	std	Z+7, r21	; 0x07
     75c:	1d c0       	rjmp	.+58     	; 0x798 <_fpadd_parts+0x20e>
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	81 83       	std	Z+1, r24	; 0x01
     762:	33 82       	std	Z+3, r3	; 0x03
     764:	22 82       	std	Z+2, r2	; 0x02
     766:	88 27       	eor	r24, r24
     768:	99 27       	eor	r25, r25
     76a:	dc 01       	movw	r26, r24
     76c:	82 1b       	sub	r24, r18
     76e:	93 0b       	sbc	r25, r19
     770:	a4 0b       	sbc	r26, r20
     772:	b5 0b       	sbc	r27, r21
     774:	84 83       	std	Z+4, r24	; 0x04
     776:	95 83       	std	Z+5, r25	; 0x05
     778:	a6 83       	std	Z+6, r26	; 0x06
     77a:	b7 83       	std	Z+7, r27	; 0x07
     77c:	0d c0       	rjmp	.+26     	; 0x798 <_fpadd_parts+0x20e>
     77e:	22 0f       	add	r18, r18
     780:	33 1f       	adc	r19, r19
     782:	44 1f       	adc	r20, r20
     784:	55 1f       	adc	r21, r21
     786:	24 83       	std	Z+4, r18	; 0x04
     788:	35 83       	std	Z+5, r19	; 0x05
     78a:	46 83       	std	Z+6, r20	; 0x06
     78c:	57 83       	std	Z+7, r21	; 0x07
     78e:	82 81       	ldd	r24, Z+2	; 0x02
     790:	93 81       	ldd	r25, Z+3	; 0x03
     792:	01 97       	sbiw	r24, 0x01	; 1
     794:	93 83       	std	Z+3, r25	; 0x03
     796:	82 83       	std	Z+2, r24	; 0x02
     798:	24 81       	ldd	r18, Z+4	; 0x04
     79a:	35 81       	ldd	r19, Z+5	; 0x05
     79c:	46 81       	ldd	r20, Z+6	; 0x06
     79e:	57 81       	ldd	r21, Z+7	; 0x07
     7a0:	da 01       	movw	r26, r20
     7a2:	c9 01       	movw	r24, r18
     7a4:	01 97       	sbiw	r24, 0x01	; 1
     7a6:	a1 09       	sbc	r26, r1
     7a8:	b1 09       	sbc	r27, r1
     7aa:	8f 5f       	subi	r24, 0xFF	; 255
     7ac:	9f 4f       	sbci	r25, 0xFF	; 255
     7ae:	af 4f       	sbci	r26, 0xFF	; 255
     7b0:	bf 43       	sbci	r27, 0x3F	; 63
     7b2:	28 f3       	brcs	.-54     	; 0x77e <_fpadd_parts+0x1f4>
     7b4:	0b c0       	rjmp	.+22     	; 0x7cc <_fpadd_parts+0x242>
     7b6:	91 83       	std	Z+1, r25	; 0x01
     7b8:	33 82       	std	Z+3, r3	; 0x03
     7ba:	22 82       	std	Z+2, r2	; 0x02
     7bc:	ea 0c       	add	r14, r10
     7be:	fb 1c       	adc	r15, r11
     7c0:	0c 1d       	adc	r16, r12
     7c2:	1d 1d       	adc	r17, r13
     7c4:	e4 82       	std	Z+4, r14	; 0x04
     7c6:	f5 82       	std	Z+5, r15	; 0x05
     7c8:	06 83       	std	Z+6, r16	; 0x06
     7ca:	17 83       	std	Z+7, r17	; 0x07
     7cc:	83 e0       	ldi	r24, 0x03	; 3
     7ce:	80 83       	st	Z, r24
     7d0:	24 81       	ldd	r18, Z+4	; 0x04
     7d2:	35 81       	ldd	r19, Z+5	; 0x05
     7d4:	46 81       	ldd	r20, Z+6	; 0x06
     7d6:	57 81       	ldd	r21, Z+7	; 0x07
     7d8:	57 ff       	sbrs	r21, 7
     7da:	1a c0       	rjmp	.+52     	; 0x810 <_fpadd_parts+0x286>
     7dc:	c9 01       	movw	r24, r18
     7de:	aa 27       	eor	r26, r26
     7e0:	97 fd       	sbrc	r25, 7
     7e2:	a0 95       	com	r26
     7e4:	ba 2f       	mov	r27, r26
     7e6:	81 70       	andi	r24, 0x01	; 1
     7e8:	90 70       	andi	r25, 0x00	; 0
     7ea:	a0 70       	andi	r26, 0x00	; 0
     7ec:	b0 70       	andi	r27, 0x00	; 0
     7ee:	56 95       	lsr	r21
     7f0:	47 95       	ror	r20
     7f2:	37 95       	ror	r19
     7f4:	27 95       	ror	r18
     7f6:	82 2b       	or	r24, r18
     7f8:	93 2b       	or	r25, r19
     7fa:	a4 2b       	or	r26, r20
     7fc:	b5 2b       	or	r27, r21
     7fe:	84 83       	std	Z+4, r24	; 0x04
     800:	95 83       	std	Z+5, r25	; 0x05
     802:	a6 83       	std	Z+6, r26	; 0x06
     804:	b7 83       	std	Z+7, r27	; 0x07
     806:	82 81       	ldd	r24, Z+2	; 0x02
     808:	93 81       	ldd	r25, Z+3	; 0x03
     80a:	01 96       	adiw	r24, 0x01	; 1
     80c:	93 83       	std	Z+3, r25	; 0x03
     80e:	82 83       	std	Z+2, r24	; 0x02
     810:	df 01       	movw	r26, r30
     812:	01 c0       	rjmp	.+2      	; 0x816 <_fpadd_parts+0x28c>
     814:	d2 01       	movw	r26, r4
     816:	cd 01       	movw	r24, r26
     818:	cd b7       	in	r28, 0x3d	; 61
     81a:	de b7       	in	r29, 0x3e	; 62
     81c:	e2 e1       	ldi	r30, 0x12	; 18
     81e:	0c 94 0f 08 	jmp	0x101e	; 0x101e <__epilogue_restores__>

00000822 <__subsf3>:
     822:	a0 e2       	ldi	r26, 0x20	; 32
     824:	b0 e0       	ldi	r27, 0x00	; 0
     826:	e7 e1       	ldi	r30, 0x17	; 23
     828:	f4 e0       	ldi	r31, 0x04	; 4
     82a:	0c 94 ff 07 	jmp	0xffe	; 0xffe <__prologue_saves__+0x18>
     82e:	69 83       	std	Y+1, r22	; 0x01
     830:	7a 83       	std	Y+2, r23	; 0x02
     832:	8b 83       	std	Y+3, r24	; 0x03
     834:	9c 83       	std	Y+4, r25	; 0x04
     836:	2d 83       	std	Y+5, r18	; 0x05
     838:	3e 83       	std	Y+6, r19	; 0x06
     83a:	4f 83       	std	Y+7, r20	; 0x07
     83c:	58 87       	std	Y+8, r21	; 0x08
     83e:	e9 e0       	ldi	r30, 0x09	; 9
     840:	ee 2e       	mov	r14, r30
     842:	f1 2c       	mov	r15, r1
     844:	ec 0e       	add	r14, r28
     846:	fd 1e       	adc	r15, r29
     848:	ce 01       	movw	r24, r28
     84a:	01 96       	adiw	r24, 0x01	; 1
     84c:	b7 01       	movw	r22, r14
     84e:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     852:	8e 01       	movw	r16, r28
     854:	0f 5e       	subi	r16, 0xEF	; 239
     856:	1f 4f       	sbci	r17, 0xFF	; 255
     858:	ce 01       	movw	r24, r28
     85a:	05 96       	adiw	r24, 0x05	; 5
     85c:	b8 01       	movw	r22, r16
     85e:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     862:	8a 89       	ldd	r24, Y+18	; 0x12
     864:	91 e0       	ldi	r25, 0x01	; 1
     866:	89 27       	eor	r24, r25
     868:	8a 8b       	std	Y+18, r24	; 0x12
     86a:	c7 01       	movw	r24, r14
     86c:	b8 01       	movw	r22, r16
     86e:	ae 01       	movw	r20, r28
     870:	47 5e       	subi	r20, 0xE7	; 231
     872:	5f 4f       	sbci	r21, 0xFF	; 255
     874:	0e 94 c5 02 	call	0x58a	; 0x58a <_fpadd_parts>
     878:	0e 94 4d 06 	call	0xc9a	; 0xc9a <__pack_f>
     87c:	a0 96       	adiw	r28, 0x20	; 32
     87e:	e6 e0       	ldi	r30, 0x06	; 6
     880:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__epilogue_restores__+0x18>

00000884 <__addsf3>:
     884:	a0 e2       	ldi	r26, 0x20	; 32
     886:	b0 e0       	ldi	r27, 0x00	; 0
     888:	e8 e4       	ldi	r30, 0x48	; 72
     88a:	f4 e0       	ldi	r31, 0x04	; 4
     88c:	0c 94 ff 07 	jmp	0xffe	; 0xffe <__prologue_saves__+0x18>
     890:	69 83       	std	Y+1, r22	; 0x01
     892:	7a 83       	std	Y+2, r23	; 0x02
     894:	8b 83       	std	Y+3, r24	; 0x03
     896:	9c 83       	std	Y+4, r25	; 0x04
     898:	2d 83       	std	Y+5, r18	; 0x05
     89a:	3e 83       	std	Y+6, r19	; 0x06
     89c:	4f 83       	std	Y+7, r20	; 0x07
     89e:	58 87       	std	Y+8, r21	; 0x08
     8a0:	f9 e0       	ldi	r31, 0x09	; 9
     8a2:	ef 2e       	mov	r14, r31
     8a4:	f1 2c       	mov	r15, r1
     8a6:	ec 0e       	add	r14, r28
     8a8:	fd 1e       	adc	r15, r29
     8aa:	ce 01       	movw	r24, r28
     8ac:	01 96       	adiw	r24, 0x01	; 1
     8ae:	b7 01       	movw	r22, r14
     8b0:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     8b4:	8e 01       	movw	r16, r28
     8b6:	0f 5e       	subi	r16, 0xEF	; 239
     8b8:	1f 4f       	sbci	r17, 0xFF	; 255
     8ba:	ce 01       	movw	r24, r28
     8bc:	05 96       	adiw	r24, 0x05	; 5
     8be:	b8 01       	movw	r22, r16
     8c0:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     8c4:	c7 01       	movw	r24, r14
     8c6:	b8 01       	movw	r22, r16
     8c8:	ae 01       	movw	r20, r28
     8ca:	47 5e       	subi	r20, 0xE7	; 231
     8cc:	5f 4f       	sbci	r21, 0xFF	; 255
     8ce:	0e 94 c5 02 	call	0x58a	; 0x58a <_fpadd_parts>
     8d2:	0e 94 4d 06 	call	0xc9a	; 0xc9a <__pack_f>
     8d6:	a0 96       	adiw	r28, 0x20	; 32
     8d8:	e6 e0       	ldi	r30, 0x06	; 6
     8da:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__epilogue_restores__+0x18>

000008de <__mulsf3>:
     8de:	a0 e2       	ldi	r26, 0x20	; 32
     8e0:	b0 e0       	ldi	r27, 0x00	; 0
     8e2:	e5 e7       	ldi	r30, 0x75	; 117
     8e4:	f4 e0       	ldi	r31, 0x04	; 4
     8e6:	0c 94 f3 07 	jmp	0xfe6	; 0xfe6 <__prologue_saves__>
     8ea:	69 83       	std	Y+1, r22	; 0x01
     8ec:	7a 83       	std	Y+2, r23	; 0x02
     8ee:	8b 83       	std	Y+3, r24	; 0x03
     8f0:	9c 83       	std	Y+4, r25	; 0x04
     8f2:	2d 83       	std	Y+5, r18	; 0x05
     8f4:	3e 83       	std	Y+6, r19	; 0x06
     8f6:	4f 83       	std	Y+7, r20	; 0x07
     8f8:	58 87       	std	Y+8, r21	; 0x08
     8fa:	ce 01       	movw	r24, r28
     8fc:	01 96       	adiw	r24, 0x01	; 1
     8fe:	be 01       	movw	r22, r28
     900:	67 5f       	subi	r22, 0xF7	; 247
     902:	7f 4f       	sbci	r23, 0xFF	; 255
     904:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     908:	ce 01       	movw	r24, r28
     90a:	05 96       	adiw	r24, 0x05	; 5
     90c:	be 01       	movw	r22, r28
     90e:	6f 5e       	subi	r22, 0xEF	; 239
     910:	7f 4f       	sbci	r23, 0xFF	; 255
     912:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     916:	99 85       	ldd	r25, Y+9	; 0x09
     918:	92 30       	cpi	r25, 0x02	; 2
     91a:	88 f0       	brcs	.+34     	; 0x93e <__stack+0x3f>
     91c:	89 89       	ldd	r24, Y+17	; 0x11
     91e:	82 30       	cpi	r24, 0x02	; 2
     920:	c8 f0       	brcs	.+50     	; 0x954 <__stack+0x55>
     922:	94 30       	cpi	r25, 0x04	; 4
     924:	19 f4       	brne	.+6      	; 0x92c <__stack+0x2d>
     926:	82 30       	cpi	r24, 0x02	; 2
     928:	51 f4       	brne	.+20     	; 0x93e <__stack+0x3f>
     92a:	04 c0       	rjmp	.+8      	; 0x934 <__stack+0x35>
     92c:	84 30       	cpi	r24, 0x04	; 4
     92e:	29 f4       	brne	.+10     	; 0x93a <__stack+0x3b>
     930:	92 30       	cpi	r25, 0x02	; 2
     932:	81 f4       	brne	.+32     	; 0x954 <__stack+0x55>
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	c6 c0       	rjmp	.+396    	; 0xac6 <__stack+0x1c7>
     93a:	92 30       	cpi	r25, 0x02	; 2
     93c:	49 f4       	brne	.+18     	; 0x950 <__stack+0x51>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	9a 85       	ldd	r25, Y+10	; 0x0a
     942:	8a 89       	ldd	r24, Y+18	; 0x12
     944:	98 13       	cpse	r25, r24
     946:	21 e0       	ldi	r18, 0x01	; 1
     948:	2a 87       	std	Y+10, r18	; 0x0a
     94a:	ce 01       	movw	r24, r28
     94c:	09 96       	adiw	r24, 0x09	; 9
     94e:	bb c0       	rjmp	.+374    	; 0xac6 <__stack+0x1c7>
     950:	82 30       	cpi	r24, 0x02	; 2
     952:	49 f4       	brne	.+18     	; 0x966 <__stack+0x67>
     954:	20 e0       	ldi	r18, 0x00	; 0
     956:	9a 85       	ldd	r25, Y+10	; 0x0a
     958:	8a 89       	ldd	r24, Y+18	; 0x12
     95a:	98 13       	cpse	r25, r24
     95c:	21 e0       	ldi	r18, 0x01	; 1
     95e:	2a 8b       	std	Y+18, r18	; 0x12
     960:	ce 01       	movw	r24, r28
     962:	41 96       	adiw	r24, 0x11	; 17
     964:	b0 c0       	rjmp	.+352    	; 0xac6 <__stack+0x1c7>
     966:	2d 84       	ldd	r2, Y+13	; 0x0d
     968:	3e 84       	ldd	r3, Y+14	; 0x0e
     96a:	4f 84       	ldd	r4, Y+15	; 0x0f
     96c:	58 88       	ldd	r5, Y+16	; 0x10
     96e:	6d 88       	ldd	r6, Y+21	; 0x15
     970:	7e 88       	ldd	r7, Y+22	; 0x16
     972:	8f 88       	ldd	r8, Y+23	; 0x17
     974:	98 8c       	ldd	r9, Y+24	; 0x18
     976:	ee 24       	eor	r14, r14
     978:	ff 24       	eor	r15, r15
     97a:	87 01       	movw	r16, r14
     97c:	aa 24       	eor	r10, r10
     97e:	bb 24       	eor	r11, r11
     980:	65 01       	movw	r12, r10
     982:	40 e0       	ldi	r20, 0x00	; 0
     984:	50 e0       	ldi	r21, 0x00	; 0
     986:	60 e0       	ldi	r22, 0x00	; 0
     988:	70 e0       	ldi	r23, 0x00	; 0
     98a:	e0 e0       	ldi	r30, 0x00	; 0
     98c:	f0 e0       	ldi	r31, 0x00	; 0
     98e:	c1 01       	movw	r24, r2
     990:	81 70       	andi	r24, 0x01	; 1
     992:	90 70       	andi	r25, 0x00	; 0
     994:	89 2b       	or	r24, r25
     996:	e9 f0       	breq	.+58     	; 0x9d2 <__stack+0xd3>
     998:	e6 0c       	add	r14, r6
     99a:	f7 1c       	adc	r15, r7
     99c:	08 1d       	adc	r16, r8
     99e:	19 1d       	adc	r17, r9
     9a0:	9a 01       	movw	r18, r20
     9a2:	ab 01       	movw	r20, r22
     9a4:	2a 0d       	add	r18, r10
     9a6:	3b 1d       	adc	r19, r11
     9a8:	4c 1d       	adc	r20, r12
     9aa:	5d 1d       	adc	r21, r13
     9ac:	80 e0       	ldi	r24, 0x00	; 0
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	a0 e0       	ldi	r26, 0x00	; 0
     9b2:	b0 e0       	ldi	r27, 0x00	; 0
     9b4:	e6 14       	cp	r14, r6
     9b6:	f7 04       	cpc	r15, r7
     9b8:	08 05       	cpc	r16, r8
     9ba:	19 05       	cpc	r17, r9
     9bc:	20 f4       	brcc	.+8      	; 0x9c6 <__stack+0xc7>
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	a0 e0       	ldi	r26, 0x00	; 0
     9c4:	b0 e0       	ldi	r27, 0x00	; 0
     9c6:	ba 01       	movw	r22, r20
     9c8:	a9 01       	movw	r20, r18
     9ca:	48 0f       	add	r20, r24
     9cc:	59 1f       	adc	r21, r25
     9ce:	6a 1f       	adc	r22, r26
     9d0:	7b 1f       	adc	r23, r27
     9d2:	aa 0c       	add	r10, r10
     9d4:	bb 1c       	adc	r11, r11
     9d6:	cc 1c       	adc	r12, r12
     9d8:	dd 1c       	adc	r13, r13
     9da:	97 fe       	sbrs	r9, 7
     9dc:	08 c0       	rjmp	.+16     	; 0x9ee <__stack+0xef>
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	a0 e0       	ldi	r26, 0x00	; 0
     9e4:	b0 e0       	ldi	r27, 0x00	; 0
     9e6:	a8 2a       	or	r10, r24
     9e8:	b9 2a       	or	r11, r25
     9ea:	ca 2a       	or	r12, r26
     9ec:	db 2a       	or	r13, r27
     9ee:	31 96       	adiw	r30, 0x01	; 1
     9f0:	e0 32       	cpi	r30, 0x20	; 32
     9f2:	f1 05       	cpc	r31, r1
     9f4:	49 f0       	breq	.+18     	; 0xa08 <__stack+0x109>
     9f6:	66 0c       	add	r6, r6
     9f8:	77 1c       	adc	r7, r7
     9fa:	88 1c       	adc	r8, r8
     9fc:	99 1c       	adc	r9, r9
     9fe:	56 94       	lsr	r5
     a00:	47 94       	ror	r4
     a02:	37 94       	ror	r3
     a04:	27 94       	ror	r2
     a06:	c3 cf       	rjmp	.-122    	; 0x98e <__stack+0x8f>
     a08:	fa 85       	ldd	r31, Y+10	; 0x0a
     a0a:	ea 89       	ldd	r30, Y+18	; 0x12
     a0c:	2b 89       	ldd	r18, Y+19	; 0x13
     a0e:	3c 89       	ldd	r19, Y+20	; 0x14
     a10:	8b 85       	ldd	r24, Y+11	; 0x0b
     a12:	9c 85       	ldd	r25, Y+12	; 0x0c
     a14:	28 0f       	add	r18, r24
     a16:	39 1f       	adc	r19, r25
     a18:	2e 5f       	subi	r18, 0xFE	; 254
     a1a:	3f 4f       	sbci	r19, 0xFF	; 255
     a1c:	17 c0       	rjmp	.+46     	; 0xa4c <__stack+0x14d>
     a1e:	ca 01       	movw	r24, r20
     a20:	81 70       	andi	r24, 0x01	; 1
     a22:	90 70       	andi	r25, 0x00	; 0
     a24:	89 2b       	or	r24, r25
     a26:	61 f0       	breq	.+24     	; 0xa40 <__stack+0x141>
     a28:	16 95       	lsr	r17
     a2a:	07 95       	ror	r16
     a2c:	f7 94       	ror	r15
     a2e:	e7 94       	ror	r14
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e8       	ldi	r27, 0x80	; 128
     a38:	e8 2a       	or	r14, r24
     a3a:	f9 2a       	or	r15, r25
     a3c:	0a 2b       	or	r16, r26
     a3e:	1b 2b       	or	r17, r27
     a40:	76 95       	lsr	r23
     a42:	67 95       	ror	r22
     a44:	57 95       	ror	r21
     a46:	47 95       	ror	r20
     a48:	2f 5f       	subi	r18, 0xFF	; 255
     a4a:	3f 4f       	sbci	r19, 0xFF	; 255
     a4c:	77 fd       	sbrc	r23, 7
     a4e:	e7 cf       	rjmp	.-50     	; 0xa1e <__stack+0x11f>
     a50:	0c c0       	rjmp	.+24     	; 0xa6a <__stack+0x16b>
     a52:	44 0f       	add	r20, r20
     a54:	55 1f       	adc	r21, r21
     a56:	66 1f       	adc	r22, r22
     a58:	77 1f       	adc	r23, r23
     a5a:	17 fd       	sbrc	r17, 7
     a5c:	41 60       	ori	r20, 0x01	; 1
     a5e:	ee 0c       	add	r14, r14
     a60:	ff 1c       	adc	r15, r15
     a62:	00 1f       	adc	r16, r16
     a64:	11 1f       	adc	r17, r17
     a66:	21 50       	subi	r18, 0x01	; 1
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	40 30       	cpi	r20, 0x00	; 0
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	59 07       	cpc	r21, r25
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	69 07       	cpc	r22, r25
     a74:	90 e4       	ldi	r25, 0x40	; 64
     a76:	79 07       	cpc	r23, r25
     a78:	60 f3       	brcs	.-40     	; 0xa52 <__stack+0x153>
     a7a:	2b 8f       	std	Y+27, r18	; 0x1b
     a7c:	3c 8f       	std	Y+28, r19	; 0x1c
     a7e:	db 01       	movw	r26, r22
     a80:	ca 01       	movw	r24, r20
     a82:	8f 77       	andi	r24, 0x7F	; 127
     a84:	90 70       	andi	r25, 0x00	; 0
     a86:	a0 70       	andi	r26, 0x00	; 0
     a88:	b0 70       	andi	r27, 0x00	; 0
     a8a:	80 34       	cpi	r24, 0x40	; 64
     a8c:	91 05       	cpc	r25, r1
     a8e:	a1 05       	cpc	r26, r1
     a90:	b1 05       	cpc	r27, r1
     a92:	61 f4       	brne	.+24     	; 0xaac <__stack+0x1ad>
     a94:	47 fd       	sbrc	r20, 7
     a96:	0a c0       	rjmp	.+20     	; 0xaac <__stack+0x1ad>
     a98:	e1 14       	cp	r14, r1
     a9a:	f1 04       	cpc	r15, r1
     a9c:	01 05       	cpc	r16, r1
     a9e:	11 05       	cpc	r17, r1
     aa0:	29 f0       	breq	.+10     	; 0xaac <__stack+0x1ad>
     aa2:	40 5c       	subi	r20, 0xC0	; 192
     aa4:	5f 4f       	sbci	r21, 0xFF	; 255
     aa6:	6f 4f       	sbci	r22, 0xFF	; 255
     aa8:	7f 4f       	sbci	r23, 0xFF	; 255
     aaa:	40 78       	andi	r20, 0x80	; 128
     aac:	1a 8e       	std	Y+26, r1	; 0x1a
     aae:	fe 17       	cp	r31, r30
     ab0:	11 f0       	breq	.+4      	; 0xab6 <__stack+0x1b7>
     ab2:	81 e0       	ldi	r24, 0x01	; 1
     ab4:	8a 8f       	std	Y+26, r24	; 0x1a
     ab6:	4d 8f       	std	Y+29, r20	; 0x1d
     ab8:	5e 8f       	std	Y+30, r21	; 0x1e
     aba:	6f 8f       	std	Y+31, r22	; 0x1f
     abc:	78 a3       	std	Y+32, r23	; 0x20
     abe:	83 e0       	ldi	r24, 0x03	; 3
     ac0:	89 8f       	std	Y+25, r24	; 0x19
     ac2:	ce 01       	movw	r24, r28
     ac4:	49 96       	adiw	r24, 0x19	; 25
     ac6:	0e 94 4d 06 	call	0xc9a	; 0xc9a <__pack_f>
     aca:	a0 96       	adiw	r28, 0x20	; 32
     acc:	e2 e1       	ldi	r30, 0x12	; 18
     ace:	0c 94 0f 08 	jmp	0x101e	; 0x101e <__epilogue_restores__>

00000ad2 <__gtsf2>:
     ad2:	a8 e1       	ldi	r26, 0x18	; 24
     ad4:	b0 e0       	ldi	r27, 0x00	; 0
     ad6:	ef e6       	ldi	r30, 0x6F	; 111
     ad8:	f5 e0       	ldi	r31, 0x05	; 5
     ada:	0c 94 ff 07 	jmp	0xffe	; 0xffe <__prologue_saves__+0x18>
     ade:	69 83       	std	Y+1, r22	; 0x01
     ae0:	7a 83       	std	Y+2, r23	; 0x02
     ae2:	8b 83       	std	Y+3, r24	; 0x03
     ae4:	9c 83       	std	Y+4, r25	; 0x04
     ae6:	2d 83       	std	Y+5, r18	; 0x05
     ae8:	3e 83       	std	Y+6, r19	; 0x06
     aea:	4f 83       	std	Y+7, r20	; 0x07
     aec:	58 87       	std	Y+8, r21	; 0x08
     aee:	89 e0       	ldi	r24, 0x09	; 9
     af0:	e8 2e       	mov	r14, r24
     af2:	f1 2c       	mov	r15, r1
     af4:	ec 0e       	add	r14, r28
     af6:	fd 1e       	adc	r15, r29
     af8:	ce 01       	movw	r24, r28
     afa:	01 96       	adiw	r24, 0x01	; 1
     afc:	b7 01       	movw	r22, r14
     afe:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     b02:	8e 01       	movw	r16, r28
     b04:	0f 5e       	subi	r16, 0xEF	; 239
     b06:	1f 4f       	sbci	r17, 0xFF	; 255
     b08:	ce 01       	movw	r24, r28
     b0a:	05 96       	adiw	r24, 0x05	; 5
     b0c:	b8 01       	movw	r22, r16
     b0e:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     b12:	89 85       	ldd	r24, Y+9	; 0x09
     b14:	82 30       	cpi	r24, 0x02	; 2
     b16:	40 f0       	brcs	.+16     	; 0xb28 <__gtsf2+0x56>
     b18:	89 89       	ldd	r24, Y+17	; 0x11
     b1a:	82 30       	cpi	r24, 0x02	; 2
     b1c:	28 f0       	brcs	.+10     	; 0xb28 <__gtsf2+0x56>
     b1e:	c7 01       	movw	r24, r14
     b20:	b8 01       	movw	r22, r16
     b22:	0e 94 9a 07 	call	0xf34	; 0xf34 <__fpcmp_parts_f>
     b26:	01 c0       	rjmp	.+2      	; 0xb2a <__gtsf2+0x58>
     b28:	8f ef       	ldi	r24, 0xFF	; 255
     b2a:	68 96       	adiw	r28, 0x18	; 24
     b2c:	e6 e0       	ldi	r30, 0x06	; 6
     b2e:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__epilogue_restores__+0x18>

00000b32 <__gesf2>:
     b32:	a8 e1       	ldi	r26, 0x18	; 24
     b34:	b0 e0       	ldi	r27, 0x00	; 0
     b36:	ef e9       	ldi	r30, 0x9F	; 159
     b38:	f5 e0       	ldi	r31, 0x05	; 5
     b3a:	0c 94 ff 07 	jmp	0xffe	; 0xffe <__prologue_saves__+0x18>
     b3e:	69 83       	std	Y+1, r22	; 0x01
     b40:	7a 83       	std	Y+2, r23	; 0x02
     b42:	8b 83       	std	Y+3, r24	; 0x03
     b44:	9c 83       	std	Y+4, r25	; 0x04
     b46:	2d 83       	std	Y+5, r18	; 0x05
     b48:	3e 83       	std	Y+6, r19	; 0x06
     b4a:	4f 83       	std	Y+7, r20	; 0x07
     b4c:	58 87       	std	Y+8, r21	; 0x08
     b4e:	89 e0       	ldi	r24, 0x09	; 9
     b50:	e8 2e       	mov	r14, r24
     b52:	f1 2c       	mov	r15, r1
     b54:	ec 0e       	add	r14, r28
     b56:	fd 1e       	adc	r15, r29
     b58:	ce 01       	movw	r24, r28
     b5a:	01 96       	adiw	r24, 0x01	; 1
     b5c:	b7 01       	movw	r22, r14
     b5e:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     b62:	8e 01       	movw	r16, r28
     b64:	0f 5e       	subi	r16, 0xEF	; 239
     b66:	1f 4f       	sbci	r17, 0xFF	; 255
     b68:	ce 01       	movw	r24, r28
     b6a:	05 96       	adiw	r24, 0x05	; 5
     b6c:	b8 01       	movw	r22, r16
     b6e:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     b72:	89 85       	ldd	r24, Y+9	; 0x09
     b74:	82 30       	cpi	r24, 0x02	; 2
     b76:	40 f0       	brcs	.+16     	; 0xb88 <__gesf2+0x56>
     b78:	89 89       	ldd	r24, Y+17	; 0x11
     b7a:	82 30       	cpi	r24, 0x02	; 2
     b7c:	28 f0       	brcs	.+10     	; 0xb88 <__gesf2+0x56>
     b7e:	c7 01       	movw	r24, r14
     b80:	b8 01       	movw	r22, r16
     b82:	0e 94 9a 07 	call	0xf34	; 0xf34 <__fpcmp_parts_f>
     b86:	01 c0       	rjmp	.+2      	; 0xb8a <__gesf2+0x58>
     b88:	8f ef       	ldi	r24, 0xFF	; 255
     b8a:	68 96       	adiw	r28, 0x18	; 24
     b8c:	e6 e0       	ldi	r30, 0x06	; 6
     b8e:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__epilogue_restores__+0x18>

00000b92 <__ltsf2>:
     b92:	a8 e1       	ldi	r26, 0x18	; 24
     b94:	b0 e0       	ldi	r27, 0x00	; 0
     b96:	ef ec       	ldi	r30, 0xCF	; 207
     b98:	f5 e0       	ldi	r31, 0x05	; 5
     b9a:	0c 94 ff 07 	jmp	0xffe	; 0xffe <__prologue_saves__+0x18>
     b9e:	69 83       	std	Y+1, r22	; 0x01
     ba0:	7a 83       	std	Y+2, r23	; 0x02
     ba2:	8b 83       	std	Y+3, r24	; 0x03
     ba4:	9c 83       	std	Y+4, r25	; 0x04
     ba6:	2d 83       	std	Y+5, r18	; 0x05
     ba8:	3e 83       	std	Y+6, r19	; 0x06
     baa:	4f 83       	std	Y+7, r20	; 0x07
     bac:	58 87       	std	Y+8, r21	; 0x08
     bae:	89 e0       	ldi	r24, 0x09	; 9
     bb0:	e8 2e       	mov	r14, r24
     bb2:	f1 2c       	mov	r15, r1
     bb4:	ec 0e       	add	r14, r28
     bb6:	fd 1e       	adc	r15, r29
     bb8:	ce 01       	movw	r24, r28
     bba:	01 96       	adiw	r24, 0x01	; 1
     bbc:	b7 01       	movw	r22, r14
     bbe:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     bc2:	8e 01       	movw	r16, r28
     bc4:	0f 5e       	subi	r16, 0xEF	; 239
     bc6:	1f 4f       	sbci	r17, 0xFF	; 255
     bc8:	ce 01       	movw	r24, r28
     bca:	05 96       	adiw	r24, 0x05	; 5
     bcc:	b8 01       	movw	r22, r16
     bce:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     bd2:	89 85       	ldd	r24, Y+9	; 0x09
     bd4:	82 30       	cpi	r24, 0x02	; 2
     bd6:	40 f0       	brcs	.+16     	; 0xbe8 <__ltsf2+0x56>
     bd8:	89 89       	ldd	r24, Y+17	; 0x11
     bda:	82 30       	cpi	r24, 0x02	; 2
     bdc:	28 f0       	brcs	.+10     	; 0xbe8 <__ltsf2+0x56>
     bde:	c7 01       	movw	r24, r14
     be0:	b8 01       	movw	r22, r16
     be2:	0e 94 9a 07 	call	0xf34	; 0xf34 <__fpcmp_parts_f>
     be6:	01 c0       	rjmp	.+2      	; 0xbea <__ltsf2+0x58>
     be8:	81 e0       	ldi	r24, 0x01	; 1
     bea:	68 96       	adiw	r28, 0x18	; 24
     bec:	e6 e0       	ldi	r30, 0x06	; 6
     bee:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__epilogue_restores__+0x18>

00000bf2 <__fixsfsi>:
     bf2:	ac e0       	ldi	r26, 0x0C	; 12
     bf4:	b0 e0       	ldi	r27, 0x00	; 0
     bf6:	ef ef       	ldi	r30, 0xFF	; 255
     bf8:	f5 e0       	ldi	r31, 0x05	; 5
     bfa:	0c 94 03 08 	jmp	0x1006	; 0x1006 <__prologue_saves__+0x20>
     bfe:	69 83       	std	Y+1, r22	; 0x01
     c00:	7a 83       	std	Y+2, r23	; 0x02
     c02:	8b 83       	std	Y+3, r24	; 0x03
     c04:	9c 83       	std	Y+4, r25	; 0x04
     c06:	ce 01       	movw	r24, r28
     c08:	01 96       	adiw	r24, 0x01	; 1
     c0a:	be 01       	movw	r22, r28
     c0c:	6b 5f       	subi	r22, 0xFB	; 251
     c0e:	7f 4f       	sbci	r23, 0xFF	; 255
     c10:	0e 94 22 07 	call	0xe44	; 0xe44 <__unpack_f>
     c14:	8d 81       	ldd	r24, Y+5	; 0x05
     c16:	82 30       	cpi	r24, 0x02	; 2
     c18:	61 f1       	breq	.+88     	; 0xc72 <__fixsfsi+0x80>
     c1a:	82 30       	cpi	r24, 0x02	; 2
     c1c:	50 f1       	brcs	.+84     	; 0xc72 <__fixsfsi+0x80>
     c1e:	84 30       	cpi	r24, 0x04	; 4
     c20:	21 f4       	brne	.+8      	; 0xc2a <__fixsfsi+0x38>
     c22:	8e 81       	ldd	r24, Y+6	; 0x06
     c24:	88 23       	and	r24, r24
     c26:	51 f1       	breq	.+84     	; 0xc7c <__fixsfsi+0x8a>
     c28:	2e c0       	rjmp	.+92     	; 0xc86 <__fixsfsi+0x94>
     c2a:	2f 81       	ldd	r18, Y+7	; 0x07
     c2c:	38 85       	ldd	r19, Y+8	; 0x08
     c2e:	37 fd       	sbrc	r19, 7
     c30:	20 c0       	rjmp	.+64     	; 0xc72 <__fixsfsi+0x80>
     c32:	6e 81       	ldd	r22, Y+6	; 0x06
     c34:	2f 31       	cpi	r18, 0x1F	; 31
     c36:	31 05       	cpc	r19, r1
     c38:	1c f0       	brlt	.+6      	; 0xc40 <__fixsfsi+0x4e>
     c3a:	66 23       	and	r22, r22
     c3c:	f9 f0       	breq	.+62     	; 0xc7c <__fixsfsi+0x8a>
     c3e:	23 c0       	rjmp	.+70     	; 0xc86 <__fixsfsi+0x94>
     c40:	8e e1       	ldi	r24, 0x1E	; 30
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	82 1b       	sub	r24, r18
     c46:	93 0b       	sbc	r25, r19
     c48:	29 85       	ldd	r18, Y+9	; 0x09
     c4a:	3a 85       	ldd	r19, Y+10	; 0x0a
     c4c:	4b 85       	ldd	r20, Y+11	; 0x0b
     c4e:	5c 85       	ldd	r21, Y+12	; 0x0c
     c50:	04 c0       	rjmp	.+8      	; 0xc5a <__fixsfsi+0x68>
     c52:	56 95       	lsr	r21
     c54:	47 95       	ror	r20
     c56:	37 95       	ror	r19
     c58:	27 95       	ror	r18
     c5a:	8a 95       	dec	r24
     c5c:	d2 f7       	brpl	.-12     	; 0xc52 <__fixsfsi+0x60>
     c5e:	66 23       	and	r22, r22
     c60:	b1 f0       	breq	.+44     	; 0xc8e <__fixsfsi+0x9c>
     c62:	50 95       	com	r21
     c64:	40 95       	com	r20
     c66:	30 95       	com	r19
     c68:	21 95       	neg	r18
     c6a:	3f 4f       	sbci	r19, 0xFF	; 255
     c6c:	4f 4f       	sbci	r20, 0xFF	; 255
     c6e:	5f 4f       	sbci	r21, 0xFF	; 255
     c70:	0e c0       	rjmp	.+28     	; 0xc8e <__fixsfsi+0x9c>
     c72:	20 e0       	ldi	r18, 0x00	; 0
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	40 e0       	ldi	r20, 0x00	; 0
     c78:	50 e0       	ldi	r21, 0x00	; 0
     c7a:	09 c0       	rjmp	.+18     	; 0xc8e <__fixsfsi+0x9c>
     c7c:	2f ef       	ldi	r18, 0xFF	; 255
     c7e:	3f ef       	ldi	r19, 0xFF	; 255
     c80:	4f ef       	ldi	r20, 0xFF	; 255
     c82:	5f e7       	ldi	r21, 0x7F	; 127
     c84:	04 c0       	rjmp	.+8      	; 0xc8e <__fixsfsi+0x9c>
     c86:	20 e0       	ldi	r18, 0x00	; 0
     c88:	30 e0       	ldi	r19, 0x00	; 0
     c8a:	40 e0       	ldi	r20, 0x00	; 0
     c8c:	50 e8       	ldi	r21, 0x80	; 128
     c8e:	b9 01       	movw	r22, r18
     c90:	ca 01       	movw	r24, r20
     c92:	2c 96       	adiw	r28, 0x0c	; 12
     c94:	e2 e0       	ldi	r30, 0x02	; 2
     c96:	0c 94 1f 08 	jmp	0x103e	; 0x103e <__epilogue_restores__+0x20>

00000c9a <__pack_f>:
     c9a:	df 92       	push	r13
     c9c:	ef 92       	push	r14
     c9e:	ff 92       	push	r15
     ca0:	0f 93       	push	r16
     ca2:	1f 93       	push	r17
     ca4:	fc 01       	movw	r30, r24
     ca6:	e4 80       	ldd	r14, Z+4	; 0x04
     ca8:	f5 80       	ldd	r15, Z+5	; 0x05
     caa:	06 81       	ldd	r16, Z+6	; 0x06
     cac:	17 81       	ldd	r17, Z+7	; 0x07
     cae:	d1 80       	ldd	r13, Z+1	; 0x01
     cb0:	80 81       	ld	r24, Z
     cb2:	82 30       	cpi	r24, 0x02	; 2
     cb4:	48 f4       	brcc	.+18     	; 0xcc8 <__pack_f+0x2e>
     cb6:	80 e0       	ldi	r24, 0x00	; 0
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	a0 e1       	ldi	r26, 0x10	; 16
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	e8 2a       	or	r14, r24
     cc0:	f9 2a       	or	r15, r25
     cc2:	0a 2b       	or	r16, r26
     cc4:	1b 2b       	or	r17, r27
     cc6:	a5 c0       	rjmp	.+330    	; 0xe12 <__pack_f+0x178>
     cc8:	84 30       	cpi	r24, 0x04	; 4
     cca:	09 f4       	brne	.+2      	; 0xcce <__pack_f+0x34>
     ccc:	9f c0       	rjmp	.+318    	; 0xe0c <__pack_f+0x172>
     cce:	82 30       	cpi	r24, 0x02	; 2
     cd0:	21 f4       	brne	.+8      	; 0xcda <__pack_f+0x40>
     cd2:	ee 24       	eor	r14, r14
     cd4:	ff 24       	eor	r15, r15
     cd6:	87 01       	movw	r16, r14
     cd8:	05 c0       	rjmp	.+10     	; 0xce4 <__pack_f+0x4a>
     cda:	e1 14       	cp	r14, r1
     cdc:	f1 04       	cpc	r15, r1
     cde:	01 05       	cpc	r16, r1
     ce0:	11 05       	cpc	r17, r1
     ce2:	19 f4       	brne	.+6      	; 0xcea <__pack_f+0x50>
     ce4:	e0 e0       	ldi	r30, 0x00	; 0
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	96 c0       	rjmp	.+300    	; 0xe16 <__pack_f+0x17c>
     cea:	62 81       	ldd	r22, Z+2	; 0x02
     cec:	73 81       	ldd	r23, Z+3	; 0x03
     cee:	9f ef       	ldi	r25, 0xFF	; 255
     cf0:	62 38       	cpi	r22, 0x82	; 130
     cf2:	79 07       	cpc	r23, r25
     cf4:	0c f0       	brlt	.+2      	; 0xcf8 <__pack_f+0x5e>
     cf6:	5b c0       	rjmp	.+182    	; 0xdae <__pack_f+0x114>
     cf8:	22 e8       	ldi	r18, 0x82	; 130
     cfa:	3f ef       	ldi	r19, 0xFF	; 255
     cfc:	26 1b       	sub	r18, r22
     cfe:	37 0b       	sbc	r19, r23
     d00:	2a 31       	cpi	r18, 0x1A	; 26
     d02:	31 05       	cpc	r19, r1
     d04:	2c f0       	brlt	.+10     	; 0xd10 <__pack_f+0x76>
     d06:	20 e0       	ldi	r18, 0x00	; 0
     d08:	30 e0       	ldi	r19, 0x00	; 0
     d0a:	40 e0       	ldi	r20, 0x00	; 0
     d0c:	50 e0       	ldi	r21, 0x00	; 0
     d0e:	2a c0       	rjmp	.+84     	; 0xd64 <__pack_f+0xca>
     d10:	b8 01       	movw	r22, r16
     d12:	a7 01       	movw	r20, r14
     d14:	02 2e       	mov	r0, r18
     d16:	04 c0       	rjmp	.+8      	; 0xd20 <__pack_f+0x86>
     d18:	76 95       	lsr	r23
     d1a:	67 95       	ror	r22
     d1c:	57 95       	ror	r21
     d1e:	47 95       	ror	r20
     d20:	0a 94       	dec	r0
     d22:	d2 f7       	brpl	.-12     	; 0xd18 <__pack_f+0x7e>
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	a0 e0       	ldi	r26, 0x00	; 0
     d2a:	b0 e0       	ldi	r27, 0x00	; 0
     d2c:	04 c0       	rjmp	.+8      	; 0xd36 <__pack_f+0x9c>
     d2e:	88 0f       	add	r24, r24
     d30:	99 1f       	adc	r25, r25
     d32:	aa 1f       	adc	r26, r26
     d34:	bb 1f       	adc	r27, r27
     d36:	2a 95       	dec	r18
     d38:	d2 f7       	brpl	.-12     	; 0xd2e <__pack_f+0x94>
     d3a:	01 97       	sbiw	r24, 0x01	; 1
     d3c:	a1 09       	sbc	r26, r1
     d3e:	b1 09       	sbc	r27, r1
     d40:	8e 21       	and	r24, r14
     d42:	9f 21       	and	r25, r15
     d44:	a0 23       	and	r26, r16
     d46:	b1 23       	and	r27, r17
     d48:	00 97       	sbiw	r24, 0x00	; 0
     d4a:	a1 05       	cpc	r26, r1
     d4c:	b1 05       	cpc	r27, r1
     d4e:	21 f0       	breq	.+8      	; 0xd58 <__pack_f+0xbe>
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	a0 e0       	ldi	r26, 0x00	; 0
     d56:	b0 e0       	ldi	r27, 0x00	; 0
     d58:	9a 01       	movw	r18, r20
     d5a:	ab 01       	movw	r20, r22
     d5c:	28 2b       	or	r18, r24
     d5e:	39 2b       	or	r19, r25
     d60:	4a 2b       	or	r20, r26
     d62:	5b 2b       	or	r21, r27
     d64:	da 01       	movw	r26, r20
     d66:	c9 01       	movw	r24, r18
     d68:	8f 77       	andi	r24, 0x7F	; 127
     d6a:	90 70       	andi	r25, 0x00	; 0
     d6c:	a0 70       	andi	r26, 0x00	; 0
     d6e:	b0 70       	andi	r27, 0x00	; 0
     d70:	80 34       	cpi	r24, 0x40	; 64
     d72:	91 05       	cpc	r25, r1
     d74:	a1 05       	cpc	r26, r1
     d76:	b1 05       	cpc	r27, r1
     d78:	39 f4       	brne	.+14     	; 0xd88 <__pack_f+0xee>
     d7a:	27 ff       	sbrs	r18, 7
     d7c:	09 c0       	rjmp	.+18     	; 0xd90 <__pack_f+0xf6>
     d7e:	20 5c       	subi	r18, 0xC0	; 192
     d80:	3f 4f       	sbci	r19, 0xFF	; 255
     d82:	4f 4f       	sbci	r20, 0xFF	; 255
     d84:	5f 4f       	sbci	r21, 0xFF	; 255
     d86:	04 c0       	rjmp	.+8      	; 0xd90 <__pack_f+0xf6>
     d88:	21 5c       	subi	r18, 0xC1	; 193
     d8a:	3f 4f       	sbci	r19, 0xFF	; 255
     d8c:	4f 4f       	sbci	r20, 0xFF	; 255
     d8e:	5f 4f       	sbci	r21, 0xFF	; 255
     d90:	e0 e0       	ldi	r30, 0x00	; 0
     d92:	f0 e0       	ldi	r31, 0x00	; 0
     d94:	20 30       	cpi	r18, 0x00	; 0
     d96:	a0 e0       	ldi	r26, 0x00	; 0
     d98:	3a 07       	cpc	r19, r26
     d9a:	a0 e0       	ldi	r26, 0x00	; 0
     d9c:	4a 07       	cpc	r20, r26
     d9e:	a0 e4       	ldi	r26, 0x40	; 64
     da0:	5a 07       	cpc	r21, r26
     da2:	10 f0       	brcs	.+4      	; 0xda8 <__pack_f+0x10e>
     da4:	e1 e0       	ldi	r30, 0x01	; 1
     da6:	f0 e0       	ldi	r31, 0x00	; 0
     da8:	79 01       	movw	r14, r18
     daa:	8a 01       	movw	r16, r20
     dac:	27 c0       	rjmp	.+78     	; 0xdfc <__pack_f+0x162>
     dae:	60 38       	cpi	r22, 0x80	; 128
     db0:	71 05       	cpc	r23, r1
     db2:	64 f5       	brge	.+88     	; 0xe0c <__pack_f+0x172>
     db4:	fb 01       	movw	r30, r22
     db6:	e1 58       	subi	r30, 0x81	; 129
     db8:	ff 4f       	sbci	r31, 0xFF	; 255
     dba:	d8 01       	movw	r26, r16
     dbc:	c7 01       	movw	r24, r14
     dbe:	8f 77       	andi	r24, 0x7F	; 127
     dc0:	90 70       	andi	r25, 0x00	; 0
     dc2:	a0 70       	andi	r26, 0x00	; 0
     dc4:	b0 70       	andi	r27, 0x00	; 0
     dc6:	80 34       	cpi	r24, 0x40	; 64
     dc8:	91 05       	cpc	r25, r1
     dca:	a1 05       	cpc	r26, r1
     dcc:	b1 05       	cpc	r27, r1
     dce:	39 f4       	brne	.+14     	; 0xdde <__pack_f+0x144>
     dd0:	e7 fe       	sbrs	r14, 7
     dd2:	0d c0       	rjmp	.+26     	; 0xdee <__pack_f+0x154>
     dd4:	80 e4       	ldi	r24, 0x40	; 64
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	a0 e0       	ldi	r26, 0x00	; 0
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	04 c0       	rjmp	.+8      	; 0xde6 <__pack_f+0x14c>
     dde:	8f e3       	ldi	r24, 0x3F	; 63
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	a0 e0       	ldi	r26, 0x00	; 0
     de4:	b0 e0       	ldi	r27, 0x00	; 0
     de6:	e8 0e       	add	r14, r24
     de8:	f9 1e       	adc	r15, r25
     dea:	0a 1f       	adc	r16, r26
     dec:	1b 1f       	adc	r17, r27
     dee:	17 ff       	sbrs	r17, 7
     df0:	05 c0       	rjmp	.+10     	; 0xdfc <__pack_f+0x162>
     df2:	16 95       	lsr	r17
     df4:	07 95       	ror	r16
     df6:	f7 94       	ror	r15
     df8:	e7 94       	ror	r14
     dfa:	31 96       	adiw	r30, 0x01	; 1
     dfc:	87 e0       	ldi	r24, 0x07	; 7
     dfe:	16 95       	lsr	r17
     e00:	07 95       	ror	r16
     e02:	f7 94       	ror	r15
     e04:	e7 94       	ror	r14
     e06:	8a 95       	dec	r24
     e08:	d1 f7       	brne	.-12     	; 0xdfe <__pack_f+0x164>
     e0a:	05 c0       	rjmp	.+10     	; 0xe16 <__pack_f+0x17c>
     e0c:	ee 24       	eor	r14, r14
     e0e:	ff 24       	eor	r15, r15
     e10:	87 01       	movw	r16, r14
     e12:	ef ef       	ldi	r30, 0xFF	; 255
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	6e 2f       	mov	r22, r30
     e18:	67 95       	ror	r22
     e1a:	66 27       	eor	r22, r22
     e1c:	67 95       	ror	r22
     e1e:	90 2f       	mov	r25, r16
     e20:	9f 77       	andi	r25, 0x7F	; 127
     e22:	d7 94       	ror	r13
     e24:	dd 24       	eor	r13, r13
     e26:	d7 94       	ror	r13
     e28:	8e 2f       	mov	r24, r30
     e2a:	86 95       	lsr	r24
     e2c:	49 2f       	mov	r20, r25
     e2e:	46 2b       	or	r20, r22
     e30:	58 2f       	mov	r21, r24
     e32:	5d 29       	or	r21, r13
     e34:	b7 01       	movw	r22, r14
     e36:	ca 01       	movw	r24, r20
     e38:	1f 91       	pop	r17
     e3a:	0f 91       	pop	r16
     e3c:	ff 90       	pop	r15
     e3e:	ef 90       	pop	r14
     e40:	df 90       	pop	r13
     e42:	08 95       	ret

00000e44 <__unpack_f>:
     e44:	fc 01       	movw	r30, r24
     e46:	db 01       	movw	r26, r22
     e48:	40 81       	ld	r20, Z
     e4a:	51 81       	ldd	r21, Z+1	; 0x01
     e4c:	22 81       	ldd	r18, Z+2	; 0x02
     e4e:	62 2f       	mov	r22, r18
     e50:	6f 77       	andi	r22, 0x7F	; 127
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	22 1f       	adc	r18, r18
     e56:	22 27       	eor	r18, r18
     e58:	22 1f       	adc	r18, r18
     e5a:	93 81       	ldd	r25, Z+3	; 0x03
     e5c:	89 2f       	mov	r24, r25
     e5e:	88 0f       	add	r24, r24
     e60:	82 2b       	or	r24, r18
     e62:	28 2f       	mov	r18, r24
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	99 1f       	adc	r25, r25
     e68:	99 27       	eor	r25, r25
     e6a:	99 1f       	adc	r25, r25
     e6c:	11 96       	adiw	r26, 0x01	; 1
     e6e:	9c 93       	st	X, r25
     e70:	11 97       	sbiw	r26, 0x01	; 1
     e72:	21 15       	cp	r18, r1
     e74:	31 05       	cpc	r19, r1
     e76:	a9 f5       	brne	.+106    	; 0xee2 <__unpack_f+0x9e>
     e78:	41 15       	cp	r20, r1
     e7a:	51 05       	cpc	r21, r1
     e7c:	61 05       	cpc	r22, r1
     e7e:	71 05       	cpc	r23, r1
     e80:	11 f4       	brne	.+4      	; 0xe86 <__unpack_f+0x42>
     e82:	82 e0       	ldi	r24, 0x02	; 2
     e84:	37 c0       	rjmp	.+110    	; 0xef4 <__unpack_f+0xb0>
     e86:	82 e8       	ldi	r24, 0x82	; 130
     e88:	9f ef       	ldi	r25, 0xFF	; 255
     e8a:	13 96       	adiw	r26, 0x03	; 3
     e8c:	9c 93       	st	X, r25
     e8e:	8e 93       	st	-X, r24
     e90:	12 97       	sbiw	r26, 0x02	; 2
     e92:	9a 01       	movw	r18, r20
     e94:	ab 01       	movw	r20, r22
     e96:	67 e0       	ldi	r22, 0x07	; 7
     e98:	22 0f       	add	r18, r18
     e9a:	33 1f       	adc	r19, r19
     e9c:	44 1f       	adc	r20, r20
     e9e:	55 1f       	adc	r21, r21
     ea0:	6a 95       	dec	r22
     ea2:	d1 f7       	brne	.-12     	; 0xe98 <__unpack_f+0x54>
     ea4:	83 e0       	ldi	r24, 0x03	; 3
     ea6:	8c 93       	st	X, r24
     ea8:	0d c0       	rjmp	.+26     	; 0xec4 <__unpack_f+0x80>
     eaa:	22 0f       	add	r18, r18
     eac:	33 1f       	adc	r19, r19
     eae:	44 1f       	adc	r20, r20
     eb0:	55 1f       	adc	r21, r21
     eb2:	12 96       	adiw	r26, 0x02	; 2
     eb4:	8d 91       	ld	r24, X+
     eb6:	9c 91       	ld	r25, X
     eb8:	13 97       	sbiw	r26, 0x03	; 3
     eba:	01 97       	sbiw	r24, 0x01	; 1
     ebc:	13 96       	adiw	r26, 0x03	; 3
     ebe:	9c 93       	st	X, r25
     ec0:	8e 93       	st	-X, r24
     ec2:	12 97       	sbiw	r26, 0x02	; 2
     ec4:	20 30       	cpi	r18, 0x00	; 0
     ec6:	80 e0       	ldi	r24, 0x00	; 0
     ec8:	38 07       	cpc	r19, r24
     eca:	80 e0       	ldi	r24, 0x00	; 0
     ecc:	48 07       	cpc	r20, r24
     ece:	80 e4       	ldi	r24, 0x40	; 64
     ed0:	58 07       	cpc	r21, r24
     ed2:	58 f3       	brcs	.-42     	; 0xeaa <__unpack_f+0x66>
     ed4:	14 96       	adiw	r26, 0x04	; 4
     ed6:	2d 93       	st	X+, r18
     ed8:	3d 93       	st	X+, r19
     eda:	4d 93       	st	X+, r20
     edc:	5c 93       	st	X, r21
     ede:	17 97       	sbiw	r26, 0x07	; 7
     ee0:	08 95       	ret
     ee2:	2f 3f       	cpi	r18, 0xFF	; 255
     ee4:	31 05       	cpc	r19, r1
     ee6:	79 f4       	brne	.+30     	; 0xf06 <__unpack_f+0xc2>
     ee8:	41 15       	cp	r20, r1
     eea:	51 05       	cpc	r21, r1
     eec:	61 05       	cpc	r22, r1
     eee:	71 05       	cpc	r23, r1
     ef0:	19 f4       	brne	.+6      	; 0xef8 <__unpack_f+0xb4>
     ef2:	84 e0       	ldi	r24, 0x04	; 4
     ef4:	8c 93       	st	X, r24
     ef6:	08 95       	ret
     ef8:	64 ff       	sbrs	r22, 4
     efa:	03 c0       	rjmp	.+6      	; 0xf02 <__unpack_f+0xbe>
     efc:	81 e0       	ldi	r24, 0x01	; 1
     efe:	8c 93       	st	X, r24
     f00:	12 c0       	rjmp	.+36     	; 0xf26 <__unpack_f+0xe2>
     f02:	1c 92       	st	X, r1
     f04:	10 c0       	rjmp	.+32     	; 0xf26 <__unpack_f+0xe2>
     f06:	2f 57       	subi	r18, 0x7F	; 127
     f08:	30 40       	sbci	r19, 0x00	; 0
     f0a:	13 96       	adiw	r26, 0x03	; 3
     f0c:	3c 93       	st	X, r19
     f0e:	2e 93       	st	-X, r18
     f10:	12 97       	sbiw	r26, 0x02	; 2
     f12:	83 e0       	ldi	r24, 0x03	; 3
     f14:	8c 93       	st	X, r24
     f16:	87 e0       	ldi	r24, 0x07	; 7
     f18:	44 0f       	add	r20, r20
     f1a:	55 1f       	adc	r21, r21
     f1c:	66 1f       	adc	r22, r22
     f1e:	77 1f       	adc	r23, r23
     f20:	8a 95       	dec	r24
     f22:	d1 f7       	brne	.-12     	; 0xf18 <__unpack_f+0xd4>
     f24:	70 64       	ori	r23, 0x40	; 64
     f26:	14 96       	adiw	r26, 0x04	; 4
     f28:	4d 93       	st	X+, r20
     f2a:	5d 93       	st	X+, r21
     f2c:	6d 93       	st	X+, r22
     f2e:	7c 93       	st	X, r23
     f30:	17 97       	sbiw	r26, 0x07	; 7
     f32:	08 95       	ret

00000f34 <__fpcmp_parts_f>:
     f34:	1f 93       	push	r17
     f36:	dc 01       	movw	r26, r24
     f38:	fb 01       	movw	r30, r22
     f3a:	9c 91       	ld	r25, X
     f3c:	92 30       	cpi	r25, 0x02	; 2
     f3e:	08 f4       	brcc	.+2      	; 0xf42 <__fpcmp_parts_f+0xe>
     f40:	47 c0       	rjmp	.+142    	; 0xfd0 <__fpcmp_parts_f+0x9c>
     f42:	80 81       	ld	r24, Z
     f44:	82 30       	cpi	r24, 0x02	; 2
     f46:	08 f4       	brcc	.+2      	; 0xf4a <__fpcmp_parts_f+0x16>
     f48:	43 c0       	rjmp	.+134    	; 0xfd0 <__fpcmp_parts_f+0x9c>
     f4a:	94 30       	cpi	r25, 0x04	; 4
     f4c:	51 f4       	brne	.+20     	; 0xf62 <__fpcmp_parts_f+0x2e>
     f4e:	11 96       	adiw	r26, 0x01	; 1
     f50:	1c 91       	ld	r17, X
     f52:	84 30       	cpi	r24, 0x04	; 4
     f54:	99 f5       	brne	.+102    	; 0xfbc <__fpcmp_parts_f+0x88>
     f56:	81 81       	ldd	r24, Z+1	; 0x01
     f58:	68 2f       	mov	r22, r24
     f5a:	70 e0       	ldi	r23, 0x00	; 0
     f5c:	61 1b       	sub	r22, r17
     f5e:	71 09       	sbc	r23, r1
     f60:	3f c0       	rjmp	.+126    	; 0xfe0 <__fpcmp_parts_f+0xac>
     f62:	84 30       	cpi	r24, 0x04	; 4
     f64:	21 f0       	breq	.+8      	; 0xf6e <__fpcmp_parts_f+0x3a>
     f66:	92 30       	cpi	r25, 0x02	; 2
     f68:	31 f4       	brne	.+12     	; 0xf76 <__fpcmp_parts_f+0x42>
     f6a:	82 30       	cpi	r24, 0x02	; 2
     f6c:	b9 f1       	breq	.+110    	; 0xfdc <__fpcmp_parts_f+0xa8>
     f6e:	81 81       	ldd	r24, Z+1	; 0x01
     f70:	88 23       	and	r24, r24
     f72:	89 f1       	breq	.+98     	; 0xfd6 <__fpcmp_parts_f+0xa2>
     f74:	2d c0       	rjmp	.+90     	; 0xfd0 <__fpcmp_parts_f+0x9c>
     f76:	11 96       	adiw	r26, 0x01	; 1
     f78:	1c 91       	ld	r17, X
     f7a:	11 97       	sbiw	r26, 0x01	; 1
     f7c:	82 30       	cpi	r24, 0x02	; 2
     f7e:	f1 f0       	breq	.+60     	; 0xfbc <__fpcmp_parts_f+0x88>
     f80:	81 81       	ldd	r24, Z+1	; 0x01
     f82:	18 17       	cp	r17, r24
     f84:	d9 f4       	brne	.+54     	; 0xfbc <__fpcmp_parts_f+0x88>
     f86:	12 96       	adiw	r26, 0x02	; 2
     f88:	2d 91       	ld	r18, X+
     f8a:	3c 91       	ld	r19, X
     f8c:	13 97       	sbiw	r26, 0x03	; 3
     f8e:	82 81       	ldd	r24, Z+2	; 0x02
     f90:	93 81       	ldd	r25, Z+3	; 0x03
     f92:	82 17       	cp	r24, r18
     f94:	93 07       	cpc	r25, r19
     f96:	94 f0       	brlt	.+36     	; 0xfbc <__fpcmp_parts_f+0x88>
     f98:	28 17       	cp	r18, r24
     f9a:	39 07       	cpc	r19, r25
     f9c:	bc f0       	brlt	.+46     	; 0xfcc <__fpcmp_parts_f+0x98>
     f9e:	14 96       	adiw	r26, 0x04	; 4
     fa0:	8d 91       	ld	r24, X+
     fa2:	9d 91       	ld	r25, X+
     fa4:	0d 90       	ld	r0, X+
     fa6:	bc 91       	ld	r27, X
     fa8:	a0 2d       	mov	r26, r0
     faa:	24 81       	ldd	r18, Z+4	; 0x04
     fac:	35 81       	ldd	r19, Z+5	; 0x05
     fae:	46 81       	ldd	r20, Z+6	; 0x06
     fb0:	57 81       	ldd	r21, Z+7	; 0x07
     fb2:	28 17       	cp	r18, r24
     fb4:	39 07       	cpc	r19, r25
     fb6:	4a 07       	cpc	r20, r26
     fb8:	5b 07       	cpc	r21, r27
     fba:	18 f4       	brcc	.+6      	; 0xfc2 <__fpcmp_parts_f+0x8e>
     fbc:	11 23       	and	r17, r17
     fbe:	41 f0       	breq	.+16     	; 0xfd0 <__fpcmp_parts_f+0x9c>
     fc0:	0a c0       	rjmp	.+20     	; 0xfd6 <__fpcmp_parts_f+0xa2>
     fc2:	82 17       	cp	r24, r18
     fc4:	93 07       	cpc	r25, r19
     fc6:	a4 07       	cpc	r26, r20
     fc8:	b5 07       	cpc	r27, r21
     fca:	40 f4       	brcc	.+16     	; 0xfdc <__fpcmp_parts_f+0xa8>
     fcc:	11 23       	and	r17, r17
     fce:	19 f0       	breq	.+6      	; 0xfd6 <__fpcmp_parts_f+0xa2>
     fd0:	61 e0       	ldi	r22, 0x01	; 1
     fd2:	70 e0       	ldi	r23, 0x00	; 0
     fd4:	05 c0       	rjmp	.+10     	; 0xfe0 <__fpcmp_parts_f+0xac>
     fd6:	6f ef       	ldi	r22, 0xFF	; 255
     fd8:	7f ef       	ldi	r23, 0xFF	; 255
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <__fpcmp_parts_f+0xac>
     fdc:	60 e0       	ldi	r22, 0x00	; 0
     fde:	70 e0       	ldi	r23, 0x00	; 0
     fe0:	cb 01       	movw	r24, r22
     fe2:	1f 91       	pop	r17
     fe4:	08 95       	ret

00000fe6 <__prologue_saves__>:
     fe6:	2f 92       	push	r2
     fe8:	3f 92       	push	r3
     fea:	4f 92       	push	r4
     fec:	5f 92       	push	r5
     fee:	6f 92       	push	r6
     ff0:	7f 92       	push	r7
     ff2:	8f 92       	push	r8
     ff4:	9f 92       	push	r9
     ff6:	af 92       	push	r10
     ff8:	bf 92       	push	r11
     ffa:	cf 92       	push	r12
     ffc:	df 92       	push	r13
     ffe:	ef 92       	push	r14
    1000:	ff 92       	push	r15
    1002:	0f 93       	push	r16
    1004:	1f 93       	push	r17
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	cd b7       	in	r28, 0x3d	; 61
    100c:	de b7       	in	r29, 0x3e	; 62
    100e:	ca 1b       	sub	r28, r26
    1010:	db 0b       	sbc	r29, r27
    1012:	0f b6       	in	r0, 0x3f	; 63
    1014:	f8 94       	cli
    1016:	de bf       	out	0x3e, r29	; 62
    1018:	0f be       	out	0x3f, r0	; 63
    101a:	cd bf       	out	0x3d, r28	; 61
    101c:	09 94       	ijmp

0000101e <__epilogue_restores__>:
    101e:	2a 88       	ldd	r2, Y+18	; 0x12
    1020:	39 88       	ldd	r3, Y+17	; 0x11
    1022:	48 88       	ldd	r4, Y+16	; 0x10
    1024:	5f 84       	ldd	r5, Y+15	; 0x0f
    1026:	6e 84       	ldd	r6, Y+14	; 0x0e
    1028:	7d 84       	ldd	r7, Y+13	; 0x0d
    102a:	8c 84       	ldd	r8, Y+12	; 0x0c
    102c:	9b 84       	ldd	r9, Y+11	; 0x0b
    102e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1030:	b9 84       	ldd	r11, Y+9	; 0x09
    1032:	c8 84       	ldd	r12, Y+8	; 0x08
    1034:	df 80       	ldd	r13, Y+7	; 0x07
    1036:	ee 80       	ldd	r14, Y+6	; 0x06
    1038:	fd 80       	ldd	r15, Y+5	; 0x05
    103a:	0c 81       	ldd	r16, Y+4	; 0x04
    103c:	1b 81       	ldd	r17, Y+3	; 0x03
    103e:	aa 81       	ldd	r26, Y+2	; 0x02
    1040:	b9 81       	ldd	r27, Y+1	; 0x01
    1042:	ce 0f       	add	r28, r30
    1044:	d1 1d       	adc	r29, r1
    1046:	0f b6       	in	r0, 0x3f	; 63
    1048:	f8 94       	cli
    104a:	de bf       	out	0x3e, r29	; 62
    104c:	0f be       	out	0x3f, r0	; 63
    104e:	cd bf       	out	0x3d, r28	; 61
    1050:	ed 01       	movw	r28, r26
    1052:	08 95       	ret

00001054 <_exit>:
    1054:	f8 94       	cli

00001056 <__stop_program>:
    1056:	ff cf       	rjmp	.-2      	; 0x1056 <__stop_program>
